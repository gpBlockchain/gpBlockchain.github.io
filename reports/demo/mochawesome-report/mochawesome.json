{
  "stats": {
    "suites": 3,
    "tests": 4,
    "passes": 3,
    "pending": 0,
    "failures": 1,
    "start": "2022-06-02T05:34:48.127Z",
    "end": "2022-06-02T05:35:46.748Z",
    "duration": 58621,
    "testsRegistered": 219,
    "passPercent": 1.36986301369863,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 212,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "4cece581-40f6-4e24-9895-e30092c06596",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "097ce311-75e1-4638-8812-be31aa7c1c6d",
          "title": "Multicall_bug",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/bugs/assertBug.js",
          "file": "/test/bugs/assertBug.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Multicall_bug\"",
              "fullTitle": "Multicall_bug \"before all\" hook in \"Multicall_bug\"",
              "timedOut": false,
              "duration": 1651,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "contractInfo = await ethers.getContractFactory(\"CallReceiverMock\");",
              "err": {},
              "uuid": "9e55c56b-d804-4dd8-b684-cd86202c2676",
              "parentUUID": "097ce311-75e1-4638-8812-be31aa7c1c6d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "reverts when the called function throws",
              "fullTitle": "Multicall_bug reverts when the called function throws",
              "timedOut": false,
              "duration": 7706,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"begin\")\ncontract = await contractInfo.deploy();\nawait contract.deployed();\nconsole.log(\"invoke assert method\")\ntry{\n    let tx = await contract.mockFunctionThrows();\n    await tx.wait()\n}catch (e){\n    console.log(\"e.toString:\",e.toString())\n    expect(e.toString()).to.be.contains(\"UNPREDICTABLE_GAS_LIMIT\")\n    return\n}\nexpect(\"\").to.be.contains(\"UNPREDICTABLE_GAS_LIMIT\")",
              "err": {},
              "uuid": "6f0e1b00-0349-4ecd-b617-4b7bb91ed89c",
              "parentUUID": "097ce311-75e1-4638-8812-be31aa7c1c6d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6f0e1b00-0349-4ecd-b617-4b7bb91ed89c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7706,
          "root": false,
          "rootEmpty": false,
          "_timeout": 1000000
        },
        {
          "uuid": "ba9133e9-ab5e-4bf2-a23e-26dd170a2adf",
          "title": "blockhash_bug ",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/bugs/blockhash_bug.js",
          "file": "/test/bugs/blockhash_bug.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "blockhash_bug  \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "blockInfoContract = await ethers.getContractFactory(\"BlockMsgContract\");",
              "err": {},
              "uuid": "f35d2660-995a-49ed-9152-0bacc464ac1a",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "blockhash",
              "fullTitle": "blockhash_bug  blockhash",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "contract = await blockInfoContract.deploy();\nawait contract.deployed();\nconsole.log(\"contractAddress:\", contract.address);\nlet receipt = await contract.getBlockHashEventTopre256View()\nlet height = await ethers.provider.getBlockNumber()\nfor (let i = 0; i < receipt.length; i++) {\n    if (height + 1 - i < 0) {\n        //节点区块hash不够\n        expect(receipt[i]).to.be.equal(\"0x0000000000000000000000000000000000000000000000000000000000000000\");\n        continue;\n    }\n    if (i < 2 || i >= 258) {\n        //之前256个区块的hash不为0\n        expect(receipt[i]).to.be.equal(\"0x0000000000000000000000000000000000000000000000000000000000000000\");\n    } else {\n        // 当前区块hash和未来区块hash为0x0\n        // 256之后的区块hash返回0x0\n        expect(receipt[i]).to.be.not.equal(\"0x0000000000000000000000000000000000000000000000000000000000000000\");\n    }\n}",
              "err": {},
              "uuid": "501808bb-6624-4092-af04-1dae551687a1",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "501808bb-6624-4092-af04-1dae551687a1"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "1192f59c-73b6-4b25-aa32-9f9f9507b052",
          "title": "BugProxyTest ",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/bugs/BugProxyTest.bug.test.js",
          "file": "/test/bugs/BugProxyTest.bug.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "BugProxyTest  \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "contractInfo = await ethers.getContractFactory(\"BugProxyTest\");",
              "err": {},
              "uuid": "933dc111-3e04-4079-b98d-918118d8bbe0",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "TestProxy",
              "fullTitle": "BugProxyTest  TestProxy",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"1. deploy BugProxyTest contract \")\ncontract = await contractInfo.deploy();\nawait contract.deployed();\nconsole.log(\"2. invoke BugProxyTest.TestProxy()\")\nlet tx = await contract.TestProxy();\nlet response = await tx.wait()\nconsole.log(\"3. proxyAddress = BugProxyTest.proxy()\")\nlet proxyAddress = await  contract.proxy();\nlet Implementation2ContractInfo = await ethers.getContractFactory(\"Implementation2\");\nlet account = await ethers.getSigners();\nconsole.log(\"4. invoke Implementation2(proxyAddress).getValue()\")\nlet Implementation2ContractProxy = Implementation2ContractInfo.connect(account[0]).attach(proxyAddress);\nlet getValue = await Implementation2ContractProxy.getValue();\nconsole.log(\"getValue:\",getValue)\nconsole.log(\"5. invoke Implementation2(proxyAddress).setValue(433)\")\ntx = await Implementation2ContractProxy.setValue(433);\nawait tx.wait()\ngetValue = await Implementation2ContractProxy.getValue();\nconsole.log(\"getValue:\",getValue)\nexpect(getValue.toString()).to.be.equal(\"433\");",
              "err": {},
              "uuid": "afdb72bd-6ac4-49b4-bdc3-20a42229dffa",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "mock test",
              "fullTitle": "BugProxyTest  mock test",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//\nconsole.log(\"Implementation2 ---\")\nlet Implementation2ContractInfo = await ethers.getContractFactory(\"Implementation2\");\nlet Implementation2ContractInfoContract = await Implementation2ContractInfo.deploy()\nawait Implementation2ContractInfoContract.deployed();\nlet TransparentUpgradeableProxyContractInfo = await ethers.getContractFactory(\"TransparentUpgradeableProxy\");\nlet TransparentUpgradeableProxyContract = await TransparentUpgradeableProxyContractInfo.deploy(Implementation2ContractInfoContract.address,\"0x56109495D7A3D94F5e7b80280679b339E87BC237\",\"0x\");\nawait TransparentUpgradeableProxyContract.deployed();\nlet account = await ethers.getSigners();\nlet Implementation2ContractProxy = Implementation2ContractInfo.connect(account[0]).attach(TransparentUpgradeableProxyContract.address);\nlet tx = await Implementation2ContractProxy.setValue(42);\nconsole.log(\"Implementation2ContractProxy.setValue(42);\");\nlet response = await tx.wait()\nconsole.log(\"tx response :\",response)\nresponse = await Implementation2ContractProxy.getValue();\nconsole.log(\"response:\",response)\nexpect(response.toString()).to.be.equal(\"42\")",
              "err": {},
              "uuid": "9a4e8663-986b-46a5-b891-712b33c7500c",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "afdb72bd-6ac4-49b4-bdc3-20a42229dffa",
            "9a4e8663-986b-46a5-b891-712b33c7500c"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 1000000
        },
        {
          "uuid": "56f8a70e-1c3b-46e1-9f2a-014002b962ae",
          "title": "MockCall ",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/bugs/ContextMock.Test.bug.js",
          "file": "/test/bugs/ContextMock.Test.bug.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "MockCall  \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "CmContractInfo = await ethers.getContractFactory(\"ContextMock\");\nCMockCallerInfo = await ethers.getContractFactory(\"ContextMockCaller\");",
              "err": {},
              "uuid": "a626636d-3791-4607-9302-da423bb2275f",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns the transaction sender when from another contract",
              "fullTitle": "MockCall  returns the transaction sender when from another contract",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"-----begin------\")\nlet ccContract = await CmContractInfo.deploy()\nlet ccCallContract = await CMockCallerInfo.deploy();\nawait ccContract.deployed();\nawait ccCallContract.deployed();\nconsole.log(\"ccContract address:\",ccCallContract.address)\nconsole.log(\"ccCallContract address:\",ccCallContract.address)\nlet tx = await ccCallContract.callData(ccContract.address,1,\"1234\")\nlet response = await tx.wait();\nconsole.log(\"response:\",response)",
              "err": {},
              "uuid": "242a582f-b9d7-441a-9dcc-30ecab0ba234",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "242a582f-b9d7-441a-9dcc-30ecab0ba234"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "c52399d7-c254-4352-8b28-d731056edb96",
          "title": "create2.bug.test.js ",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/bugs/create2_rg_test.js",
          "file": "/test/bugs/create2_rg_test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "create2 ",
              "fullTitle": "create2.bug.test.js  create2 ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//create2_test\nlet create2Info = await ethers.getContractFactory(\"create2_test\");\nconsole.log(\"1. deploy contract\")\nlet create2Contract = await create2Info.deploy()\nawait  create2Contract.deployed()\nconsole.log(\"2. get create2 address\")\nlet address = await  create2Contract.getDeployAddress(1);\nconsole.log(\"get address:\",address)\n// console.log(\"3. register address\")\nconsole.log(\"4. create address\")\nlet tx = await create2Contract.deployContract(1)\nlet response = await tx.wait()\nconsole.log(\"response:\",response.events[2].args[1])",
              "err": {},
              "uuid": "c8b37e5c-2b56-4e69-bf2b-1a7be2177eac",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "query result",
              "fullTitle": "create2.bug.test.js  query result",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// conn\nlet create2Info = await ethers.getContractFactory(\"create2_test\");\nlet account = await ethers.getSigners();\nlet c2_address = \"0xc4e616b5694cff04cae5b9290e6868c2beb3cd6f\";\nlet create2Contract = create2Info.connect(account[0]).attach(c2_address);\nconsole.log(\"2. get create2 address\")\nlet address = await  create2Contract.getDeployAddress(222111);\nconsole.log(\"get address:\",address)\n// console.log(\"3. register address\")\nconsole.log(\"4. create address\")\nlet tx = await create2Contract.deployContract(222111)\nlet response = await tx.wait()\nconsole.log(\"response:\",response.events[2].args[1])",
              "err": {},
              "uuid": "2192349b-239d-4eb1-9f79-e6b49431c357",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "TestContract getFoo",
              "fullTitle": "create2.bug.test.js  TestContract getFoo",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//0xE039F4Fd8e74b0aeFdBF61Ca6D56C05BcAC30772\n        let tContractInfo = await ethers.getContractFactory(\"TestContract\");\n        let account = await ethers.getSigners();\n        let tAddress = \"0xF4C9299642A97B1552aA03804553059527f5183e\";\n        let tContract = tContractInfo.connect(account[0]).attach(tAddress);\n        let response = await tContract.getFoo()\n        console.log(\"response:\",response)",
              "err": {},
              "uuid": "6418bc86-37e9-47ae-9c5d-e12296242b31",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "c8b37e5c-2b56-4e69-bf2b-1a7be2177eac",
            "2192349b-239d-4eb1-9f79-e6b49431c357",
            "6418bc86-37e9-47ae-9c5d-e12296242b31"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "cacf4170-d5a1-46bd-8d5a-25f3db708560",
          "title": "create2.bug.test.js ",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/bugs/create2.bug.test.js",
          "file": "/test/bugs/create2.bug.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "create2  tx",
              "fullTitle": "create2.bug.test.js  create2  tx",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//deploy\n        let tx = await ethers.provider.send(\"eth_sendTransaction\", [{\n            \"data\":\"0x608060405234801561001057600080fd5b50610b6e806100206000396000f3fe6080604052600436106100435760003560e01c8063076c37b21461004f578063481286e61461007857806356299481146100b557806366cfa057146100f25761004a565b3661004a57005b600080fd5b34801561005b57600080fd5b5061007660048036038101906100719190610380565b61011b565b005b34801561008457600080fd5b5061009f600480360381019061009a91906103c0565b61014e565b6040516100ac9190610441565b60405180910390f35b3480156100c157600080fd5b506100dc60048036038101906100d79190610488565b610162565b6040516100e99190610441565b60405180910390f35b3480156100fe57600080fd5b5061011960048036038101906101149190610621565b610178565b005b610149828260405180602001610130906102f3565b6020820181038252601f19601f82011660405250610189565b505050565b600061015a838361029a565b905092915050565b600061016f8484846102af565b90509392505050565b610183838383610189565b50505050565b600080844710156101cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c6906106ed565b60405180910390fd5b600083511415610214576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020b90610759565b60405180910390fd5b8383516020850187f59050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561028f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610286906107c5565b60405180910390fd5b809150509392505050565b60006102a78383306102af565b905092915050565b60008060ff60f81b8386866040516020016102cd949392919061089b565b6040516020818303038152906040528051906020012090508060001c9150509392505050565b61024f806108ea83390190565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61032781610314565b811461033257600080fd5b50565b6000813590506103448161031e565b92915050565b6000819050919050565b61035d8161034a565b811461036857600080fd5b50565b60008135905061037a81610354565b92915050565b600080604083850312156103975761039661030a565b5b60006103a585828601610335565b92505060206103b68582860161036b565b9150509250929050565b600080604083850312156103d7576103d661030a565b5b60006103e58582860161036b565b92505060206103f68582860161036b565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061042b82610400565b9050919050565b61043b81610420565b82525050565b60006020820190506104566000830184610432565b92915050565b61046581610420565b811461047057600080fd5b50565b6000813590506104828161045c565b92915050565b6000806000606084860312156104a1576104a061030a565b5b60006104af8682870161036b565b93505060206104c08682870161036b565b92505060406104d186828701610473565b9150509250925092565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61052e826104e5565b810181811067ffffffffffffffff8211171561054d5761054c6104f6565b5b80604052505050565b6000610560610300565b905061056c8282610525565b919050565b600067ffffffffffffffff82111561058c5761058b6104f6565b5b610595826104e5565b9050602081019050919050565b82818337600083830152505050565b60006105c46105bf84610571565b610556565b9050828152602081018484840111156105e0576105df6104e0565b5b6105eb8482856105a2565b509392505050565b600082601f830112610608576106076104db565b5b81356106188482602086016105b1565b91505092915050565b60008060006060848603121561063a5761063961030a565b5b600061064886828701610335565b93505060206106598682870161036b565b925050604084013567ffffffffffffffff81111561067a5761067961030f565b5b610686868287016105f3565b9150509250925092565b600082825260208201905092915050565b7f437265617465323a20696e73756666696369656e742062616c616e6365000000600082015250565b60006106d7601d83610690565b91506106e2826106a1565b602082019050919050565b60006020820190508181036000830152610706816106ca565b9050919050565b7f437265617465323a2062797465636f6465206c656e677468206973207a65726f600082015250565b6000610743602083610690565b915061074e8261070d565b602082019050919050565b6000602082019050818103600083015261077281610736565b9050919050565b7f437265617465323a204661696c6564206f6e206465706c6f7900000000000000600082015250565b60006107af601983610690565b91506107ba82610779565b602082019050919050565b600060208201905081810360008301526107de816107a2565b9050919050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b61082c610827826107e5565b610811565b82525050565b60008160601b9050919050565b600061084a82610832565b9050919050565b600061085c8261083f565b9050919050565b61087461086f82610420565b610851565b82525050565b6000819050919050565b6108956108908261034a565b61087a565b82525050565b60006108a7828761081b565b6001820191506108b78286610863565b6014820191506108c78285610884565b6020820191506108d78284610884565b6020820191508190509594505050505056fe608060405234801561001057600080fd5b5061022f806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063249cb3fa14610030575b600080fd5b61004a6004803603810190610045919061018f565b610060565b60405161005791906101de565b60405180910390f35b600080600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166100cc576000801b6100ee565b7fa2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b45b905092915050565b600080fd5b6000819050919050565b61010e816100fb565b811461011957600080fd5b50565b60008135905061012b81610105565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061015c82610131565b9050919050565b61016c81610151565b811461017757600080fd5b50565b60008135905061018981610163565b92915050565b600080604083850312156101a6576101a56100f6565b5b60006101b48582860161011c565b92505060206101c58582860161017a565b9150509250929050565b6101d8816100fb565b82525050565b60006020820190506101f360008301846101cf565b9291505056fea26469706673582212203f2596ae52867c30f9247bc1bf3887acfc3b46c1e42bbdeb87db7db212e1317c64736f6c63430008090033a2646970667358221220cb7692932314235841c49426613de62a48fcfc20f17e771abd7597f04dd2e21164736f6c63430008090033\"\n        }]);\n        let response = await getTxReceipt(ethers.provider,tx,10)\n        console.log(\"create2 address:\",response.contractAddress)\n        //send tx\n        for (let i = 0; i < 3; i++) {\n            tx = await ethers.provider.send(\"eth_sendTransaction\", [{\n                \"to\": response.contractAddress,\n                \"data\":\"0x66cfa0570000000000000000000000000000000000000000000000000000000000000000e4cc9c971ce9d819c9766a1870097560d197ae71df9b690c9354469e9c50579f000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000020a8608060405260405162001fa838038062001fa88339818101604052810190620000299190620004eb565b8383816003908051906020019062000043929190620001fe565b5080600490805190602001906200005c929190620001fe565b5050506200007182826200007b60201b60201c565b505050506200073d565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620000ee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000e590620005fc565b60405180910390fd5b6200010260008383620001f460201b60201c565b80600260008282546200011691906200064d565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546200016d91906200064d565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620001d49190620006bb565b60405180910390a3620001f060008383620001f960201b60201c565b5050565b505050565b505050565b8280546200020c9062000707565b90600052602060002090601f0160209004810192826200023057600085556200027c565b82601f106200024b57805160ff19168380011785556200027c565b828001600101855582156200027c579182015b828111156200027b5782518255916020019190600101906200025e565b5b5090506200028b91906200028f565b5090565b5b80821115620002aa57600081600090555060010162000290565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200031782620002cc565b810181811067ffffffffffffffff82111715620003395762000338620002dd565b5b80604052505050565b60006200034e620002ae565b90506200035c82826200030c565b919050565b600067ffffffffffffffff8211156200037f576200037e620002dd565b5b6200038a82620002cc565b9050602081019050919050565b60005b83811015620003b75780820151818401526020810190506200039a565b83811115620003c7576000848401525b50505050565b6000620003e4620003de8462000361565b62000342565b905082815260208101848484011115620004035762000402620002c7565b5b6200041084828562000397565b509392505050565b600082601f83011262000430576200042f620002c2565b5b815162000442848260208601620003cd565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000478826200044b565b9050919050565b6200048a816200046b565b81146200049657600080fd5b50565b600081519050620004aa816200047f565b92915050565b6000819050919050565b620004c581620004b0565b8114620004d157600080fd5b50565b600081519050620004e581620004ba565b92915050565b60008060008060808587031215620005085762000507620002b8565b5b600085015167ffffffffffffffff811115620005295762000528620002bd565b5b620005378782880162000418565b945050602085015167ffffffffffffffff8111156200055b576200055a620002bd565b5b620005698782880162000418565b93505060406200057c8782880162000499565b92505060606200058f87828801620004d4565b91505092959194509250565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000620005e4601f836200059b565b9150620005f182620005ac565b602082019050919050565b600060208201905081810360008301526200061781620005d5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200065a82620004b0565b91506200066783620004b0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156200069f576200069e6200061e565b5b828201905092915050565b620006b581620004b0565b82525050565b6000602082019050620006d26000830184620006aa565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200072057607f821691505b60208210811415620007375762000736620006d8565b5b50919050565b61185b806200074d6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806340c10f19116100975780639dc29fac116100665780639dc29fac14610286578063a457c2d7146102a2578063a9059cbb146102d2578063dd62ed3e14610302576100f5565b806340c10f191461020057806356189cb41461021c57806370a082311461023857806395d89b4114610268576100f5565b8063222f5be0116100d3578063222f5be01461016657806323b872dd14610182578063313ce567146101b257806339509351146101d0576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610148575b600080fd5b610102610332565b60405161010f9190610f51565b60405180910390f35b610132600480360381019061012d919061100c565b6103c4565b60405161013f9190611067565b60405180910390f35b6101506103e7565b60405161015d9190611091565b60405180910390f35b610180600480360381019061017b91906110ac565b6103f1565b005b61019c600480360381019061019791906110ac565b610401565b6040516101a99190611067565b60405180910390f35b6101ba610430565b6040516101c7919061111b565b60405180910390f35b6101ea60048036038101906101e5919061100c565b610439565b6040516101f79190611067565b60405180910390f35b61021a6004803603810190610215919061100c565b610470565b005b610236600480360381019061023191906110ac565b61047e565b005b610252600480360381019061024d9190611136565b61048e565b60405161025f9190611091565b60405180910390f35b6102706104d6565b60405161027d9190610f51565b60405180910390f35b6102a0600480360381019061029b919061100c565b610568565b005b6102bc60048036038101906102b7919061100c565b610576565b6040516102c99190611067565b60405180910390f35b6102ec60048036038101906102e7919061100c565b6105ed565b6040516102f99190611067565b60405180910390f35b61031c60048036038101906103179190611163565b610610565b6040516103299190611091565b60405180910390f35b606060038054610341906111d2565b80601f016020809104026020016040519081016040528092919081815260200182805461036d906111d2565b80156103ba5780601f1061038f576101008083540402835291602001916103ba565b820191906000526020600020905b81548152906001019060200180831161039d57829003601f168201915b5050505050905090565b6000806103cf610697565b90506103dc81858561069f565b600191505092915050565b6000600254905090565b6103fc83838361086a565b505050565b60008061040c610697565b9050610419858285610aeb565b61042485858561086a565b60019150509392505050565b60006012905090565b600080610444610697565b90506104658185856104568589610610565b6104609190611233565b61069f565b600191505092915050565b61047a8282610b77565b5050565b61048983838361069f565b505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546104e5906111d2565b80601f0160208091040260200160405190810160405280929190818152602001828054610511906111d2565b801561055e5780601f106105335761010080835404028352916020019161055e565b820191906000526020600020905b81548152906001019060200180831161054157829003601f168201915b5050505050905090565b6105728282610cd7565b5050565b600080610581610697565b9050600061058f8286610610565b9050838110156105d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105cb906112fb565b60405180910390fd5b6105e1828686840361069f565b60019250505092915050565b6000806105f8610697565b905061060581858561086a565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561070f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107069061138d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561077f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107769061141f565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161085d9190611091565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d1906114b1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561094a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094190611543565b60405180910390fd5b610955838383610eae565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156109db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d2906115d5565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a6e9190611233565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ad29190611091565b60405180910390a3610ae5848484610eb3565b50505050565b6000610af78484610610565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610b715781811015610b63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5a90611641565b60405180910390fd5b610b70848484840361069f565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610be7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bde906116ad565b60405180910390fd5b610bf360008383610eae565b8060026000828254610c059190611233565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c5a9190611233565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610cbf9190611091565b60405180910390a3610cd360008383610eb3565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3e9061173f565b60405180910390fd5b610d5382600083610eae565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610dd9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd0906117d1565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160026000828254610e3091906117f1565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e959190611091565b60405180910390a3610ea983600084610eb3565b505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ef2578082015181840152602081019050610ed7565b83811115610f01576000848401525b50505050565b6000601f19601f8301169050919050565b6000610f2382610eb8565b610f2d8185610ec3565b9350610f3d818560208601610ed4565b610f4681610f07565b840191505092915050565b60006020820190508181036000830152610f6b8184610f18565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610fa382610f78565b9050919050565b610fb381610f98565b8114610fbe57600080fd5b50565b600081359050610fd081610faa565b92915050565b6000819050919050565b610fe981610fd6565b8114610ff457600080fd5b50565b60008135905061100681610fe0565b92915050565b6000806040838503121561102357611022610f73565b5b600061103185828601610fc1565b925050602061104285828601610ff7565b9150509250929050565b60008115159050919050565b6110618161104c565b82525050565b600060208201905061107c6000830184611058565b92915050565b61108b81610fd6565b82525050565b60006020820190506110a66000830184611082565b92915050565b6000806000606084860312156110c5576110c4610f73565b5b60006110d386828701610fc1565b93505060206110e486828701610fc1565b92505060406110f586828701610ff7565b9150509250925092565b600060ff82169050919050565b611115816110ff565b82525050565b6000602082019050611130600083018461110c565b92915050565b60006020828403121561114c5761114b610f73565b5b600061115a84828501610fc1565b91505092915050565b6000806040838503121561117a57611179610f73565b5b600061118885828601610fc1565b925050602061119985828601610fc1565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806111ea57607f821691505b602082108114156111fe576111fd6111a3565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061123e82610fd6565b915061124983610fd6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561127e5761127d611204565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006112e5602583610ec3565b91506112f082611289565b604082019050919050565b60006020820190508181036000830152611314816112d8565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611377602483610ec3565b91506113828261131b565b604082019050919050565b600060208201905081810360008301526113a68161136a565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611409602283610ec3565b9150611414826113ad565b604082019050919050565b60006020820190508181036000830152611438816113fc565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061149b602583610ec3565b91506114a68261143f565b604082019050919050565b600060208201905081810360008301526114ca8161148e565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061152d602383610ec3565b9150611538826114d1565b604082019050919050565b6000602082019050818103600083015261155c81611520565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006115bf602683610ec3565b91506115ca82611563565b604082019050919050565b600060208201905081810360008301526115ee816115b2565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061162b601d83610ec3565b9150611636826115f5565b602082019050919050565b6000602082019050818103600083015261165a8161161e565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611697601f83610ec3565b91506116a282611661565b602082019050919050565b600060208201905081810360008301526116c68161168a565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000611729602183610ec3565b9150611734826116cd565b604082019050919050565b600060208201905081810360008301526117588161171c565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b60006117bb602283610ec3565b91506117c68261175f565b604082019050919050565b600060208201905081810360008301526117ea816117ae565b9050919050565b60006117fc82610fd6565b915061180783610fd6565b92508282101561181a57611819611204565b5b82820390509291505056fea26469706673582212200ef0c7666cae50d73bedb30692ca4148bc3a32bb715d8c4845b65e9725e6b24564736f6c63430008090033000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000040711adc577de17232dd6f997022f68be6be8560000000000000000000000000000000000000000000000000000000000000006400000000000000000000000000000000000000000000000000000000000000074d79546f6b656e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044d544b4e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"\n            }]);\n            response = await getTxReceipt(ethers.provider,tx,10)\n            console.log(\"response:\",response)\n        }",
              "err": {},
              "uuid": "8794fcc3-1476-4108-8db6-67c8174fbca2",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "query result",
              "fullTitle": "create2.bug.test.js  query result",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// 0x7317ec83762e48613a910980a82bb02ec9e0e07ae4ad045a6714f72f6f739f52\nlet response = await getTxReceipt(ethers.provider,\"0x7317ec83762e48613a910980a82bb02ec9e0e07ae4ad045a6714f72f6f739f52\",10)\nconsole.log(response)",
              "err": {},
              "uuid": "6f8afdc3-0ea2-4f26-a062-e74700ef81be",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "8794fcc3-1476-4108-8db6-67c8174fbca2",
            "6f8afdc3-0ea2-4f26-a062-e74700ef81be"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "5a66d595-83bd-43a7-aafd-9d6a28c5816d",
          "title": "CrossChainRevertTestContract ",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/bugs/CrossChainRevertTestContract.bug.test.js",
          "file": "/test/bugs/CrossChainRevertTestContract.bug.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "CrossChainRevertTestContract  \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "contractInfo = await ethers.getContractFactory(\"CrossChainRevertTestContract\");",
              "err": {},
              "uuid": "11cab5dd-ce1d-45dc-9551-8b7460dfa76d",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should grant access to cross-chain call from the owner",
              "fullTitle": "CrossChainRevertTestContract  should grant access to cross-chain call from the owner",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "contract = await contractInfo.deploy()\nawait contract.deployed()\nlet tx = await contract.init()\nawait tx.wait()\ntx = await contract.Test()\nawait tx.wait()",
              "err": {},
              "uuid": "e86b9310-183f-4c10-b6e0-66bd16a0c506",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "e86b9310-183f-4c10-b6e0-66bd16a0c506"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "890b5a69-d8b2-423c-9d52-0ac62a3eb684",
          "title": "CrossChainRevertTestContract ",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/bugs/ERC20VotesCompMockTest.bug.js",
          "file": "/test/bugs/ERC20VotesCompMockTest.bug.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "CrossChainRevertTestContract  \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "contractInfo = await ethers.getContractFactory(\"ERC20VotesCompMock\");",
              "err": {},
              "uuid": "03243402-507d-4d2e-a8b0-28446f3d48b8",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "invoke out of gas ",
              "fullTitle": "CrossChainRevertTestContract  invoke out of gas ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let accounts = await ethers.getSigners();\n        let holder = accounts[1];\n        let recipient = accounts[2];\n        let other1 = accounts[3];\n        let other2 = accounts[4];\n        let tx;\n        console.log(\"1. deploy ERC20VotesCompMock\")\n        contract = await contractInfo.deploy(\"my Token\", \"mk\")\n        await contract.deployed()\n        console.log(\"2. call ERC20VotesCompMock.mint(holder,100000000)\")\n        tx = await contract.mint(holder.address,100000000)\n        await tx.wait()\n        console.log(\"3.   call ERC20VotesCompMock.transfer(recipient,100)\")\n        console.log(recipient.address)\n        tx = await contract.connect(holder).attach(contract.address).transfer(recipient.address,100)\n        await tx.wait()\n        console.log(\"4. recipient call ERC20VotesCompMock.delegate(other1)\")\n        tx = await contract.connect(recipient).attach(contract.address).delegate(other1.address)\n        await tx.wait()\n        console.log(\"5. recipient call ERC20VotesCompMock.transfer(other2,100)\")\n        tx = await contract.connect(recipient).attach(contract.address).transfer(other2.address,100)\n        let response = await tx.wait()\n        console.log(\"response :\",response)",
              "err": {},
              "uuid": "25a42a31-391c-412a-b991-d2d4f0259728",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "invoke 2 ",
              "fullTitle": "CrossChainRevertTestContract  invoke 2 ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let accounts = await ethers.getSigners();\n        let holder = accounts[1];\n        let recipient = accounts[2];\n        let other1 = accounts[3];\n        let other2 = accounts[4];\n        let tx;\n        console.log(\"1. deploy ERC20VotesCompMock\")\n        contract = await contractInfo.deploy(\"my Token\", \"mk\")\n        await contract.deployed()\n        console.log(\"2. call ERC20VotesCompMock.mint(holder,100000000)\")\n        tx = await contract.mint(holder.address,100000000)\n        await tx.wait()\n        console.log(\"3.   call ERC20VotesCompMock.transfer(recipient,100)\")\n        console.log(recipient.address)\n        tx = await contract.connect(holder).attach(contract.address).transfer(recipient.address,100)\n        await tx.wait()\n        tx = await contract.connect(holder).attach(contract.address).delegate(other1.address)\n        await tx.wait()\n        await sendTxToAddBlockNum(ethers.provider,2)\n        // await new Promise(r => setTimeout(r, 30000));\n        console.log(\"5. recipient call ERC20VotesCompMock.transfer(other2,100)\")\n        tx = await contract.connect(holder).attach(contract.address).transfer(other2.address,100)\n        let response = await tx.wait()\n        console.log(\"response :\",response)",
              "err": {},
              "uuid": "8813cb4a-d1c6-4bfe-a4a8-5dfcbffd1106",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "invoke 3",
              "fullTitle": "CrossChainRevertTestContract  invoke 3",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let accounts = await ethers.getSigners();\n        let holder = accounts[1];\n        let recipient = accounts[2];\n        let other1 = accounts[3];\n        let other2 = accounts[4];\n        let tx;\n        let contract = await ethers.getContractAt(\"ERC20VotesCompMock\",\n            '0xb39f01be175a4f8709689b635e7ac5a3b4b2dc2f',holder);\n        console.log(\"5. recipient call ERC20VotesCompMock.transfer(other2,100)\")\n        tx = await contract.transfer(other2.address,10)\n        let response = await tx.wait()\n        console.log(\"response :\",response)",
              "err": {},
              "uuid": "44218819-e005-4499-9480-459d14ea5db5",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "invoke 4",
              "fullTitle": "CrossChainRevertTestContract  invoke 4",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let accounts = await ethers.getSigners();\n        let holder = accounts[1];\n        let recipient = accounts[2];\n        let other1 = accounts[3];\n        let other2 = accounts[4];\n        let tx = await ethers.provider.getSigner(1).sendTransaction({\n            // from:holder.address,\n            to:\"0xb39f01be175a4f8709689b635e7ac5a3b4b2dc2f\",\n            data:\"0xa9059cbb0000000000000000000000006b75801d17bcb7dba0bdfe1d989e49a722e020e60000000000000000000000000000000000000000000000000000000000000064\",\n        })\n        let response = await getTxReceipt(ethers.provider,tx,10)",
              "err": {},
              "uuid": "3180f395-ff21-4776-82ec-bec90a7cc762",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "asdasd",
              "fullTitle": "CrossChainRevertTestContract  asdasd",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await sendTxToAddBlockNum(ethers.provider,10)",
              "err": {},
              "uuid": "4e8759f2-5194-46f0-8386-b02dbc6572c2",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "25a42a31-391c-412a-b991-d2d4f0259728",
            "8813cb4a-d1c6-4bfe-a4a8-5dfcbffd1106",
            "44218819-e005-4499-9480-459d14ea5db5",
            "3180f395-ff21-4776-82ec-bec90a7cc762",
            "4e8759f2-5194-46f0-8386-b02dbc6572c2"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "e691bfce-29c2-47f8-89c6-8595c53658ba",
          "title": "Multicall_bug ",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/bugs/evm_v11_contract.test.js",
          "file": "/test/bugs/evm_v11_contract.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Multicall_bug \"",
              "fullTitle": "Multicall_bug  \"before all\" hook in \"Multicall_bug \"",
              "timedOut": false,
              "duration": 58,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "contractInfo = await ethers.getContractFactory(\"evm_v11_contract\");\ncontractInfo1 = await ethers.getContractFactory(\"evm_v11_contract\");",
              "err": {},
              "uuid": "b24617ee-222a-4736-a0fd-4b481a0c30ca",
              "parentUUID": "e691bfce-29c2-47f8-89c6-8595c53658ba",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "test_to_un_register",
              "fullTitle": "Multicall_bug  test_to_un_register",
              "timedOut": false,
              "duration": 11141,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"begin\")\ncontract = await contractInfo.deploy();\nawait contract.deployed();\nconsole.log(\"invoke assert method\")\nlet tx = await contract.test_to_un_register(\"0x8974eD1cfA93B1E28E11005E3eA88AF81452113a\",{value:1000,gasLimit:1000000});\nawait tx.wait()\nconsole.log(\"-------------\")\nconsole.log(await ethers.provider.getBalance(\"0x8974eD1cfA93B1E28E11005E3eA88AF81452113a\"))",
              "err": {},
              "uuid": "9049b46a-2f7e-4d0c-9ef6-efa2bd66d977",
              "parentUUID": "e691bfce-29c2-47f8-89c6-8595c53658ba",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9049b46a-2f7e-4d0c-9ef6-efa2bd66d977"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11141,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "571d9e34-1605-46ca-8dc0-17feac26cc95",
          "title": "godwoken-web3 issue",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/bugs/godwoken-web3.issue.test.js",
          "file": "/test/bugs/godwoken-web3.issue.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "issue245(Execute 2 times ( destruct after create2) leads to exit2)",
              "fullTitle": "godwoken-web3 issue issue245(Execute 2 times ( destruct after create2) leads to exit2)",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//https://github.com/nervosnetwork/godwoken-web3/issues/245\nconst blockInfoContract = await ethers.getContractFactory(\"create2_test\");\nlet contract = await blockInfoContract.deploy();\nawait contract.deployed();\nlet tx = await contract.test_create2_destruct();\nlet receipt = await tx.wait();\nexpect(receipt.events[2].args[1].toString()).to.be.not.equal(\"0x0000000000000000000000000000000000000000\")\ntx = await contract.test_create2_destruct();\nreceipt = await tx.wait();\nexpect(receipt.events[2].args[1].toString()).to.be.not.equal(\"0x0000000000000000000000000000000000000000\")",
              "err": {},
              "uuid": "0545574e-315a-4276-a6ac-e94ccc610feb",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "issue247(the error message is not as friendly as other blockchain platforms)",
              "fullTitle": "godwoken-web3 issue issue247(the error message is not as friendly as other blockchain platforms)",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//https://github.com/nervosnetwork/godwoken-web3/issues/247\n//curl -X POST --data '{\"jsonrpc\":\"2.0\",  \"method\":\"eth_newFilter\",  \"params\":[{\"topics\":[\"0x12341234\"]}],  \"id\":73}' https://godwoken-testnet-web3-v1-rpc.ckbapp.dev -H \"Content-Type: application/json\"\ntry {\n    let response = await ethers.provider.send(\"eth_newFilter\", [{\"topics\": [\"0x12341234\"]}])\n} catch (e) {\n    expect(e.toString()).to.be.contains(\"invalid\")\n    expect(e.toString()).to.be.contains(\"32\")\n}",
              "err": {},
              "uuid": "9ff206ae-3035-409d-bf9a-fe148db4af10",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "issue259(gasLimit has no upper limit)",
              "fullTitle": "godwoken-web3 issue issue259(gasLimit has no upper limit)",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//https://github.com/nervosnetwork/godwoken-web3/issues/259\nlet fallbackAndReceiveContract = await ethers.getContractFactory(\"fallbackAndReceive\");\nlet gasPrice = await getGasPrice(ethers.provider);\nconsole.log(\"begin\")\ntry {\n    let tx = await ethers.provider.send(\"eth_sendTransaction\", [{\n        \"gas\": \"0xffffffffff\",\n        \"gasPrice\": gasPrice,\n        \"data\": fallbackAndReceiveContract.bytecode\n    }]);\n} catch (e) {\n    expect(e.toString()).to.be.contains(\"exceeds\")\n    return\n}\nexpect(\"\").to.be.contains(\"expected throw out of gas ：https://github.com/nervosnetwork/godwoken-web3/issues/259\")",
              "err": {},
              "uuid": "71885d3d-14bf-4a4b-84ba-6c98b7b279d0",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "issue271(eth_getFilterChanges query filterId from eth_newBlockFilter inconsistent with other chains)",
              "fullTitle": "godwoken-web3 issue issue271(eth_getFilterChanges query filterId from eth_newBlockFilter inconsistent with other chains)",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//https://github.com/nervosnetwork/godwoken-web3/issues/271\nconst filterId = await ethers.provider.send(\"eth_newBlockFilter\", []);\nconst txs = await ethers.provider.send(\"eth_getFilterChanges\", [filterId]);\nexpect(txs.length).to.be.equal(0)",
              "err": {},
              "uuid": "7e96786f-fb1f-448a-8dbf-090aa436f1a2",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "issue273(eth_getFilterChanges query filterId from eth_newFilter inconsistent with other chains)",
              "fullTitle": "godwoken-web3 issue issue273(eth_getFilterChanges query filterId from eth_newFilter inconsistent with other chains)",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//https://github.com/nervosnetwork/godwoken-web3/issues/273\nlet BeginBlkNum = await ethers.provider.getBlockNumber();\nconst filterId = await ethers.provider.send(\"eth_newFilter\", [{}]);\n// getTxCount(ethers.provider,ethers.provider.getSigner().getAddress())\nawait sendTxToAddBlockNum(ethers.provider, 2)\nconst logs = await ethers.provider.send(\"eth_getFilterChanges\", [filterId]);\nlet endBlkNum = await ethers.provider.getBlockNumber();\nconsole.log(\"begin blkNum:\", BeginBlkNum.toString())\nconsole.log(\"end blkNum:\", endBlkNum.toString())\nconsole.log(\"=====eth_getFilterChanges==========\")\nlet latestBlkNum = 0;\nlet latestBlkIdx = 0;\nlet latestLogIdx = 0;\nfor (let i = 0; i < logs.length; i++) {\n    console.log(\"blockNumber:\", BigNumber.from(logs[i].blockNumber.toString()).toString(), \"blkIdx:\", logs[i].transactionIndex, \"logIndex:\", logs[i].logIndex)\n    let nowBlkNum = BigNumber.from(logs[i].blockNumber);\n    let nowBlkIdx = BigNumber.from(logs[i].transactionIndex);\n    let nowLogIdx = logs[i].logIndex;\n    expect(nowBlkNum * 10000 * 10000 + nowBlkIdx * 10000 + nowLogIdx).to.be.lt(latestBlkNum * 10000 * 10000 + latestBlkIdx * 10000 + latestLogIdx);\n    latestBlkNum = nowBlkNum;\n    latestBlkIdx = nowBlkIdx;\n    latestLogIdx = nowLogIdx;\n}",
              "err": {},
              "uuid": "ce43b867-bb07-4f98-90ed-f734303bf4c3",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "issue281(Illegal transaction failed_reason show only partial information)",
              "fullTitle": "godwoken-web3 issue issue281(Illegal transaction failed_reason show only partial information)",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//https://github.com/nervosnetwork/godwoken-web3/issues/281",
              "err": {},
              "uuid": "3fc9603b-6a09-4527-9887-715d4e8728e5",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "issue286(eth_estimateGas return data out-of-bounds)",
              "fullTitle": "godwoken-web3 issue issue286(eth_estimateGas return data out-of-bounds)",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//https://github.com/nervosnetwork/godwoken-web3/issues/286\nlet contractInfo = await ethers.getContractFactory(\"CallReceiverMock\");\nconsole.log(\"begin\")\nlet contract = await contractInfo.deploy();\nawait contract.deployed();\nconsole.log(\"invoke assert method\")\ntry {\n    let tx = await contract.mockFunctionThrows();\n    await tx.wait()\n}catch (e){\n    expect(e.toString()).to.be.contains(\"UNPREDICTABLE_GAS_LIMIT\")\n    return\n}\nexpect(\"\").to.be.contains(\"failed\")",
              "err": {},
              "uuid": "8c923f57-24d8-41d1-96a2-3010a58a2a24",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "issue291(no return required error message)",
              "fullTitle": "godwoken-web3 issue issue291(no return required error message)",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//https://github.com/nervosnetwork/godwoken-web3/issues/291\nlet ReentrancyMockInfo = await ethers.getContractFactory(\"ReentrancyMock\");\nlet ReentrancyMockContract = await ReentrancyMockInfo.deploy()\nawait ReentrancyMockContract.deployed()\nconsole.log(\"contract Address:\", ReentrancyMockContract.address)\nlet ReentrancyAttackInfo = await ethers.getContractFactory(\"ReentrancyAttack\");\nlet ReentrancyAttackContract = await ReentrancyAttackInfo.deploy();\nawait ReentrancyAttackContract.deployed();\nconsole.log(\"ReentrancyAttackContract Address:\", ReentrancyAttackContract.address)\ntry {\n    let tx = await ReentrancyMockContract.countAndCall(ReentrancyAttackContract.address);\n    await tx.wait()\n}catch (e){\n    expect(e.toString()).to.be.contains(\"ReentrancyAttack: failed call\")\n    return\n}\nexpect(\"\").to.be.contains(\"failed\")",
              "err": {},
              "uuid": "40caedba-992d-46a5-867f-72f1884c4d10",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "issue301(proxy invoke return revert)",
              "fullTitle": "godwoken-web3 issue issue301(proxy invoke return revert)",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//https://github.com/nervosnetwork/godwoken-web3/issues/301\nlet contractInfo = await ethers.getContractFactory(\"BugProxyTest\");\nconsole.log(\"1. deploy BugProxyTest contract \")\nlet contract = await contractInfo.deploy();\nawait contract.deployed();\nconsole.log(\"2. invoke BugProxyTest.TestProxy()\")\nlet tx = await contract.TestProxy();\nlet response = await tx.wait()\nconsole.log(\"3. proxyAddress = BugProxyTest.proxy()\")\nlet proxyAddress = await contract.proxy();\nlet Implementation2ContractInfo = await ethers.getContractFactory(\"Implementation2\");\nlet account = await ethers.getSigners();\nconsole.log(\"4. invoke Implementation2(proxyAddress).getValue()\")\nlet Implementation2ContractProxy = Implementation2ContractInfo.connect(account[0]).attach(proxyAddress);\nlet getValue = await Implementation2ContractProxy.getValue();\nconsole.log(\"getValue:\", getValue)\nconsole.log(\"5. invoke Implementation2(proxyAddress).setValue(433)\")\ntx = await Implementation2ContractProxy.setValue(433);\nawait tx.wait()\ngetValue = await Implementation2ContractProxy.getValue();\nconsole.log(\"getValue:\", getValue)",
              "err": {},
              "uuid": "9462abeb-1203-45fa-99d4-238132fa124b",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "issue305(eth_estimateGas deploy max code size)",
              "fullTitle": "godwoken-web3 issue issue305(eth_estimateGas deploy max code size)",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//https://github.com/nervosnetwork/godwoken-web3/issues/305\ntry {\n    await ethers.provider.send(\"eth_estimateGas\", [{\n        \"data\": \"0x608060405234801561001057600080fd5b50616648806100206000396000f3fe60806040523480156200001157600080fd5b50600436106200003a5760003560e01c806364f402c9146200003f578063aa9449f21462000061575b600080fd5b6200004962000081565b604051620000589190620002a6565b60405180910390f35b6200007f600480360381019062000079919062000321565b620000a5565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8073ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620000f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000117919062000398565b600460108373ffffffffffffffffffffffffffffffffffffffff1663be20f8be6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000167573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200018d919062000423565b60006040516200019d906200020d565b620001ad959493929190620005e7565b604051809103906000f080158015620001ca573d6000803e3d6000fd5b506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b615fb9806200065a83390190565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600062000266620002606200025a846200021b565b6200023b565b6200021b565b9050919050565b60006200027a8262000245565b9050919050565b60006200028e826200026d565b9050919050565b620002a08162000281565b82525050565b6000602082019050620002bd600083018462000295565b92915050565b600080fd5b6000620002d5826200021b565b9050919050565b6000620002e982620002c8565b9050919050565b620002fb81620002dc565b81146200030757600080fd5b50565b6000813590506200031b81620002f0565b92915050565b6000602082840312156200033a5762000339620002c3565b5b60006200034a848285016200030a565b91505092915050565b60006200036082620002c8565b9050919050565b620003728162000353565b81146200037e57600080fd5b50565b600081519050620003928162000367565b92915050565b600060208284031215620003b157620003b0620002c3565b5b6000620003c18482850162000381565b91505092915050565b6000620003d7826200021b565b9050919050565b6000620003eb82620003ca565b9050919050565b620003fd81620003de565b81146200040957600080fd5b50565b6000815190506200041d81620003f2565b92915050565b6000602082840312156200043c576200043b620002c3565b5b60006200044c848285016200040c565b91505092915050565b600082825260208201905092915050565b7f4f5a2d476f7665726e6f72000000000000000000000000000000000000000000600082015250565b60006200049e600b8362000455565b9150620004ab8262000466565b602082019050919050565b6000620004c38262000245565b9050919050565b6000620004d782620004b6565b9050919050565b620004e981620004ca565b82525050565b6000819050919050565b6000819050919050565b6000620005246200051e6200051884620004ef565b6200023b565b620004f9565b9050919050565b620005368162000503565b82525050565b6000819050919050565b600062000567620005616200055b846200053c565b6200023b565b620004f9565b9050919050565b620005798162000546565b82525050565b60006200058c826200026d565b9050919050565b6200059e816200057f565b82525050565b6000819050919050565b6000620005cf620005c9620005c384620005a4565b6200023b565b620004f9565b9050919050565b620005e181620005ae565b82525050565b600060c082019050818103600083015262000602816200048f565b9050620006136020830188620004de565b6200062260408301876200052b565b6200063160608301866200056e565b62000640608083018562000593565b6200064f60a0830184620005d6565b969550505050505056fe6101606040523480156200001257600080fd5b5060405162005fb938038062005fb98339818101604052810190620000389190620007f3565b808583868660008b8062000051620001b960201b60201c565b60008280519060200120905060008280519060200120905060007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f90508260e081815250508161010081815250504660a08181525050620000ba818484620001f660201b60201c565b608081815250503073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1681525050806101208181525050505050505080600090805190602001906200011b92919062000499565b50506200012e836200023260201b60201c565b6200013f826200027960201b60201c565b62000150816200030660201b60201c565b50505062000164816200034d60201b60201c565b508073ffffffffffffffffffffffffffffffffffffffff166101408173ffffffffffffffffffffffffffffffffffffffff168152505050620001ac81620003ee60201b60201c565b5050505050505062000b6d565b60606040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250905090565b6000838383463060405160200162000213959493929190620008eb565b6040516020818303038152906040528051906020012090509392505050565b7fc565b045403dc03c2eea82b81a0465edad9e2e7fc4d97e11421c209da93d7a93600254826040516200026792919062000948565b60405180910390a18060028190555050565b60008111620002bf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002b690620009fc565b60405180910390fd5b7f7e3f7f0708a84de9203036abaa450dccc85ad5ff52f78c170f3edb55cf5e882860035482604051620002f492919062000948565b60405180910390a18060038190555050565b7fccb45da8d5717e6c4544694297c4ba5cf151d455c9bb0ed4fc7a38411bc05461600454826040516200033b92919062000948565b60405180910390a18060048190555050565b7f08f74ea46ef7894f65eabfb5e6e695de773a000b47c529ab559178069b226401600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051620003a292919062000a1e565b60405180910390a180600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b620003fe6200049060201b60201c565b81111562000443576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200043a9062000ae7565b60405180910390fd5b60006007549050816007819055507f0553476bf02ef2726e8ce5ced78d63e26e602e4a2257b1f559418e24b463399781836040516200048492919062000948565b60405180910390a15050565b60006064905090565b828054620004a79062000b38565b90600052602060002090601f016020900481019282620004cb576000855562000517565b82601f10620004e657805160ff191683800117855562000517565b8280016001018555821562000517579182015b8281111562000516578251825591602001919060010190620004f9565b5b5090506200052691906200052a565b5090565b5b80821115620005455760008160009055506001016200052b565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620005b28262000567565b810181811067ffffffffffffffff82111715620005d457620005d362000578565b5b80604052505050565b6000620005e962000549565b9050620005f78282620005a7565b919050565b600067ffffffffffffffff8211156200061a576200061962000578565b5b620006258262000567565b9050602081019050919050565b60005b838110156200065257808201518184015260208101905062000635565b8381111562000662576000848401525b50505050565b60006200067f6200067984620005fc565b620005dd565b9050828152602081018484840111156200069e576200069d62000562565b5b620006ab84828562000632565b509392505050565b600082601f830112620006cb57620006ca6200055d565b5b8151620006dd84826020860162000668565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200071382620006e6565b9050919050565b6000620007278262000706565b9050919050565b62000739816200071a565b81146200074557600080fd5b50565b60008151905062000759816200072e565b92915050565b6000819050919050565b62000774816200075f565b81146200078057600080fd5b50565b600081519050620007948162000769565b92915050565b6000620007a782620006e6565b9050919050565b6000620007bb826200079a565b9050919050565b620007cd81620007ae565b8114620007d957600080fd5b50565b600081519050620007ed81620007c2565b92915050565b60008060008060008060c0878903121562000813576200081262000553565b5b600087015167ffffffffffffffff81111562000834576200083362000558565b5b6200084289828a01620006b3565b96505060206200085589828a0162000748565b95505060406200086889828a0162000783565b94505060606200087b89828a0162000783565b93505060806200088e89828a01620007dc565b92505060a0620008a189828a0162000783565b9150509295509295509295565b6000819050919050565b620008c381620008ae565b82525050565b620008d4816200075f565b82525050565b620008e58162000706565b82525050565b600060a082019050620009026000830188620008b8565b620009116020830187620008b8565b620009206040830186620008b8565b6200092f6060830185620008c9565b6200093e6080830184620008da565b9695505050505050565b60006040820190506200095f6000830185620008c9565b6200096e6020830184620008c9565b9392505050565b600082825260208201905092915050565b7f476f7665726e6f7253657474696e67733a20766f74696e6720706572696f642060008201527f746f6f206c6f7700000000000000000000000000000000000000000000000000602082015250565b6000620009e460278362000975565b9150620009f18262000986565b604082019050919050565b6000602082019050818103600083015262000a1781620009d5565b9050919050565b600060408201905062000a356000830185620008da565b62000a446020830184620008da565b9392505050565b7f476f7665726e6f72566f74657351756f72756d4672616374696f6e3a2071756f60008201527f72756d4e756d657261746f72206f7665722071756f72756d44656e6f6d696e6160208201527f746f720000000000000000000000000000000000000000000000000000000000604082015250565b600062000acf60438362000975565b915062000adc8262000a4b565b606082019050919050565b6000602082019050818103600083015262000b028162000ac0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168062000b5157607f821691505b60208210810362000b675762000b6662000b09565b5b50919050565b60805160a05160c05160e0516101005161012051610140516153e362000bd6600039600081816118a6015281816119e4015261218b0152600061240401526000612446015260006124250152600061235a015260006123b0015260006123d901526153e36000f3fe6080604052600436106102085760003560e01c80637b3c71d311610118578063c59057e4116100a0578063ea0217cf1161006f578063ea0217cf14610844578063eb9019d41461086d578063ece40cc1146108aa578063f8ce560a146108d3578063fc0c546a146109105761024e565b8063c59057e414610786578063d33219b4146107c3578063dd4e2ba5146107ee578063deaaa7cc146108195761024e565b8063a890c910116100e7578063a890c9101461068f578063ab58fb8e146106b8578063b58131b0146106f5578063c01f9e3714610720578063c28bc2fa1461075d5761024e565b80637b3c71d3146105bf5780637d5e81e2146105fc57806397c3d33414610639578063a7713a70146106645761024e565b80633bccf4fd1161019b578063452115d61161016a578063452115d61461\",\n    }]);\n} catch (e) {\n    expect(e.toString()).to.be.contains(\"UNPREDICTABLE_GAS_LIMIT\")\n    return\n}\nexpect(\"\").to.be.contains(\"failed\")",
              "err": {},
              "uuid": "a738e158-2b46-4220-822e-9a453fe12dc6",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [
            {
              "uuid": "8debfb5c-00f0-4c65-a336-97ad1580624e",
              "title": "issue293(Revert did not return an error message)",
              "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/bugs/godwoken-web3.issue.test.js",
              "file": "/test/bugs/godwoken-web3.issue.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "error RpcError: Returned values aren't valid, did it run Out of Gas? You might also see this error if you are not using the correct ABI for the contract you are retrieving data from, requesting data from a block number that does not exist, or querying a node which is not fully synced. RpcError: Returned values aren't valid, did it run Out of Gas? You might also see this error if you are not using the correct ABI for the contract you are retrieving data from, requesting data from a block number that does not exist, or querying a node which is not fully synced.\n",
                  "fullTitle": "godwoken-web3 issue issue293(Revert did not return an error message) error RpcError: Returned values aren't valid, did it run Out of Gas? You might also see this error if you are not using the correct ABI for the contract you are retrieving data from, requesting data from a block number that does not exist, or querying a node which is not fully synced. RpcError: Returned values aren't valid, did it run Out of Gas? You might also see this error if you are not using the correct ABI for the contract you are retrieving data from, requesting data from a block number that does not exist, or querying a node which is not fully synced.\n",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let contractInfo = await ethers.getContractFactory(\"RevertError\");\n            let contract = await contractInfo.deploy()\n            await contract.deployed()\n            console.log(\"contract Address:\", contract.address)\n            try {\n                let result = await contract.testEmpty()\n            }catch (e){\n                expect(e.toString()).to.be.contains(\"reverted with custom error\")\n            }",
                  "err": {},
                  "uuid": "5e2ec433-cfd0-4258-bd82-e8b6385715cb",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "overflow",
                  "fullTitle": "godwoken-web3 issue issue293(Revert did not return an error message) overflow",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//expected : execution reverted\nlet contractInfo = await ethers.getContractFactory(\"RevertError\");\nlet contract = await contractInfo.deploy()\nawait contract.deployed()\nconsole.log(\"contract Address:\", contract.address)\nlet result = await contract.addError(0);\nconsole.log(\"result:\", result)\ntry {\n    result = await contract.addError(1);\n}catch (e){\n    expect(e.toString()).to.be.contains(\"reverted with panic code 0x11\")\n}",
                  "err": {},
                  "uuid": "60245329-7f4d-4c6e-a773-a77f5fe6e48b",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "5e2ec433-cfd0-4258-bd82-e8b6385715cb",
                "60245329-7f4d-4c6e-a773-a77f5fe6e48b"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 40000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "0545574e-315a-4276-a6ac-e94ccc610feb",
            "9ff206ae-3035-409d-bf9a-fe148db4af10",
            "71885d3d-14bf-4a4b-84ba-6c98b7b279d0",
            "7e96786f-fb1f-448a-8dbf-090aa436f1a2",
            "ce43b867-bb07-4f98-90ed-f734303bf4c3",
            "3fc9603b-6a09-4527-9887-715d4e8728e5",
            "8c923f57-24d8-41d1-96a2-3010a58a2a24",
            "40caedba-992d-46a5-867f-72f1884c4d10",
            "9462abeb-1203-45fa-99d4-238132fa124b",
            "a738e158-2b46-4220-822e-9a453fe12dc6"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "a481563f-3ddc-4247-a21e-98f1d16b61dd",
          "title": "issue245",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/bugs/godwoken-web3.issue301.test.js",
          "file": "/test/bugs/godwoken-web3.issue301.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "issue245 2times(create2 selfdestruct )",
              "fullTitle": "issue245 issue245 2times(create2 selfdestruct )",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const blockInfoContract = await ethers.getContractFactory(\"create2_test\");\ncontract = await blockInfoContract.deploy();\nawait contract.deployed();\nconsole.log(\"contractAddress:\", contract.address);\nlet tx = await  contract.test_create2_destruct();\nlet receipt = await tx.wait();\nconsole.log(\"----\")\nexpect(receipt.events[2].args[1].toString()).to.be.not.equal(\"0x0000000000000000000000000000000000000000\")\ntx = await  contract.test_create2_destruct();\nreceipt = await tx.wait();\nconsole.log(\"----\")\nexpect(receipt.events[2].args[1].toString()).to.be.not.equal(\"0x0000000000000000000000000000000000000000\")",
              "err": {},
              "uuid": "d7d36db4-ec13-4e69-b70a-ea33d6defb82",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "d7d36db4-ec13-4e69-b70a-ea33d6defb82"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "c90d0525-4a3c-46fe-9c49-1a4fda1da987",
          "title": "GovernorTimelockControlMockDeployTest.bug.test.js ",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/bugs/GovernorTimelockControlMockDeployTest.test.js",
          "file": "/test/bugs/GovernorTimelockControlMockDeployTest.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "GovernorTimelockControlMockDeployTest.bug.test.js  \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "contractInfo = await ethers.getContractFactory(\"GovernorTimelockControlMockDeployTest\");",
              "err": {},
              "uuid": "e72ea8b3-817a-407d-acf9-bc74c1dfb096",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "GovernorTimelockControlMockDeployTest deploy ",
              "fullTitle": "GovernorTimelockControlMockDeployTest.bug.test.js  GovernorTimelockControlMockDeployTest deploy ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "contract = await contractInfo.deploy()\nawait contract.deployed()\nlet tx = await contract.init()\nawait tx.wait()\ntx = await contract.Test()\nawait tx.wait()",
              "err": {},
              "uuid": "9dded256-9eec-4069-933b-56537a4ebed3",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "9dded256-9eec-4069-933b-56537a4ebed3"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "dc4fe771-517d-476a-97aa-8d7a4106b318",
          "title": "CrossChainRevertTestContract ",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/bugs/GovernorTimelockControlMockDeployTest2.bug.test.js",
          "file": "/test/bugs/GovernorTimelockControlMockDeployTest2.bug.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "GovernorTimelockControlMockDeployTest deploy failed ",
              "fullTitle": "CrossChainRevertTestContract  GovernorTimelockControlMockDeployTest deploy failed ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let itcContractInfo = await ethers.getContractFactory(\"InitEnvTestContract\");\nlet gtContractInfo = await ethers.getContractFactory(\"GovernorTimelockMockDeployControlTestContract\")\nlet itcContract = await itcContractInfo.deploy();\nlet gtContract = await gtContractInfo.deploy();\nawait gtContract.deployed();\nawait itcContract.deployed()\nlet tx = await itcContract.init()\nawait tx.wait()\ntx = await gtContract.Test(itcContract.address);\ntx.wait()",
              "err": {},
              "uuid": "63b0ba5d-60d0-4a53-a882-18ad81841ac2",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "63b0ba5d-60d0-4a53-a882-18ad81841ac2"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "5147bc3d-388a-4178-9151-e909670ac6f3",
          "title": "lowCallWithValueTest  ",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/bugs/lowCallWithValueContractTest.test.js",
          "file": "/test/bugs/lowCallWithValueContractTest.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "lowCallWithValueContractTest invoke Test ",
              "fullTitle": "lowCallWithValueTest   lowCallWithValueContractTest invoke Test ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let lowCallWithValueContractTestInfo = await ethers.getContractFactory(\"lowCallWithValueTest\");\nconsole.log(\"1. deploy lowCallWithValueContractTest\")\nlet lowCallWithValueContract = await lowCallWithValueContractTestInfo.deploy()\nawait lowCallWithValueContract.deployed()\nconsole.log(\"2. invoke lowCallWithValueContractTest.init()\")\nlet tx1 = await lowCallWithValueContract.init()\nawait tx1.wait()\nconsole.log(\"3. invoke Test\")\ntx1 = await lowCallWithValueContract.Test()\nlet response = await tx1.wait()\nconsole.log(\"response:\", response)\nconsole.log(\"4. invoke Test\")\ntx1 = await lowCallWithValueContract.Test({value: 100})\nresponse = await tx1.wait()\nconsole.log(\"response:\", response)",
              "err": {},
              "uuid": "70e9a6ce-8245-4ff8-8d92-ccc8dfdd2ed0",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "lowCallWithValueContractTest  call ",
              "fullTitle": "lowCallWithValueTest   lowCallWithValueContractTest  call ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let lowCallWithValueContractTestInfo = await ethers.getContractFactory(\"lowCallWithValueTest\");\nconsole.log(\"1. deploy lowCallWithValueContractTest\")\nlet lowCallWithValueContract = await lowCallWithValueContractTestInfo.deploy()\nawait lowCallWithValueContract.deployed()\nconsole.log(\"2. invoke lowCallWithValueContractTest.init()\")\nlet tx1 = await lowCallWithValueContract.init()\nawait tx1.wait()\nconsole.log(\"3. call lowCallWithValueContractTest.dil\")\nlet dilAddress = await lowCallWithValueContract.dil()\nconsole.log('dilAddress:', dilAddress)\nconsole.log(\"4. call lowCallWithValueContractTest.cm\")\nlet cmAddress = await lowCallWithValueContract.cm()\nconsole.log('cmAddress:', cmAddress)\nconsole.log(\"5. invoke cm.clone(lowCallWithValueContractTest.dil().address,'0x9fba1f9a')\")\nlet ClonesMockInfo = await ethers.getContractFactory(\"ClonesMock\");\nlet account = await ethers.getSigners();\nlet clonesMockContract = ClonesMockInfo.connect(account[0]).attach(cmAddress);\nlet tx = await clonesMockContract.clone(dilAddress, ethers.utils.arrayify('0x9fba1f9a'), {value: 100})\nlet response = await tx.wait()\nconsole.log('invoke response :', response)",
              "err": {},
              "uuid": "c1aa77a8-883d-48f0-b8ea-8ec6e6eb64a5",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "70e9a6ce-8245-4ff8-8d92-ccc8dfdd2ed0",
            "c1aa77a8-883d-48f0-b8ea-8ec6e6eb64a5"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "8bbefc78-8efc-46e6-9bfd-5d7e9e9587b0",
          "title": "Multicall_bug ",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/bugs/Multicall_bug.js",
          "file": "/test/bugs/Multicall_bug.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Multicall_bug \"",
              "fullTitle": "Multicall_bug  \"before all\" hook in \"Multicall_bug \"",
              "timedOut": false,
              "duration": 30,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const blockInfoContract = await ethers.getContractFactory(\"Multicall\");",
              "err": {},
              "uuid": "f6028bd4-f518-4e40-b792-1b840873e4fe",
              "parentUUID": "8bbefc78-8efc-46e6-9bfd-5d7e9e9587b0",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "ill tx",
              "fullTitle": "Multicall_bug  ill tx",
              "timedOut": false,
              "duration": 7176,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const blockInfoContract = await ethers.getContractFactory(\"Multicall\");\ncontract = await blockInfoContract.deploy();\nawait contract.deployed();\nconsole.log(\"contractAddress:\", contract.address);\nlet tx = await ethers.provider.send(\"eth_estimateGas\", [{\n    \"to\": contract.address,\n    // \"gas\":\"0xfffff\",\n    \"data\":\"0xac9650d800000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000041945df7b00000000000000000000000000000000000000000000000000000000\"\n},\"latest\"]);\nconsole.log(\"result\",tx)\nlet response = await getTxReceipt(ethers.provider,tx,1)\nconsole.log(\"response:\",response)",
              "err": {
                "message": "ProviderError: UNPREDICTABLE_GAS_LIMIT: revert: Error(ERC20: transfer amount exceeds balance)",
                "estack": "ProviderError: UNPREDICTABLE_GAS_LIMIT: revert: Error(ERC20: transfer amount exceeds balance)\n    at HttpProvider.request (node_modules/hardhat/src/internal/core/providers/http.ts:78:19)\n    at LocalAccountsProvider.request (node_modules/hardhat/src/internal/core/providers/accounts.ts:189:4)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at EthersProviderWrapper.send (node_modules/@nomiclabs/hardhat-ethers/src/internal/ethers-provider-wrapper.ts:13:20)\n    at Context.<anonymous> (test/bugs/Multicall_bug.js:22:18)",
                "diff": null
              },
              "uuid": "4f5e717b-3348-44a6-b0f7-e6114c8dfce3",
              "parentUUID": "8bbefc78-8efc-46e6-9bfd-5d7e9e9587b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "query result",
              "fullTitle": "Multicall_bug  query result",
              "timedOut": false,
              "duration": 30817,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// 0x7317ec83762e48613a910980a82bb02ec9e0e07ae4ad045a6714f72f6f739f52\nlet response = await getTxReceipt(ethers.provider,\"0x7317ec83762e48613a910980a82bb02ec9e0e07ae4ad045a6714f72f6f739f52\",10)\nconsole.log(response)",
              "err": {},
              "uuid": "6db3fe27-d3c9-4957-9804-b4ee294a8b5c",
              "parentUUID": "8bbefc78-8efc-46e6-9bfd-5d7e9e9587b0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6db3fe27-d3c9-4957-9804-b4ee294a8b5c"
          ],
          "failures": [
            "4f5e717b-3348-44a6-b0f7-e6114c8dfce3"
          ],
          "pending": [],
          "skipped": [],
          "duration": 37993,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "1aa6c254-6938-4063-9b2b-a049267d09c6",
          "title": "payableInitializationBugContractTest  ",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/bugs/payableInitializationBugContractTest.bug.test.js",
          "file": "/test/bugs/payableInitializationBugContractTest.bug.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "payableInitializationBugContractTest 1",
              "fullTitle": "payableInitializationBugContractTest   payableInitializationBugContractTest 1",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let payableInitializationBugContractTestInfo = await ethers.getContractFactory(\"payableInitializationBugContractTest\");\nlet payableInitializationBugContract = await payableInitializationBugContractTestInfo.deploy();\nawait payableInitializationBugContract.deployed();\nlet tx = await payableInitializationBugContract.init()\nawait tx.wait()\ntx = await payableInitializationBugContract.Test( ethers.utils.arrayify(\"0xe79f5bee0000000000000000000000000000000000000000000000000000000000000037\"),{value:100});\nlet response = await tx.wait()\nconsole.log(\"tx response :\",response)\nlet address = await payableInitializationBugContract.bpx()\nconsole.log(\"address :\",address)\nconsole.log(\"balance:\",await ethers.provider.getBalance(address))",
              "err": {},
              "uuid": "c6ef3b56-8225-41aa-9870-81210765a592",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "payableInitializationBugContractTest 2",
              "fullTitle": "payableInitializationBugContractTest   payableInitializationBugContractTest 2",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let payableInitializationBugContractTestInfo = await ethers.getContractFactory(\"payableInitializationBugContractTest\");\nconsole.log('1. deploy payableInitializationBugContractTest')\nlet payableInitializationBugContract = await payableInitializationBugContractTestInfo.deploy();\nawait payableInitializationBugContract.deployed();\nconsole.log('2. call addr = payableInitializationBugContractTest.init()')\nlet tx = await payableInitializationBugContract.init()\nawait tx.wait()\nconsole.log('3. call addr = payableInitializationBugContractTest.ub()')\nlet ub_address = await payableInitializationBugContract.ub()\nconsole.log(\"ub address :\",ub_address)\nconsole.log('4. deploy BeaconProxy(ub_address,\"0xe79f5bee0000000000000000000000000000000000000000000000000000000000000037\"{value:100});')\nlet BeaconProxyContractInfo = await ethers.getContractFactory(\"BeaconProxy\");\nlet BeaconProxyContract = await  BeaconProxyContractInfo.deploy(ub_address,ethers.utils.arrayify(\"0xe79f5bee0000000000000000000000000000000000000000000000000000000000000037\"),{value:100});\nawait BeaconProxyContract.deployed();\nconsole.log('eth_getBalance(BeaconProxy.address)')\nconsole.log(\"address:\",BeaconProxyContract.address,\" balance:\",await ethers.provider.getBalance(BeaconProxyContract.address))",
              "err": {},
              "uuid": "cb4d6d67-620a-4919-9a44-20d6f935b3d0",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test payable ",
              "fullTitle": "payableInitializationBugContractTest   test payable ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//PayableContractTest\nlet PayableContractTestInfo = await ethers.getContractFactory(\"PayableContractTest\");\nlet PayableContract = await PayableContractTestInfo.deploy({value:100})\nawait PayableContract.deployed();\nconsole.log(\"balance:\",await ethers.provider.getBalance(PayableContract.address))\nexpect(await ethers.provider.getBalance(PayableContract.address)).to.be.equal(100)",
              "err": {},
              "uuid": "eabf4fdb-1031-4d10-bab2-8b49a8f754bd",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "c6ef3b56-8225-41aa-9870-81210765a592",
            "cb4d6d67-620a-4919-9a44-20d6f935b3d0",
            "eabf4fdb-1031-4d10-bab2-8b49a8f754bd"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "d0040b82-9650-43d8-8e48-b51fc03a6b33",
          "title": "ReentrancyGuard.test.bug.js",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/bugs/ReentrancyGuard.test.bug.js",
          "file": "/test/bugs/ReentrancyGuard.test.bug.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "require but error ",
              "fullTitle": "ReentrancyGuard.test.bug.js require but error ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let ReentrancyMockInfo = await ethers.getContractFactory(\"ReentrancyMock\");\n        let ReentrancyMockContract = await ReentrancyMockInfo.deploy()\n        await ReentrancyMockContract.deployed()\n        console.log(\"contract Address:\", ReentrancyMockContract.address)\n        let ReentrancyAttackInfo = await ethers.getContractFactory(\"ReentrancyAttack\");\n        let ReentrancyAttackContract = await ReentrancyAttackInfo.deploy();\n        await ReentrancyAttackContract.deployed();\n        console.log(\"ReentrancyAttackContract Address:\", ReentrancyAttackContract.address)\n        let tx = await ReentrancyMockContract.countAndCall(ReentrancyAttackContract.address);\n        await tx.wait()",
              "err": {},
              "uuid": "b16db78c-9fdb-49be-bc72-7ac596f18645",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "b16db78c-9fdb-49be-bc72-7ac596f18645"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "e193f5c6-c530-4c38-b17e-92b3d33bd32b",
          "title": "RevertError.js ",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/bugs/RevertError.bug.js",
          "file": "/test/bugs/RevertError.bug.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "error RpcError: Returned values aren't valid, did it run Out of Gas? You might also see this error if you are not using the correct ABI for the contract you are retrieving data from, requesting data from a block number that does not exist, or querying a node which is not fully synced. RpcError: Returned values aren't valid, did it run Out of Gas? You might also see this error if you are not using the correct ABI for the contract you are retrieving data from, requesting data from a block number that does not exist, or querying a node which is not fully synced.\n",
              "fullTitle": "RevertError.js  error RpcError: Returned values aren't valid, did it run Out of Gas? You might also see this error if you are not using the correct ABI for the contract you are retrieving data from, requesting data from a block number that does not exist, or querying a node which is not fully synced. RpcError: Returned values aren't valid, did it run Out of Gas? You might also see this error if you are not using the correct ABI for the contract you are retrieving data from, requesting data from a block number that does not exist, or querying a node which is not fully synced.\n",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let contractInfo = await ethers.getContractFactory(\"RevertError\");\n        let contract = await contractInfo.deploy()\n        await contract.deployed()\n        console.log(\"contract Address:\",contract.address)\n        let result = await contract.testEmpty()",
              "err": {},
              "uuid": "3f572ea8-86a0-4ad7-a1e4-c61103f184ff",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "overflow",
              "fullTitle": "RevertError.js  overflow",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//expected : execution reverted\nlet contractInfo = await ethers.getContractFactory(\"RevertError\");\nlet contract = await contractInfo.deploy()\nawait contract.deployed()\nconsole.log(\"contract Address:\",contract.address)\nlet result = await contract.addError(0);\nconsole.log(\"result:\",result)\nresult = await contract.addError(1);",
              "err": {},
              "uuid": "6b6ae19a-c11a-463b-b113-0dcb64a08783",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "3f572ea8-86a0-4ad7-a1e4-c61103f184ff",
            "6b6ae19a-c11a-463b-b113-0dcb64a08783"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "aeccbc91-76f9-46b6-8fc8-72cb6103bba9",
          "title": "send tx",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/bugs/send1000tx.js",
          "file": "/test/bugs/send1000tx.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "send tx \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "8fef5652-9872-457e-97af-027292a468aa",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "28376f12-47f2-4a92-9776-76d340a08ce7",
              "title": "demo",
              "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/bugs/send1000tx.js",
              "file": "/test/bugs/send1000tx.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "demo",
                  "fullTitle": "send tx demo demo",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let interval = 1;\n            for (let i = 0; i < 10000; i++) {\n                await ethers.provider.send(\"eth_sendTransaction\", [{\n                    \"data\": \"0x608060405234801561001057600080fd5b50604051610e30380380610e308339810180604052810190808051906020019092919080518201929190602001805190602001909291908051820192919050505083600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508360008190555082600390805190602001906100b29291906100ee565b5081600460006101000a81548160ff021916908360ff16021790555080600590805190602001906100e49291906100ee565b5050505050610193565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061012f57805160ff191683800117855561015d565b8280016001018555821561015d579182015b8281111561015c578251825591602001919060010190610141565b5b50905061016a919061016e565b5090565b61019091905b8082111561018c576000816000905550600101610174565b5090565b90565b610c8e806101a26000396000f3006080604052600436106100af576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100b4578063095ea7b31461014457806318160ddd146101a957806323b872dd146101d457806327e235e314610259578063313ce567146102b05780635c658165146102e157806370a082311461035857806395d89b41146103af578063a9059cbb1461043f578063dd62ed3e146104a4575b600080fd5b3480156100c057600080fd5b506100c961051b565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101095780820151818401526020810190506100ee565b50505050905090810190601f1680156101365780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015057600080fd5b5061018f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105b9565b604051808215151515815260200191505060405180910390f35b3480156101b557600080fd5b506101be6106ab565b6040518082815260200191505060405180910390f35b3480156101e057600080fd5b5061023f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106b1565b604051808215151515815260200191505060405180910390f35b34801561026557600080fd5b5061029a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061094b565b6040518082815260200191505060405180910390f35b3480156102bc57600080fd5b506102c5610963565b604051808260ff1660ff16815260200191505060405180910390f35b3480156102ed57600080fd5b50610342600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610976565b6040518082815260200191505060405180910390f35b34801561036457600080fd5b50610399600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061099b565b6040518082815260200191505060405180910390f35b3480156103bb57600080fd5b506103c46109e4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104045780820151818401526020810190506103e9565b50505050905090810190601f1680156104315780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561044b57600080fd5b5061048a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a82565b604051808215151515815260200191505060405180910390f35b3480156104b057600080fd5b50610505600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bdb565b6040518082815260200191505060405180910390f35b60038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105b15780601f10610586576101008083540402835291602001916105b1565b820191906000526020600020905b81548152906001019060200180831161059457829003601f168201915b505050505081565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60005481565b600080600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101580156107825750828110155b151561078d57600080fd5b82600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555082600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156108da5782600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a360019150509392505050565b60016020528060005260406000206000915090505481565b600460009054906101000a900460ff1681565b6002602052816000526040600020602052806000526040600020600091509150505481565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a7a5780601f10610a4f57610100808354040283529160200191610a7a565b820191906000526020600020905b815481529060010190602001808311610a5d57829003601f168201915b505050505081565b600081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515610ad257600080fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050929150505600a165627a7a72305820f44594c2ec12f2f887263343efd6545cd5eaab7e903fb27b4bdfa850f9fad7e40029\",\n                    \"gas\":\"0x1296c7\"\n                }]);\n                await new Promise(r => setTimeout(r, interval));\n            }",
                  "err": {},
                  "uuid": "5da00032-0cf8-4925-97d1-a8ce56ad3b10",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "demo esGas",
                  "fullTitle": "send tx demo demo esGas",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "for (let i = 0; i < 10000; i++) {\n    await ethers.provider.send(\"eth_estimateGas\", [{\n        \"data\": \"0x608060405234801561001057600080fd5b50604051610e30380380610e308339810180604052810190808051906020019092919080518201929190602001805190602001909291908051820192919050505083600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508360008190555082600390805190602001906100b29291906100ee565b5081600460006101000a81548160ff021916908360ff16021790555080600590805190602001906100e49291906100ee565b5050505050610193565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061012f57805160ff191683800117855561015d565b8280016001018555821561015d579182015b8281111561015c578251825591602001919060010190610141565b5b50905061016a919061016e565b5090565b61019091905b8082111561018c576000816000905550600101610174565b5090565b90565b610c8e806101a26000396000f3006080604052600436106100af576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100b4578063095ea7b31461014457806318160ddd146101a957806323b872dd146101d457806327e235e314610259578063313ce567146102b05780635c658165146102e157806370a082311461035857806395d89b41146103af578063a9059cbb1461043f578063dd62ed3e146104a4575b600080fd5b3480156100c057600080fd5b506100c961051b565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101095780820151818401526020810190506100ee565b50505050905090810190601f1680156101365780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015057600080fd5b5061018f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105b9565b604051808215151515815260200191505060405180910390f35b3480156101b557600080fd5b506101be6106ab565b6040518082815260200191505060405180910390f35b3480156101e057600080fd5b5061023f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106b1565b604051808215151515815260200191505060405180910390f35b34801561026557600080fd5b5061029a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061094b565b6040518082815260200191505060405180910390f35b3480156102bc57600080fd5b506102c5610963565b604051808260ff1660ff16815260200191505060405180910390f35b3480156102ed57600080fd5b50610342600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610976565b6040518082815260200191505060405180910390f35b34801561036457600080fd5b50610399600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061099b565b6040518082815260200191505060405180910390f35b3480156103bb57600080fd5b506103c46109e4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104045780820151818401526020810190506103e9565b50505050905090810190601f1680156104315780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561044b57600080fd5b5061048a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a82565b604051808215151515815260200191505060405180910390f35b3480156104b057600080fd5b50610505600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bdb565b6040518082815260200191505060405180910390f35b60038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105b15780601f10610586576101008083540402835291602001916105b1565b820191906000526020600020905b81548152906001019060200180831161059457829003601f168201915b505050505081565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60005481565b600080600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101580156107825750828110155b151561078d57600080fd5b82600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555082600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156108da5782600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a360019150509392505050565b60016020528060005260406000206000915090505481565b600460009054906101000a900460ff1681565b6002602052816000526040600020602052806000526040600020600091509150505481565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a7a5780601f10610a4f57610100808354040283529160200191610a7a565b820191906000526020600020905b815481529060010190602001808311610a5d57829003601f168201915b505050505081565b600081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515610ad257600080fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050929150505600a165627a7a72305820f44594c2ec12f2f887263343efd6545cd5eaab7e903fb27b4bdfa850f9fad7e40029\",\n        // \"to\":\"0x5d0666bae2a0116ffb37e2d5684a3b432c3b7e73\"\n    }]);\n    // await new Promise(r => setTimeout(r, 400));\n}",
                  "err": {},
                  "uuid": "34cb35d6-3c1d-4f90-adbd-9bfe3d8a8ca8",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "5da00032-0cf8-4925-97d1-a8ce56ad3b10",
                "34cb35d6-3c1d-4f90-adbd-9bfe3d8a8ca8"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 40000
            },
            {
              "uuid": "deddc63b-c3f9-4bc1-97c6-4e61a1434b09",
              "title": "demo 2 ",
              "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/bugs/send1000tx.js",
              "file": "/test/bugs/send1000tx.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "demo",
                  "fullTitle": "send tx demo 2  demo",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await sendTxToAddBlockNum(ethers.provider,1000)",
                  "err": {},
                  "uuid": "79d4b188-f58b-404e-a648-4e7ccbafe423",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "79d4b188-f58b-404e-a648-4e7ccbafe423"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 40000
            },
            {
              "uuid": "2e73c99f-e3c6-4581-a883-f6d27ab17dae",
              "title": "query nonce  ",
              "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/bugs/send1000tx.js",
              "file": "/test/bugs/send1000tx.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "demo",
                  "fullTitle": "send tx query nonce   demo",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "for (let i = 0; i < 1000000000000; i++) {\n    let count = await ethers.provider.getTransactionCount(ethers.provider.getSigner().getAddress())\n    console.log(\"tx size:\",count)\n}",
                  "err": {},
                  "uuid": "c8b76238-04b9-4e9e-9078-2a6a3c6501ca",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "c8b76238-04b9-4e9e-9078-2a6a3c6501ca"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 40000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "8814f7f7-8888-41e3-860d-e73d8efc204a",
          "title": "send tx",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/bugs/txcount.bug.test.js",
          "file": "/test/bugs/txcount.bug.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "send tx \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "ba6b3c4d-a365-45bf-ab98-3f1a49742374",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "5f12ae90-d33e-4afc-be97-d070ad667e01",
              "title": "demo",
              "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/bugs/txcount.bug.test.js",
              "file": "/test/bugs/txcount.bug.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "demo",
                  "fullTitle": "send tx demo demo",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "for (let i = 0; i < 10000; i++) {\n    let beforeCount = await ethers.provider.getTransactionCount(\"0x0c1efcca2bcb65a532274f3ef24c044ef4ab6d73\");\n    await ethers.provider.send(\"eth_sendTransaction\", [{\n        \"data\": \"0x60806040527f82d627ada1235e696c62b3c7b3472cc1c8d6960898ef528f60ca8000bcbbcbfd600160405162000036919062000055565b60405180910390a162000090565b6200004f816200007c565b82525050565b60006020820190506200006c600083018462000044565b92915050565b6000819050919050565b6000620000898262000072565b9050919050565b6159c580620000a06000396000f3fe60806040526004361061002d5760003560e01c80632bc6e683146100435780636c3bbd111461005a57610034565b3661003457005b34801561004057600080fd5b50005b34801561004f57600080fd5b50610058610083565b005b34801561006657600080fd5b50610081600480360381019061007c9190612dec565b612542565b005b7f2267aefac5af610051a1420ece2966621852e059c5a2a8aa31ce55bb0e3b555e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff806040516100d29190613aba565b60405180910390a17f2267aefac5af610051a1420ece2966621852e059c5a2a8aa31ce55bb0e3b555e607f60405161010a9190613aba565b60405180910390a17fe39db033ae4ccb3b51c6197f92c0a29dad887a71f7f26e032280ab6a4f4ea80060006040516101429190613e1a565b60405180910390a17fe39db033ae4ccb3b51c6197f92c0a29dad887a71f7f26e032280ab6a4f4ea80060ff60405161017a9190613e1a565b60405180910390a17f2267aefac5af610051a1420ece2966621852e059c5a2a8aa31ce55bb0e3b555e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff806040516101d19190613aba565b60405180910390a17f2267aefac5af610051a1420ece2966621852e059c5a2a8aa31ce55bb0e3b555e607f6040516102099190613aba565b60405180910390a17fe39db033ae4ccb3b51c6197f92c0a29dad887a71f7f26e032280ab6a4f4ea80060006040516102419190613e1a565b60405180910390a17fe39db033ae4ccb3b51c6197f92c0a29dad887a71f7f26e032280ab6a4f4ea80060ff6040516102799190613e1a565b60405180910390a17f070ce88a6ce1a8855527f7c015b38895a0167b595c76cb1e610ebb2fbcc1cd9f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80006040516102d09190613883565b60405180910390a17f070ce88a6ce1a8855527f7c015b38895a0167b595c76cb1e610ebb2fbcc1cd9f617fff6040516103099190613883565b60405180910390a17ff752be3804265f4a34e93a946393e264e01f7632e19b70168e18c2cc82baf9a960006040516103419190613be3565b60405180910390a17ff752be3804265f4a34e93a946393e264e01f7632e19b70168e18c2cc82baf9a961ffff60405161037a9190613be3565b60405180910390a17f857ad569e1fd593b615806d0115eca10227a408427caf36e4003046f07f6b0617fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000006040516103d191906139ac565b60405180910390a17f857ad569e1fd593b615806d0115eca10227a408427caf36e4003046f07f6b061627fffff60405161040b91906139ac565b60405180910390a17f8a700458ab3ad06c3f0bd20407230093d0a0fe3c749a6f188803e31928065e8660006040516104439190613d0c565b60405180910390a17f8a700458ab3ad06c3f0bd20407230093d0a0fe3c749a6f188803e31928065e8662ffffff60405161047d9190613d0c565b60405180910390a17f092b29bb19d8b8e8c13a43671b38c553754ef16c728eef7b7d06486c8a13383c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000006040516104d491906139e2565b60405180910390a17f092b29bb19d8b8e8c13a43671b38c553754ef16c728eef7b7d06486c8a13383c637fffffff60405161050f91906139e2565b60405180910390a17fb8175cbe300af7df3e29543198a1b41bcba6daa22b99e76a21ca62bfc231260f60006040516105479190613d42565b60405180910390a17fb8175cbe300af7df3e29543198a1b41bcba6daa22b99e76a21ca62bfc231260f63ffffffff6040516105829190613d42565b60405180910390a17fe12c1db4f04103b275cb84a2ba35a5ce00745ef1ccb9aeda0bb66955c2e7b3fe7fffffffffffffffffffffffffffffffffffffffffffffffffffffff80000000006040516105d991906139fd565b60405180910390a17fe12c1db4f04103b275cb84a2ba35a5ce00745ef1ccb9aeda0bb66955c2e7b3fe647fffffffff60405161061591906139fd565b60405180910390a17f7ddc8d28df6e28fc9ffd391871093b92362b636d7d3fbabbded431ab295dc727600060405161064d9190613d5d565b60405180910390a17f7ddc8d28df6e28fc9ffd391871093b92362b636d7d3fbabbded431ab295dc72764ffffffffff6040516106899190613d5d565b60405180910390a17fcedf44c599ccdb61476915830196faf3738191ddaa1136a56731b6804836deb07fffffffffffffffffffffffffffffffffffffffffffffffffffff8000000000006040516106e09190613a18565b60405180910390a17fcedf44c599ccdb61476915830196faf3738191ddaa1136a56731b6804836deb0657fffffffffff60405161071d9190613a18565b60405180910390a17f53e387047290039a1cd8b0b9407cd083c86c632acd909c4921a42f3f9763bf6560006040516107559190613d78565b60405180910390a17f53e387047290039a1cd8b0b9407cd083c86c632acd909c4921a42f3f9763bf6565ffffffffffff6040516107929190613d78565b60405180910390a17f2e59e9225b9c8459a106dd525a63cec81ed231a3751bc112b633c9624c27e5967fffffffffffffffffffffffffffffffffffffffffffffffffff800000000000006040516107e99190613a33565b60405180910390a17f2e59e9225b9c8459a106dd525a63cec81ed231a3751bc112b633c9624c27e596667fffffffffffff6040516108279190613a33565b60405180910390a17fc6837b046cd6ab97e401e33d67b234ae393d10d8d9b2b07df2a1c8b77b7d92b9600060405161085f9190613d93565b60405180910390a17fc6837b046cd6ab97e401e33d67b234ae393d10d8d9b2b07df2a1c8b77b7d92b966ffffffffffffff60405161089d9190613d93565b60405180910390a17fc8b24ebcfdbf8221a00e3a7c0d9bcae0ca1cdca4d3abe02aea2f691eada891ee7fffffffffffffffffffffffffffffffffffffffffffffffff80000000000000006040516108f49190613a4e565b60405180910390a17fc8b24ebcfdbf8221a00e3a7c0d9bcae0ca1cdca4d3abe02aea2f691eada891ee677fffffffffffffff6040516109339190613a4e565b60405180910390a17fa6885ec77ae25f433724e0862913791b377dc1a5d0b54c479d5d0bd2ddee5147600060405161096b9190613dae565b60405180910390a17fa6885ec77ae25f433724e0862913791b377dc1a5d0b54c479d5d0bd2ddee514767ffffffffffffffff6040516109aa9190613dae565b60405180910390a17f1541e9e23da3e77c13b7a8b5a63504034aed992b5f8e1b709ddbab67ca98b7007fffffffffffffffffffffffffffffffffffffffffffffff800000000000000000604051610a019190613a69565b60405180910390a17f1541e9e23da3e77c13b7a8b5a63504034aed992b5f8e1b709ddbab67ca98b700687fffffffffffffffff604051610a419190613a69565b60405180910390a17f38acf574c9a09195276114f803e1b14aa5fa35fe5ba5608e1541e67cb34ca2916000604051610a799190613dc9565b60405180910390a17f38acf574c9a09195276114f803e1b14aa5fa35fe5ba5608e1541e67cb34ca29168ffffffffffffffffff604051610ab99190613dc9565b60405180910390a17fc0a8b99072e6786b1aae4a7707ee08f52ba70589ec4ff38bd2bc25228b3b47b47fffffffffffffffffffffffffffffffffffffffffffff80000000000000000000604051610b109190613a84565b60405180910390a17fc0a8b99072e6786b1aae4a7707ee08f52ba70589ec4ff38bd2bc25228b3b47b4697fffffffffffffffffff604051610b519190613a84565b60405180910390a17f54a033948e529800065b9e031719d2d8dfbd1ca5be2a416bfced0a77c1c68b7b6000604051610b899190613de4565b60405180910390a17f54a033948e529800065b9e031719d2d8dfbd1ca5be2a416bfced0a77c1c68b7b69ffffffffffffffffffff604051610bca9190613de4565b60405180910390a17faca9be1db7ecae1c9221213817a11119347b1fcd5b7054b0a839e180e96426fb7fffffffffffffffffffffffffffffffffffffffffff8000000000000000000000604051610c219190613a9f565b60405180910390a17faca9be1db7ecae1c9221213817a11119347b1fcd5b7054b0a839e180e96426fb6a7fffffffffffffffffffff604051610c639190613a9f565b60405180910390a17f0d9cd5f49d03cf1d5d963d27581418ab678c801958745fbc5c24b7e387b1b0346000604051610c9b9190613dff565b60405180910390a17f0d9cd5f49d03cf1d5d963d27581418ab678c801958745fbc5c24b7e387b1b0346affffffffffffffffffffff604051610cdd9190613dff565b60405180910390a17f43d5b38b495e25d12c3ec118a731113a2fe6c4be36ad771430a17414f5bb050d7fffffffffffffffffffffffffffffffffffffffff800000000000000000000000604051610d349190613ad5565b60405180910390a17f43d5b38b495e25d12c3ec118a731113a2fe6c4be36ad771430a17414f5bb050d6b7fffffffffffffffffffffff604051610d779190613ad5565b60405180910390a17fe0d2d5db80ea5781647a555fec42c258c02ce29873b57a5cd01d52c6ef0ce9096000604051610daf9190613e35565b60405180910390a17fe0d2d5db80ea5781647a555fec42c258c02ce29873b57a5cd01d52c6ef0ce9096bffffffffffffffffffffffff604051610df29190613e35565b60405180910390a17ff034428006dbcc87f3a1d3b9d3e273b360e85780be5d220f02119447812b6eab7fffffffffffffffffffffffffffffffffffffff80000000000000000000000000604051610e499190613790565b60405180910390a17ff034428006dbcc87f3a1d3b9d3e273b360e85780be5d220f02119447812b6eab6c7fffffffffffffffffffffffff604051610e8d9190613790565b60405180910390a17fa19592a973e151339eb1a757809fcb0ea22de35ee8bd3605153758b57781dbf36000604051610ec59190613af0565b60405180910390a17fa19592a973e151339eb1a757809fcb0ea22de35ee8bd3605153758b57781dbf36cffffffffffffffffffffffffff604051610f099190613af0565b60405180910390a17f5d5c555f8950a05c47ba8e4092f135b6c6e3f73513485f83a4d8864aab6d9d407fffffffffffffffffffffffffffffffffffff8000000000000000000000000000604051610f6091906137ab565b60405180910390a17f5d5c555f8950a05c47ba8e4092f135b6c6e3f73513485f83a4d8864aab6d9d406d7fffffffffffffffffffffffffff604051610fa591906137ab565b60405180910390a17f0dd8250699d7092f1d9729f4e382ccc5b667b95f7cb926b8a0b0c67f624414f06000604051610fdd9190613b0b565b60405180910390a17f0dd8250699d7092f1d9729f4e382ccc5b667b95f7cb926b8a0b0c67f624414f06dffffffffffffffffffffffffffff6040516110229190613b0b565b60405180910390a17f4638caa21c44a8c6e236bc52dacb4694bb26e7edb8c699bf2f4997337c3d28297fffffffffffffffffffffffffffffffffff80000000000000000000000000000060405161107991906137c6565b60405180910390a17f4638caa21c44a8c6e236bc52dacb4694bb26e7edb8c699bf2f4997337c3d28296e7fffffffffffffffffffffffffffff6040516110bf91906137c6565b60405180910390a17f39e8b45dcba3fd0dd610cd4ecdaee851adda527e0c3a860ef6e3bf464d27cb3560006040516110f79190613b26565b60405180910390a17f39e8b45dcba3fd0dd610cd4ecdaee851adda527e0c3a860ef6e3bf464d27cb356effffffffffffffffffffffffffffff60405161113d9190613b26565b60405180910390a17f83c7fd9fdbaafbb19c0a635aba684084f43e4e981deb72d4efc5d67024a2ecf07fffffffffffffffffffffffffffffffff8000000000000000000000000000000060405161119491906137e1565b60405180910390a17f83c7fd9fdbaafbb19c0a635aba684084f43e4e981deb72d4efc5d67024a2ecf06f7fffffffffffffffffffffffffffffff6040516111db91906137e1565b60405180910390a17f9494f80c3bd288ceda4ba59d5420de2915ac7033420e39fa489374d10a5b5c5160006040516112139190613b41565b60405180910390a17f9494f80c3bd288ceda4ba59d5420de2915ac7033420e39fa489374d10a5b5c516fffffffffffffffffffffffffffffffff60405161125a9190613b41565b60405180910390a17f3722459e9340c4d3c2b030cc576da7bc6c616b10312d5943911490a718c563837fffffffffffffffffffffffffffffff80000000000000000000000000000000006040516112b191906137fc565b60405180910390a17f3722459e9340c4d3c2b030cc576da7bc6c616b10312d5943911490a718c56383707fffffffffffffffffffff\"\n    }]);\n    let afterCount = await ethers.provider.getTransactionCount(\"0x0c1efcca2bcb65a532274f3ef24c044ef4ab6d73\");\n    console.log(\"beforeCount:\", beforeCount)\n    console.log(\"afterCount:\",afterCount)\n    expect(beforeCount).to.be.not.equal(afterCount)\n}",
                  "err": {},
                  "uuid": "e1092c09-93fa-4781-a977-e87a4f16ef24",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "e1092c09-93fa-4781-a977-e87a4f16ef24"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 40000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "f479280a-cea7-4080-a41e-90f5ca9ebcdf",
          "title": "BugProxyTest ",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/bugs/UpGradeBugContractTest.test.js",
          "file": "/test/bugs/UpGradeBugContractTest.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "BugProxyTest  \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "contractInfo = await ethers.getContractFactory(\"UpGradeBugContractTest\");",
              "err": {},
              "uuid": "a5803330-6344-4f0b-aee6-9e4fef68b98a",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "",
              "fullTitle": "BugProxyTest  ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "contract = await contractInfo.deploy()\nawait contract.deployed()\nlet tx = await contract.init()\ntx.wait()\ntx = await contract.Test()\ntx.wait()",
              "err": {},
              "uuid": "fdd19dec-1df4-4a3c-ba27-f799c2bc769d",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "it2",
              "fullTitle": "BugProxyTest  it2",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "1d7b6ce4-04c8-4363-afc3-7caee596f0bf",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "fdd19dec-1df4-4a3c-ba27-f799c2bc769d",
            "1d7b6ce4-04c8-4363-afc3-7caee596f0bf"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "2275755d-7a3d-4a69-890e-6754bb694f4c",
          "title": "addressContract.js opcode -address(address(this),address(this).balance,address(this).code,address(this).code.length,address(this).codehash) ",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/opcodes/blockchain/addressContract.js",
          "file": "/test/opcodes/blockchain/addressContract.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "addressContract.js opcode -address(address(this),address(this).balance,address(this).code,address(this).code.length,address(this).codehash)  \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "blockInfoContract = await ethers.getContractFactory(\"addressContract\");\ncontract = await blockInfoContract.deploy({value: 10000n});\nawait contract.deployed();\ncontract2 = await blockInfoContract.deploy({value: 101n});\nawait contract2.deployed();",
              "err": {},
              "uuid": "c01ed109-b793-4e29-aec1-fedfa11a5735",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "opcode - (query log for deploy,godwoken deploy code is 0x0)",
              "fullTitle": "addressContract.js opcode -address(address(this),address(this).balance,address(this).code,address(this).code.length,address(this).codehash)  opcode - (query log for deploy,godwoken deploy code is 0x0)",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = await contract2.deployTransaction.wait();\nexpect(result.events[0].args.msg.latestBalance).to.be.equal(101n)\nexpect(result.events[0].args.msg.latestAddress).to.be.equal(contract2.address)\nexpect(result.events[0].args.msg.latestCode).to.be.equal(\"0x\")\nexpect(result.events[0].args.msg.latestCodeLength).to.be.equal(0n)\nexpect(result.events[0].args[1].latestCodeHash).to.be.equal(\"0x0000000000000000000000000000000000000000000000000000000000000000\");",
              "err": {},
              "uuid": "ae15e960-d60e-4bc5-9730-3049fb35a124",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "opcode query(opcodeWithAddress) ",
              "fullTitle": "addressContract.js opcode -address(address(this),address(this).balance,address(this).code,address(this).code.length,address(this).codehash)  opcode query(opcodeWithAddress) ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = await contract.opcodeWithAddress();\nlet code = await ethers.provider.getCode(contract.address)\nexpect(result[0]).to.be.equal(contract.address)\nexpect(result[1]).to.be.equal(10000n)\nexpect(result[2]).to.be.equal(code)\nexpect(result[4]).to.be.equal(\"0xc5a94d21b524783a20d29f69f58fb1e79791dd9145c027947fdb87fbb1e25826\");",
              "err": {},
              "uuid": "9e151e82-b48a-4ba3-b991-67ec178dbfd9",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "opcode -  (ADDRESS,CODESIZE,EXTCODESIZE,SELFBALANCE) query on deploy",
              "fullTitle": "addressContract.js opcode -address(address(this),address(this).balance,address(this).code,address(this).code.length,address(this).codehash)  opcode -  (ADDRESS,CODESIZE,EXTCODESIZE,SELFBALANCE) query on deploy",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let tx = await contract.setAddressMsg();\n        let result = await tx.wait();\n        expect(result.events[0].args[1].latestBalance).to.be.equal(10000n)\n        expect(result.events[0].args[1].latestAddress).to.be.equal(contract.address)\n        expect(result.events[0].args[1].latestCode).to.not.be.contains(\"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\");\n        expect(result.events[0].args[1].latestCodeLength).to.be.equal(3441n)\n        expect(result.events[0].args[1].latestCodeHash).to.be.equal(\"0xc5a94d21b524783a20d29f69f58fb1e79791dd9145c027947fdb87fbb1e25826\")",
              "err": {},
              "uuid": "fb92e035-f526-40d2-93f9-7c0447ca8499",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "getOtherAddress -1 ",
              "fullTitle": "addressContract.js opcode -address(address(this),address(this).balance,address(this).code,address(this).code.length,address(this).codehash)  getOtherAddress -1 ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = await contract.getOtherAddress(\"0x0C1EfCCa2Bcb65A532274f3eF24c044EF4ab6D73\");\nexpect(result[0]).to.be.equal(\"0x0C1EfCCa2Bcb65A532274f3eF24c044EF4ab6D73\")\n// expect(result[1]).to.be.equal(101n)\nexpect(result[2]).to.be.equal(\"0x\")\nexpect(result[3]).to.be.equal(0n)\nexpect(result[4]).to.be.equal(\"0x0000000000000000000000000000000000000000000000000000000000000000\")",
              "err": {},
              "uuid": "99f8991d-ca3d-464c-9d85-1c875b4e3172",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "getOtherAddress -(register account ) ",
              "fullTitle": "addressContract.js opcode -address(address(this),address(this).balance,address(this).code,address(this).code.length,address(this).codehash)  getOtherAddress -(register account ) ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = await contract.getOtherAddress(\"0x0C1EfCCa2Bcb65A532274f3eF24c044EF4ab6D73\");\nexpect(result[0]).to.be.equal(\"0x0C1EfCCa2Bcb65A532274f3eF24c044EF4ab6D73\")\n// expect(result[1]).to.be.equal(101n)\nexpect(result[2]).to.be.equal(\"0x\")\nexpect(result[3]).to.be.equal(0n)\nexpect(result[4]).to.be.equal(\"0x0000000000000000000000000000000000000000000000000000000000000000\")",
              "err": {},
              "uuid": "22eff942-3031-4e7a-80dd-e43e1a3e3a97",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "getOtherAddress -(unregister account ) ",
              "fullTitle": "addressContract.js opcode -address(address(this),address(this).balance,address(this).code,address(this).code.length,address(this).codehash)  getOtherAddress -(unregister account ) ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = await contract.getOtherAddress(\"0xdB81D2b8154A10C6f25bC2a9225F403D954D0B65\");\n        expect(result[0]).to.be.equal(\"0xdB81D2b8154A10C6f25bC2a9225F403D954D0B65\")\n        // expect(result[1]).to.be.equal(101n)\n        expect(result[2]).to.be.equal(\"0x\")\n        expect(result[3]).to.be.equal(0n)\n        expect(result[4]).to.be.equal(\"0x0000000000000000000000000000000000000000000000000000000000000000\")",
              "err": {},
              "uuid": "af6c94ff-b685-4036-930f-503d903ba5d5",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "ae15e960-d60e-4bc5-9730-3049fb35a124",
            "9e151e82-b48a-4ba3-b991-67ec178dbfd9",
            "fb92e035-f526-40d2-93f9-7c0447ca8499",
            "99f8991d-ca3d-464c-9d85-1c875b4e3172",
            "22eff942-3031-4e7a-80dd-e43e1a3e3a97",
            "af6c94ff-b685-4036-930f-503d903ba5d5"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        },
        {
          "uuid": "7a26ce48-9e7c-409d-ad01-d4af12113528",
          "title": "assemblyContract.js opcode -assemblyContract ",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/opcodes/blockchain/assemblyContract.js",
          "file": "/test/opcodes/blockchain/assemblyContract.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "assemblyContract.js opcode -assemblyContract  \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const blockInfoContract = await ethers.getContractFactory(\"assemblyContract\");\ncontract = await blockInfoContract.deploy();\nawait contract.deployed();",
              "err": {},
              "uuid": "aea76313-f6f9-46d4-8b1a-cd188b1be807",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "opcode - assemblyContract",
              "fullTitle": "assemblyContract.js opcode -assemblyContract  opcode - assemblyContract",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//    function addOpt(bytes memory a,uint256 b1) public returns(bytes memory b){\ntry {\n    let result = await contract.addOpt(ethers.utils.arrayify(\"0x2001\"), 33)\n} catch (error) {\n    return\n}\nexpect(\"\").to.be.contains(\"failed\")",
              "err": {},
              "uuid": "54f7adbb-0c18-474e-b9a6-b48f98c24f0b",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "54f7adbb-0c18-474e-b9a6-b48f98c24f0b"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "bf534df2-4101-4583-bdfe-f7cb623b5857",
          "title": "BlockMsgContractTest.js opcode -blockchain -block ",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/opcodes/blockchain/BlockMsgContractTest.js",
          "file": "/test/opcodes/blockchain/BlockMsgContractTest.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "BlockMsgContractTest.js opcode -blockchain -block  \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const blockInfoContract = await ethers.getContractFactory(\"BlockMsgContract\");\ncontract = await blockInfoContract.deploy();\nawait contract.deployed();\nconsole.log(\"contractAddress:\", contract.address);",
              "err": {},
              "uuid": "ac6ba5dd-e3a2-4bc5-9591-8c32b7dd005d",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "block -blockMsgContract blockhash",
              "fullTitle": "BlockMsgContractTest.js opcode -blockchain -block  block -blockMsgContract blockhash",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let tx = await contract.getBlockHashEventTopre256()\n        let receipt = await tx.wait()\n        for (let i = 0; i < receipt.events.length; i++) {\n            if (i < 2 || i >= 258) {\n                expect(receipt.events[i].args[0]).to.be.equal(\"0x0000000000000000000000000000000000000000000000000000000000000000\");\n            } else {\n                expect(receipt.events[i].args[0]).to.be.not.equal(\"0x0000000000000000000000000000000000000000000000000000000000000000\");\n            }\n        }",
              "err": {},
              "uuid": "08103ef6-9686-4147-b042-958107b89c2d",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "block - view blockMsgContract blockhash",
              "fullTitle": "BlockMsgContractTest.js opcode -blockchain -block  block - view blockMsgContract blockhash",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//todo  assert\nlet receipt = await contract.getBlockHashEventTopre256View()\nlet height = await ethers.provider.getBlockNumber()\nfor (let i = 0; i < receipt.length; i++) {\n    if (height + 1 - i < 0) {\n        expect(receipt[i]).to.be.equal(\"0x0000000000000000000000000000000000000000000000000000000000000000\");\n        continue;\n    }\n    if (i < 2 || i >= 258) {\n        expect(receipt[i]).to.be.equal(\"0x0000000000000000000000000000000000000000000000000000000000000000\");\n    } else {\n        expect(receipt[i]).to.be.not.equal(\"0x0000000000000000000000000000000000000000000000000000000000000000\");\n    }\n}",
              "err": {},
              "uuid": "df7fac1c-0936-45a8-ab30-ce2e10906990",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "block - BlockMsgContract 查询上一个区块",
              "fullTitle": "BlockMsgContractTest.js opcode -blockchain -block  block - BlockMsgContract 查询上一个区块",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let tx = await contract.update_block_msg();\n// let chainId = await ethers.provider.getChainId();\nlet receipt = await tx.wait();\nlet chainId = await ethers.provider.send(\"eth_chainId\", []);\nlet curBlock = await ethers.provider.getBlock(receipt.blockNumber)\nlet preBlock = await ethers.provider.getBlock(receipt.blockNumber - 1)\nlet callBlockMsgData = await contract.call_block_msg(contract.address, receipt.blockNumber - 1, 40000000);\nexpect(callBlockMsgData[0]).to.be.equal(preBlock.hash);\nexpect(callBlockMsgData[1]).to.be.equal(chainId);\n// todo add assert code\n// expect(callBlockMsgData[2]).to.be.equal(curBlock.miner)\nexpect(callBlockMsgData[3]).to.be.equal(curBlock.difficulty)\n// expect(callBlockMsgData[4]).to.be.equal(curBlock.gasLimit)\nexpect(callBlockMsgData[5]).to.be.equal(curBlock.number)\nexpect(callBlockMsgData[6]).to.be.equal(curBlock.timestamp)\n// (blockHash, chainid, coinbase, difficulty, gaslimit, number, timestamp)\nlet latestBlockData = await contract.get_block_data();\nexpect(latestBlockData[0]).to.be.equal(preBlock.hash);\nexpect(latestBlockData[1]).to.be.equal(chainId);\nexpect(latestBlockData[2]).to.be.equal(curBlock.miner)\nexpect(latestBlockData[3]).to.be.equal(curBlock.difficulty)\nexpect(latestBlockData[4]).to.be.equal(curBlock.gasLimit)\nexpect(latestBlockData[5]).to.be.equal(curBlock.number)\nexpect(latestBlockData[6]).to.be.equal(curBlock.timestamp)",
              "err": {},
              "uuid": "991c490a-0e66-4720-8759-915a8423feda",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "08103ef6-9686-4147-b042-958107b89c2d",
            "df7fac1c-0936-45a8-ab30-ce2e10906990",
            "991c490a-0e66-4720-8759-915a8423feda"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "c3643f78-0e3d-4596-9f0d-b1a1dcc8d15c",
          "title": "CrossCallTest.js cross call ",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/opcodes/blockchain/CrossCallTest.js",
          "file": "/test/opcodes/blockchain/CrossCallTest.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "CrossCallTest.js cross call  \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const blockInfoContract = await ethers.getContractFactory(\"CrossCallTest\");\ncrossContract = await blockInfoContract.deploy();\nawait crossContract.deployed();\nconsole.log(\"contractAddress:\", crossContract.address);",
              "err": {},
              "uuid": "9cffcbdf-886a-4bbe-9616-344944ba9ae0",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "b1545d97-6a76-43ed-9ef2-cd7335066530",
              "title": "call",
              "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/opcodes/blockchain/CrossCallTest.js",
              "file": "/test/opcodes/blockchain/CrossCallTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "call demo",
                  "fullTitle": "CrossCallTest.js cross call  call call demo",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let tx = await crossContract.call_1()\n let receipt = await tx.wait()\n console.log(receipt)",
                  "err": {},
                  "uuid": "adfdfffe-f7e7-4c36-88ae-afd6f26b16f2",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "call out of gas",
                  "fullTitle": "CrossCallTest.js cross call  call call out of gas",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let tx =  await crossContract.call_out_of_gas()\nlet receipt = await tx.wait()\nconsole.log(receipt)",
                  "err": {},
                  "uuid": "6650fb30-112b-414b-8058-ec633ba28979",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "call stack",
                  "fullTitle": "CrossCallTest.js cross call  call call stack",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "console.log(\"--------------\")\nlet tx = await crossContract.call_stack(403)\nlet receipt = await tx.wait();\nconsole.log(\"receipt:\",receipt)",
                  "err": {},
                  "uuid": "3dc74bfa-693d-4470-a9f3-279c20bcbb07",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "adfdfffe-f7e7-4c36-88ae-afd6f26b16f2",
                "6650fb30-112b-414b-8058-ec633ba28979",
                "3dc74bfa-693d-4470-a9f3-279c20bcbb07"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 40000
            },
            {
              "uuid": "f2a3a216-63b5-4876-b0b0-d90747281787",
              "title": "delegatecall",
              "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/opcodes/blockchain/CrossCallTest.js",
              "file": "/test/opcodes/blockchain/CrossCallTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "delegatecall demo",
                  "fullTitle": "CrossCallTest.js cross call  delegatecall delegatecall demo",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let tx = await crossContract.call_delegatecallFunc();\nlet receipt = await tx.wait()\nconsole.log(receipt)",
                  "err": {},
                  "uuid": "2006fc85-08be-447d-aac1-e89821d0c391",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "2006fc85-08be-447d-aac1-e89821d0c391"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 40000
            },
            {
              "uuid": "5e2a6ae4-ec12-47e3-93e9-4be923003b60",
              "title": "staticcall",
              "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/opcodes/blockchain/CrossCallTest.js",
              "file": "/test/opcodes/blockchain/CrossCallTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "staticcall demo",
                  "fullTitle": "CrossCallTest.js cross call  staticcall staticcall demo",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let tx = await crossContract.call_staticcallFunc();\nlet receipt = await tx.wait()\nconsole.log(receipt)",
                  "err": {},
                  "uuid": "db440dfc-a3b7-491a-8f30-48e241b8d3a6",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "db440dfc-a3b7-491a-8f30-48e241b8d3a6"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 40000
            },
            {
              "uuid": "23693bb6-8a46-4cb5-bb36-b20e01233653",
              "title": "callcode",
              "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/opcodes/blockchain/CrossCallTest.js",
              "file": "/test/opcodes/blockchain/CrossCallTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "callcode demo",
                  "fullTitle": "CrossCallTest.js cross call  callcode callcode demo",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "a50c3fa3-b89a-413f-b37a-8658aae86d80",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "a50c3fa3-b89a-413f-b37a-8658aae86d80"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 40000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "6f50c517-3e74-4884-9b3d-b2804d9a7a05",
          "title": "LogContract.js opcode -log ",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/opcodes/blockchain/LogContract.js",
          "file": "/test/opcodes/blockchain/LogContract.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "LogContract.js opcode -log  \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const blockInfoContract = await ethers.getContractFactory(\"LogContract\");\ncontract = await blockInfoContract.deploy();\nawait contract.deployed();\nconsole.log(\"contractAddress:\", contract.address);",
              "err": {},
              "uuid": "94ef8495-5b65-47fe-8e87-a3ede231b794",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "log0 int uint",
              "fullTitle": "LogContract.js opcode -log  log0 int uint",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let tx = await contract.log0Int();\nlet receipt = await tx.wait();\nexpectdArrays=[\n    \"-128\",\n    \"127\",\n    \"0\",\n    \"255\",\n    \"-128\",\n    \"127\",\n    \"0\",\n    \"255\",\n    \"-32768\",\n    \"32767\",\n    \"0\",\n    \"65535\",\n    \"-8388608\",\n    \"8388607\",\n    \"0\",\n    \"16777215\",\n    \"-2147483648\",\n    \"2147483647\",\n    \"0\",\n    \"4294967295\",\n    \"-549755813888\",\n    \"549755813887\",\n    \"0\",\n    \"1099511627775\",\n    \"-140737488355328\",\n    \"140737488355327\",\n    \"0\",\n    \"281474976710655\",\n    \"-36028797018963968\",\n    \"36028797018963967\",\n    \"0\",\n    \"72057594037927935\",\n    \"-9223372036854775808\",\n    \"9223372036854775807\",\n    \"0\",\n    \"18446744073709551615\",\n    \"-2361183241434822606848\",\n    \"2361183241434822606847\",\n    \"0\",\n    \"4722366482869645213695\",\n    \"-604462909807314587353088\",\n    \"604462909807314587353087\",\n    \"0\",\n    \"1208925819614629174706175\",\n    \"-154742504910672534362390528\",\n    \"154742504910672534362390527\",\n    \"0\",\n    \"309485009821345068724781055\",\n    \"-39614081257132168796771975168\",\n    \"39614081257132168796771975167\",\n    \"0\",\n    \"79228162514264337593543950335\",\n    \"-10141204801825835211973625643008\",\n    \"10141204801825835211973625643007\",\n    \"0\",\n    \"20282409603651670423947251286015\",\n    \"-2596148429267413814265248164610048\",\n    \"2596148429267413814265248164610047\",\n    \"0\",\n    \"5192296858534827628530496329220095\",\n    \"-664613997892457936451903530140172288\",\n    \"664613997892457936451903530140172287\",\n    \"0\",\n    \"1329227995784915872903807060280344575\",\n    \"-170141183460469231731687303715884105728\",\n    \"170141183460469231731687303715884105727\",\n    \"0\",\n    \"340282366920938463463374607431768211455\",\n    \"-43556142965880123323311949751266331066368\",\n    \"43556142965880123323311949751266331066367\",\n    \"0\",\n    \"87112285931760246646623899502532662132735\",\n    \"-11150372599265311570767859136324180752990208\",\n    \"11150372599265311570767859136324180752990207\",\n    \"0\",\n    \"22300745198530623141535718272648361505980415\",\n    \"-2854495385411919762116571938898990272765493248\",\n    \"2854495385411919762116571938898990272765493247\",\n    \"0\",\n    \"5708990770823839524233143877797980545530986495\",\n    \"-730750818665451459101842416358141509827966271488\",\n    \"730750818665451459101842416358141509827966271487\",\n    \"0\",\n    \"1461501637330902918203684832716283019655932542975\",\n    \"-187072209578355573530071658587684226515959365500928\",\n    \"187072209578355573530071658587684226515959365500927\",\n    \"0\",\n    \"374144419156711147060143317175368453031918731001855\",\n    \"-47890485652059026823698344598447161988085597568237568\",\n    \"47890485652059026823698344598447161988085597568237567\",\n    \"0\",\n    \"95780971304118053647396689196894323976171195136475135\",\n    \"-12259964326927110866866776217202473468949912977468817408\",\n    \"12259964326927110866866776217202473468949912977468817407\",\n    \"0\",\n    \"24519928653854221733733552434404946937899825954937634815\",\n    \"-3138550867693340381917894711603833208051177722232017256448\",\n    \"3138550867693340381917894711603833208051177722232017256447\",\n    \"0\",\n    \"6277101735386680763835789423207666416102355444464034512895\",\n    \"-803469022129495137770981046170581301261101496891396417650688\",\n    \"803469022129495137770981046170581301261101496891396417650687\",\n    \"0\",\n    \"1606938044258990275541962092341162602522202993782792835301375\",\n    \"-205688069665150755269371147819668813122841983204197482918576128\",\n    \"205688069665150755269371147819668813122841983204197482918576127\",\n    \"0\",\n    \"411376139330301510538742295639337626245683966408394965837152255\",\n    \"-52656145834278593348959013841835216159447547700274555627155488768\",\n    \"52656145834278593348959013841835216159447547700274555627155488767\",\n    \"0\",\n    \"105312291668557186697918027683670432318895095400549111254310977535\",\n    \"-13479973333575319897333507543509815336818572211270286240551805124608\",\n    \"13479973333575319897333507543509815336818572211270286240551805124607\",\n    \"0\",\n    \"26959946667150639794667015087019630673637144422540572481103610249215\",\n    \"-3450873173395281893717377931138512726225554486085193277581262111899648\",\n    \"3450873173395281893717377931138512726225554486085193277581262111899647\",\n    \"0\",\n    \"6901746346790563787434755862277025452451108972170386555162524223799295\",\n    \"-883423532389192164791648750371459257913741948437809479060803100646309888\",\n    \"883423532389192164791648750371459257913741948437809479060803100646309887\",\n    \"0\",\n    \"1766847064778384329583297500742918515827483896875618958121606201292619775\",\n    \"-226156424291633194186662080095093570025917938800079226639565593765455331328\",\n    \"226156424291633194186662080095093570025917938800079226639565593765455331327\",\n    \"0\",\n    \"452312848583266388373324160190187140051835877600158453279131187530910662655\",\n    \"-57896044618658097711785492504343953926634992332820282019728792003956564819968\",\n    \"57896044618658097711785492504343953926634992332820282019728792003956564819967\",\n    \"0\",\n    \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n]\nfor (let i = 0; i < receipt.events.length; i++) {\n    expect(receipt.events[i].args[0].toString()).to.be.equal(expectdArrays[i])\n}",
              "err": {},
              "uuid": "fbb8f9fa-cf1d-417f-be46-e7b0677b66bf",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "log0 bytes",
              "fullTitle": "LogContract.js opcode -log  log0 bytes",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"-----\")\nawait testLogBytes(\"\");\nawait testLogBytes(\"a\");\nawait testLogBytes(\"heheheh\");\nawait testLogBytes(\"sadasdada123123213918231892h1893h12983h182h391h9ccc1213131231231232131c\");",
              "err": {},
              "uuid": "f86f2921-bded-4525-8cb2-d0f5088dde32",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "fbb8f9fa-cf1d-417f-be46-e7b0677b66bf",
            "f86f2921-bded-4525-8cb2-d0f5088dde32"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "5964a653-bbce-4eef-b0cd-e72e381a1144",
          "title": "opcode_assembly_log.js opcode -block ",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/opcodes/blockchain/opcode_assembly_log.js",
          "file": "/test/opcodes/blockchain/opcode_assembly_log.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "opcode_assembly_log.js opcode -block  \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const blockInfoContract = await ethers.getContractFactory(\"opcode_assembly_log\");\ncontract = await blockInfoContract.deploy();\nawait contract.deployed();",
              "err": {},
              "uuid": "edde4ea9-69c9-4428-89d1-16a49214d27d",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "opcode - logs",
              "fullTitle": "opcode_assembly_log.js opcode -block  opcode - logs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let tx = await contract.log1234();\nlet receipt = await tx.wait();\nexpect(receipt.events[0].data).to.be.equal(\"0x50cb9fe53daa9737b786ab3646f04d0150dc50ef4e75f59509d83667ad5adb20\");\nexpect(receipt.events[1].data).to.be.equal(\"0x50cb9fe53daa9737b786ab3646f04d0150dc50ef4e75f59509d83667ad5adb20\");\nexpect(receipt.events[1].topics[0]).to.be.equal(\"0x50cb9fe53daa9737b786ab3646f04d0150dc50ef4e75f59509d83667ad5adb20\");\nexpect(receipt.events[2].data).to.be.equal(\"0x50cb9fe53daa9737b786ab3646f04d0150dc50ef4e75f59509d83667ad5adb20\");\nexpect(receipt.events[2].topics[0]).to.be.equal(\"0x50cb9fe53daa9737b786ab3646f04d0150dc50ef4e75f59509d83667ad5adb20\");\nexpect(receipt.events[2].topics[1]).to.be.contains(contract.signer.address.substring(2).toLowerCase());\nexpect(receipt.events[3].topics[0]).to.be.equal(\"0x50cb9fe53daa9737b786ab3646f04d0150dc50ef4e75f59509d83667ad5adb20\");\nexpect(receipt.events[3].topics[1]).to.be.contains(contract.signer.address.substring(2).toLowerCase());\nexpect(receipt.events[3].topics[2]).to.be.equal(\"0x0000000000000000000000000000000000000000000000000000000000420042\");\nexpect(receipt.events[3].data).to.be.equal(\"0x50cb9fe53daa9737b786ab3646f04d0150dc50ef4e75f59509d83667ad5adb20\");\nexpect(receipt.events[4].data).to.be.equal(\"0x50cb9fe53daa9737b786ab3646f04d0150dc50ef4e75f59509d83667ad5adb20\");\nexpect(receipt.events[4].topics[0]).to.be.equal(\"0x50cb9fe53daa9737b786ab3646f04d0150dc50ef4e75f59509d83667ad5adb20\");\nexpect(receipt.events[4].topics[1]).to.be.contains(contract.signer.address.substring(2).toLowerCase());\nexpect(receipt.events[4].topics[2]).to.be.equal(\"0x0000000000000000000000000000000000000000000000000000000000420042\");\nexpect(receipt.events[4].topics[3]).to.be.equal(\"0x0000000000000000000000000000000000000000000000000000000000420042\");\nexpect(receipt.events[4].data).to.be.equal(\"0x50cb9fe53daa9737b786ab3646f04d0150dc50ef4e75f59509d83667ad5adb20\");",
              "err": {},
              "uuid": "b41d109b-62ef-4ee5-bc46-873c966ff79d",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "b41d109b-62ef-4ee5-bc46-873c966ff79d"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "b68dce4c-2ca8-4851-9140-4107c057b781",
          "title": "opcode_code.js opcode -code ",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/opcodes/blockchain/opcode_code.js",
          "file": "/test/opcodes/blockchain/opcode_code.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "opcode_code.js opcode -code  \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//0x881cAAcD809386af1a8dDD58fb8d4cE6A0c08771\nconst blockInfoContract = await ethers.getContractFactory(\"opcode_code\");\ncontract = await blockInfoContract.deploy();\nawait contract.deployed();\nconsole.log(\"contractAddress:\", contract.address);",
              "err": {},
              "uuid": "67ddf902-2063-40b1-8242-f1631f07b25a",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "code ",
              "fullTitle": "opcode_code.js opcode -code  code ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = await contract.ass(33,4,32);\nexpect(result[1].length).to.be.equal(81922)\nexpect(result[0].length).to.be.equal(130)",
              "err": {},
              "uuid": "f688fd27-8bf8-4839-ae12-baac99dbc4db",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "code store",
              "fullTitle": "opcode_code.js opcode -code  code store",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let tx = await contract.storeData(33,4,32);\n    await tx.wait();\n}catch (error) {\n    expect(error.toString()).to.be.contains(\"gas\")\n}\nlet ab = await  contract.getAB();\nexpect(ab[0]).to.be.equal(\"0x\")\nexpect(ab[1]).to.be.equal(\"0x\")",
              "err": {},
              "uuid": "5e72b39b-1ff2-45db-8d74-b849ec0d6305",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "f688fd27-8bf8-4839-ae12-baac99dbc4db",
            "5e72b39b-1ff2-45db-8d74-b849ec0d6305"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "61aef8a6-54fb-4656-83a0-4583276bb109",
          "title": "create2_test.js ",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/opcodes/blockchain/opcode_create2.js",
          "file": "/test/opcodes/blockchain/opcode_create2.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "create2_test.js  \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// console.log(\"------\")\nconst blockInfoContract = await ethers.getContractFactory(\"create2_test\");\ncontract = await blockInfoContract.deploy();\nawait contract.deployed();\nconsole.log(\"contractAddress:\", contract.address);",
              "err": {},
              "uuid": "e561e6f1-c171-4f5a-a2bb-4530700c70db",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "demo",
              "fullTitle": "create2_test.js  demo",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let tx = await  contract.testCreate();\nlet receipt = await tx.wait();\nexpect(receipt.events[0].data).to.be.equal(\"0x0000000000000000000000000000000000000000000000000000000000000001\");",
              "err": {},
              "uuid": "b835967b-b6ed-41cf-b5fe-e05c1a77a8e3",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "create2 invoke same contract in 1tx",
              "fullTitle": "create2_test.js  create2 invoke same contract in 1tx",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let tx = await  contract.test_create2_deploy_2_same_contract();\nlet receipt = await tx.wait();\nexpect(receipt.events[2].args[1]).to.be.not.equal(\"0x0000000000000000000000000000000000000000\")\nexpect(receipt.events[4].args[1]).to.be.equal(\"0x0000000000000000000000000000000000000000\")",
              "err": {},
              "uuid": "1b86288e-7e0c-4242-9150-e97dea1be91c",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "create2 invoke same contract in diff tx ",
              "fullTitle": "create2_test.js  create2 invoke same contract in diff tx ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let tx = await  contract.test_create2_destruct();\nlet receipt = await tx.wait();\nconsole.log(\"----\")\nexpect(receipt.events[2].args[1].toString()).to.be.not.equal(\"0x0000000000000000000000000000000000000000\")\ntx = await  contract.test_create2_destruct();\nreceipt = await tx.wait();\nconsole.log(\"----\")\nexpect(receipt.events[2].args[1].toString()).to.be.not.equal(\"0x0000000000000000000000000000000000000000\")",
              "err": {},
              "uuid": "15e59882-b9c9-4de1-b97d-8efe9e5b8378",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "create2 selfdstruct in 1tx ",
              "fullTitle": "create2_test.js  create2 selfdstruct in 1tx ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let tx = await  contract.test_create2_selfDestruct_create2();\nlet receipt = await tx.wait();",
              "err": {},
              "uuid": "e394a64c-99ec-4dc1-857e-f4b2a2415bda",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "create2 invoke same contract in diff tx  again",
              "fullTitle": "create2_test.js  create2 invoke same contract in diff tx  again",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let tx = await  contract.test_create2_destruct();\nlet receipt = await tx.wait();",
              "err": {},
              "uuid": "d52abb72-e23c-4cdb-b939-489f9bbcbd93",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "b835967b-b6ed-41cf-b5fe-e05c1a77a8e3",
            "1b86288e-7e0c-4242-9150-e97dea1be91c",
            "15e59882-b9c9-4de1-b97d-8efe9e5b8378",
            "e394a64c-99ec-4dc1-857e-f4b2a2415bda",
            "d52abb72-e23c-4cdb-b939-489f9bbcbd93"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "4fbdd48e-b5dd-444b-882b-a1595e4483ad",
          "title": "opcodeTxWithMsg.js opcode -tx msg ",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/opcodes/blockchain/opcodeTxWithMsg.js",
          "file": "/test/opcodes/blockchain/opcodeTxWithMsg.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "opcodeTxWithMsg.js opcode -tx msg  \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const blockInfoContract = await ethers.getContractFactory(\"opcodeTxWithMsg\");\ncontractWithValue = await blockInfoContract.deploy({value: 10n});\nconst blockInfoContract2 = await ethers.getContractFactory(\"opcodeTxWithMsg\");\ncontract2NoValue = await blockInfoContract2.deploy();\nawait contractWithValue.deployed();\nawait contract2NoValue.deployed();",
              "err": {},
              "uuid": "7df240b8-fe90-4e7d-a6a1-a8c7e9c543ac",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "construct  - (msg.data,msg.sig,msg.value,msg.sender),(tx.gasprice,tx.origin)",
              "fullTitle": "opcodeTxWithMsg.js opcode -tx msg  construct  - (msg.data,msg.sig,msg.value,msg.sender),(tx.gasprice,tx.origin)",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await compareDeployTxMsgAndTxResult(contractWithValue);\nawait compareDeployTxMsgAndTxResult(contract2NoValue);",
              "err": {},
              "uuid": "0631206f-877d-498f-a213-96e4b20bee38",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "invoke  - (msg.data,msg.sig,msg.value,msg.sender), (tx.gasprice,tx.origin)",
              "fullTitle": "opcodeTxWithMsg.js opcode -tx msg  invoke  - (msg.data,msg.sig,msg.value,msg.sender), (tx.gasprice,tx.origin)",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let tx = await contractWithValue.updateMsgAndTxData();\nawait compareCallTxMsgAndTxResut(contractWithValue, tx);",
              "err": {},
              "uuid": "90188d6b-3217-4ed5-921b-29813800a875",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "cross call - (msg.data,msg.sig,msg.value,msg.sender), (tx.gasprice,tx.origin)",
              "fullTitle": "opcodeTxWithMsg.js opcode -tx msg  cross call - (msg.data,msg.sig,msg.value,msg.sender), (tx.gasprice,tx.origin)",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let tx = await contractWithValue.call_updateMsgAndTxData(contract2NoValue.address)\nawait compareCrossCallTxMsgAndTxResut(contract2NoValue, tx)",
              "err": {},
              "uuid": "a95eb637-2049-4590-9dc6-2eac47291037",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "0631206f-877d-498f-a213-96e4b20bee38",
            "90188d6b-3217-4ed5-921b-29813800a875",
            "a95eb637-2049-4590-9dc6-2eac47291037"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "628d95ef-00d8-49fd-bcc3-68ce9faa1a49",
          "title": "RevertContract.js opcode ",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/opcodes/blockchain/RevertContract.js",
          "file": "/test/opcodes/blockchain/RevertContract.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "RevertContract.js opcode  \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// contract = await blockInfoContract.deploy();\n// await contract.deployed();",
              "err": {},
              "uuid": "bddeb7f9-d658-4577-ad44-16ce84eb74a8",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "revert1View 1",
              "fullTitle": "RevertContract.js opcode  revert1View 1",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    await contract.revert1View();\n    expect(\"\").to.be.equal(\"failed\")\n} catch (e) {\n    // expect(e.toString()).to.be.contains(\"1234112341123411234112341123411234112\")\n}",
              "err": {},
              "uuid": "f54fc599-6e11-49b4-8309-bae8a787c4f1",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "revert msg",
              "fullTitle": "RevertContract.js opcode  revert msg",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let msg = \"\";\nfor (let i = 0; i < 1000; i++) {\n    msg = msg + \"ssss\"\n}\ntry {\n    await contract.revertMsg(msg);\n    expect(\"\").to.be.equal(\"failed\")\n} catch (e) {\n    // expect(e.toString()).to.be.contains(\"sssssssssssssssssssssssssssssssssssss\")\n}",
              "err": {},
              "uuid": "7d92a596-0647-47be-a93e-196554c7de9f",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "require error",
              "fullTitle": "RevertContract.js opcode  require error",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "blockInfoContract = await ethers.getContractFactory(\"RevertContract\");\ncontract = await blockInfoContract.deploy();\nawait contract.deployed();\nlet ret = await contract.testRequireBalance()\n// await contract.testRequireBalanceView()\n//0xb5ef0fa2\n// console.log(\"ret\",ret)",
              "err": {},
              "uuid": "9edc7274-bb0e-4f4e-a882-78255739ecfb",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "f54fc599-6e11-49b4-8309-bae8a787c4f1",
            "7d92a596-0647-47be-a93e-196554c7de9f",
            "9edc7274-bb0e-4f4e-a882-78255739ecfb"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "422158f2-73e7-4076-8335-607b1a9e2ff1",
          "title": "selfdestructContractTest.js selfdestruct ",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/opcodes/blockchain/selfdestructContractTest.js",
          "file": "/test/opcodes/blockchain/selfdestructContractTest.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "selfdestructContractTest.js selfdestruct  \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const blockInfoContract = await ethers.getContractFactory(\"selfdestructContractTest\");\ncontract = await blockInfoContract.deploy();\nawait contract.deployed();",
              "err": {},
              "uuid": "a79e8cc2-237f-4e23-8453-46647a3602af",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "deploy selfdestruct",
              "fullTitle": "selfdestructContractTest.js selfdestruct  deploy selfdestruct",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let tx = await  contract.test_deploy();\n        let receipt = await tx.wait();\n        console.log(\"receipt:\",receipt)",
              "err": {},
              "uuid": "597806c8-8cb3-42c9-bbee-1114088c19fb",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "invoke selfdestruct",
              "fullTitle": "selfdestructContractTest.js selfdestruct  invoke selfdestruct",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let tx = await  contract.test_destruct_transfer({value:1});\nlet receipt = await tx.wait();\nconsole.log(\"receipt:\",receipt)",
              "err": {},
              "uuid": "646f89f5-857d-4b84-be04-f546a4d02528",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "invoke get code ",
              "fullTitle": "selfdestructContractTest.js selfdestruct  invoke get code ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let code = await  contract.get_selfdestructContract_code(false,\"0x5fbdb2315678afecb367f032d93f642f64180aa3\");\nconsole.log(\"code:\",code);\nexpect(code.toString()).to.be.contains(\"5fbdb2315678afecb367f032d93f642f64180aa3\");",
              "err": {},
              "uuid": "fdacc1fb-e6da-4964-b460-7cc0d0fa6f5c",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "597806c8-8cb3-42c9-bbee-1114088c19fb",
            "646f89f5-857d-4b84-be04-f546a4d02528",
            "fdacc1fb-e6da-4964-b460-7cc0d0fa6f5c"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "b187ec0c-08d2-428e-8a34-6c9233b41911",
          "title": "sha256Contract.js opcode -sha256 ",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/opcodes/blockchain/sha256Contract.js",
          "file": "/test/opcodes/blockchain/sha256Contract.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "sha256Contract.js opcode -sha256  \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const blockInfoContract = await ethers.getContractFactory(\"sha256Contract\");\ncontract = await blockInfoContract.deploy();\nawait contract.deployed();",
              "err": {},
              "uuid": "c71c867c-2463-44bd-9780-ef302e9840e1",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "opKeccak256 - args",
              "fullTitle": "sha256Contract.js opcode -sha256  opKeccak256 - args",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await invokeKeccak256(\"\", \"0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\")\nawait invokeKeccak256(\"keccakData\", \"0x87b233f537b1a1ab22f816370bbc771578c1a7451f113606b5ae09fedd8d2d32\")\nawait invokeKeccak256(\"keccakDataasda撒asadasasdasdadasdadanklnebvwebvoqb\", \"0x06059791f31635d63f0c1d7cab0dad6ba282b0004a4eabc0fae3fb89a6234fd8\")\nawait invokeKeccak256(\"12313那我等拿到哪里都懒得烂我的懒都懒得理拿到了看到了看到懒得理看到快烂掉了asaasasaasdasdndnakdnawdawdiubawiufbwaifbwaladnlakeccakDataasda撒asadasasdasdadasdadanklnebvwebvoqb\", \"0xf0d8895a9234297ef9b92a99f6dce1e17c4f947d44ef0224721ece69872f22d6\")",
              "err": {},
              "uuid": "b7561718-3cee-48db-88c1-92f5c34c6088",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "b7561718-3cee-48db-88c1-92f5c34c6088"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "184425e8-4966-4ce5-81bd-0ae425b7187e",
          "title": "ERC20 ",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/opcodes/test/blkNum.test.js",
          "file": "/test/opcodes/test/blkNum.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "ERC20  \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "e1e8beb2-cd66-4169-ae61-1d86c39fa1df",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "test",
              "fullTitle": "ERC20  test",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response = await ethers.provider.send(\"eth_getBlockByHash\", [\"0xa91e00d956d1181015b8dbc71761f7c5724db1e19f0643dc96c5027562944285\", true])\n        console.log(\"---\")\n        let num = 0;\n        for (let i = 0; i < response.transactions.length; i++) {\n            let tx = response.transactions[i];\n            if (tx.to == \"0xea3301956cbfdaba0de0579e1b8a530752b449b9\"){\n                num = num+1;\n                console.log(\"tx idx:\",BigNumber.from(tx.transactionIndex).toString())\n            }\n        }\n        //0xD67deE15148F8fe037402e120327b72374930152\n        let num_1 = 0;\n        console.log(\"----------\")\n        for (let i = 0; i < response.transactions.length; i++) {\n            let tx = response.transactions[i];\n            if (tx.to == \"0xd67dee15148f8fe037402e120327b72374930152\"){\n                num_1 = num_1+1;\n                console.log(\"tx idx:\",BigNumber.from(tx.transactionIndex).toString())\n            }\n        }\n        let addressMap = new Map();;\n        for (let i = 0; i < response.transactions.length; i++) {\n            let tx = response.transactions[i];\n            let num = addressMap.get(tx.to);    // \"和键'a string'关联的值\"\n            if (num ==  undefined){\n                addressMap.set(tx.to,0);\n            }\n            let num1 = addressMap.get(tx.to);\n            num1 = num1+1;\n            addressMap.set(tx.to,num1);\n        }\n        for (let [key, value] of addressMap) {\n            console.log(\"addr:\",key,\", count:\",value)\n        }\n        for (let i = 0; i < response.transactions.length; i++) {\n            let tx = response.transactions[i];\n            console.log(BigNumber.from(tx.gasPrice).toString())\n        }\n        console.log(\"num1:\",num)\n        console.log(\"num:\",num_1)",
              "err": {},
              "uuid": "4786a964-b50d-417b-a2a6-0d6836ccbfb9",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "eth_call 1234",
              "fullTitle": "ERC20  eth_call 1234",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = await ethers.provider.send(\"eth_call\", [{\n            \"to\": \"0xF8898Dd40089263Fc22d6CC6B6F1B5678AF18bB0\",\n            \"data\": \"0xa163a624\",\n        }, \"latest\"]);",
              "err": {},
              "uuid": "16da9883-8cb7-40a1-be6d-49936801931a",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "eth_gas 1234",
              "fullTitle": "ERC20  eth_gas 1234",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = await ethers.provider.send(\"eth_estimateGas\", [{\n            \"to\": \"0xF8898Dd40089263Fc22d6CC6B6F1B5678AF18bB0\",\n            \"data\": \"0xa163a624\",\n        }]);",
              "err": {},
              "uuid": "d039b871-c75e-434c-a639-efeaf8fd98b7",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "send tx  ",
              "fullTitle": "ERC20  send tx  ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let tx = await ethers.provider.send(\"eth_sendTransaction\", [{\n            \"to\": \"0xF8898Dd40089263Fc22d6CC6B6F1B5678AF18bB0\",\n            \"data\": \"0xa163a624\",\n        }]);\n        let response = await getTxReceipt(ethers.provider,tx,100)\n        console.log(response)",
              "err": {},
              "uuid": "1c133f40-b0c8-49e1-8685-c385defc5a66",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "get transaction size",
              "fullTitle": "ERC20  get transaction size",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await getTxCount(ethers.provider,\"0x0c1efcca2bcb65a532274f3ef24c044ef4ab6d73\")",
              "err": {},
              "uuid": "689211ab-33bf-493b-833e-fda8a82a2c86",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "4786a964-b50d-417b-a2a6-0d6836ccbfb9",
            "16da9883-8cb7-40a1-be6d-49936801931a",
            "d039b871-c75e-434c-a639-efeaf8fd98b7",
            "1c133f40-b0c8-49e1-8685-c385defc5a66",
            "689211ab-33bf-493b-833e-fda8a82a2c86"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "aa0c15ad-c3c8-4e21-95fd-3bdca62a6f4d",
          "title": "ERC20 ",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/opcodes/test/erc20.test.js",
          "file": "/test/opcodes/test/erc20.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "ERC20  \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "d119eec1-0680-4301-8341-75d13b0beb33",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "ERC 20 deploy",
              "fullTitle": "ERC20  ERC 20 deploy",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let contractInfo = await ethers.getContractFactory(\"EIP20\");\nconsole.log(\"---------- deploy --------\")\ncontract = await contractInfo.deploy(BigNumber.from(\"100000000000000000000000\"),\"Test\",BigNumber.from(\"18\"),\"T\")\nawait contract.deployed()\nconsole.log(\"contract Address:\",contract.address)",
              "err": {},
              "uuid": "ab12ab5c-10d2-41c8-a601-394c84ea6061",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "get balance ",
              "fullTitle": "ERC20  get balance ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let balance = await contract.balanceOf(contract.signer.address);\nconsole.log(\"address:\",contract.signer.address,\"balance:\",balance)",
              "err": {},
              "uuid": "08ee7fc1-32cd-4d2c-9cd0-9856c88ce165",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "transfer 100000000000",
              "fullTitle": "ERC20  transfer 100000000000",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// let\nlet tx = await contract.transfer(contract.address,BigNumber.from(\"100000000000\"))\nlet response = await tx.wait()\nconsole.log(\"response:\",response)",
              "err": {},
              "uuid": "1bb7cb98-51d2-474a-9c7f-1e4e86b98788",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": " get balance",
              "fullTitle": "ERC20   get balance",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let balanceSender = await contract.balanceOf(contract.signer.address);\nlet balanceAddress = await contract.balanceOf(contract.address);\nconsole.log(\"address:\",contract.signer.address,\"balance:\",balanceSender)\nconsole.log(\"address:\",contract.address,\"balance:\",balanceAddress)",
              "err": {},
              "uuid": "62805943-22f7-444e-8e5c-b23e1601e33e",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "ab12ab5c-10d2-41c8-a601-394c84ea6061",
            "08ee7fc1-32cd-4d2c-9cd0-9856c88ce165",
            "1bb7cb98-51d2-474a-9c7f-1e4e86b98788",
            "62805943-22f7-444e-8e5c-b23e1601e33e"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "0430b9ed-5115-45c0-bc30-011e91c6490e",
          "title": "ERC20 ",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/opcodes/test/ercTTT.test.js",
          "file": "/test/opcodes/test/ercTTT.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "ERC20  \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "185cfc58-344f-40e9-9a28-5d1724886799",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "ERC 20 addNewToken ",
              "fullTitle": "ERC20  ERC 20 addNewToken ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let contractInfo = await ethers.getContractFactory(\"TTT\");\nconsole.log(\"---------- deploy --------\")\ncontract = await contractInfo.deploy()\nawait contract.deployed()\nconsole.log(\"contract Address:\",contract.address)\n\n// let tx = await contract.addNewToken()\n// let response = await tx.wait()\n// console.log(\"response:\",response)\nlet result = await ethers.provider.send(\"eth_call\", [{\n    \"from\": \"0x0c1efcca2bcb65a532274f3ef24c044ef4ab6d73\",\n    \"to\": contract.address,\n    \"data\":\"0x225c8f02\"\n}, \"latest\"]);\nlet txHash = await ethers.provider.send(\"eth_sendTransaction\", [{\n    \"to\": contract.address,\n    \"data\":\"0x225c8f02\"\n}]);\nconsole.log(\"txHash:\",txHash)\nlet response = await getTxReceipt(ethers.provider,txHash,10)\nconsole.log(\"response:\",response)",
              "err": {},
              "uuid": "bdff6122-1207-4072-8443-9ab2ad6cf496",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "bdff6122-1207-4072-8443-9ab2ad6cf496"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "c72be688-c17f-4ccd-82f0-63ce992b1ec9",
          "title": "sendTransaction ",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/opcodes/test/test_20_1.test.js",
          "file": "/test/opcodes/test/test_20_1.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "not support",
              "fullTitle": "sendTransaction  not support",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//todo wait\nfor (let i = 0; i < 100; i++) {\n    let tx = await ethers.provider.send(\"eth_sendTransaction\",[{\n        \"from\": \"0x0c1efcca2bcb65a532274f3ef24c044ef4ab6d73\",\n        \"to\": \"0x47837D2Db9BCc36059ecA80517b0D912C109ab72\",\n        \"gas\": \"0x760000\",\n        \"gasPrice\": \"0x11\",\n        \"data\": \"0xf23bbce5000000000000000000000000366110aba00a4cb025039239c0b85bd13a7575000000000000000000000000000c1efcca2bcb65a532274f3ef24c044ef4ab6d730000000000000000000000000000000000000000000000000000000000000041\"\n    }]);\n    let response = await getTxReceipt(ethers.provider,tx,10)\n}\n// let tx = await ethers.provider.send(\"eth_sendTransaction\",[{\n//     \"from\": \"0x0c1efcca2bcb65a532274f3ef24c044ef4ab6d73\",\n//     \"to\": \"0x47837D2Db9BCc36059ecA80517b0D912C109ab72\",\n//     \"gas\": \"0x760000\",\n//     \"gasPrice\": \"0x11\",\n//     \"data\": \"0xf23bbce5000000000000000000000000366110aba00a4cb025039239c0b85bd13a7575000000000000000000000000000c1efcca2bcb65a532274f3ef24c044ef4ab6d730000000000000000000000000000000000000000000000000000000000000041\"\n// }]);\n//     let response = await getTxReceipt(ethers.provider,tx,10)\n\n// expect(\"\").to.be.contains(\"failed\")",
              "err": {},
              "uuid": "967aa153-f3b1-492e-9400-36c7b10db34e",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "get transaction size ",
              "fullTitle": "sendTransaction  get transaction size ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//todo wait\nfor (let i = 0; i < 100; i++) {\n    let tx = await ethers.provider.send(\"eth_sendTransaction\",[{\n        \"from\": \"0x0c1efcca2bcb65a532274f3ef24c044ef4ab6d73\",\n        \"to\": \"0x221786676d14C4876b0395c7B677a43aB679F28d\",\n        \"gas\": \"0x760000\",\n        \"gasPrice\": \"0x11\",\n        \"data\": \"0xf23bbce5000000000000000000000000356d161a9dc658421f5c432a208831c0579a34ec000000000000000000000000356d161a9dc658421f5c432a208831c0579a34ec0000000000000000000000000000000000000000000000000000000000000003\"\n    }]);\n    // let response = await getTxReceipt(ethers.provider,tx,10)\n}\n// let tx = await ethers.provider.send(\"eth_sendTransaction\",[{\n//     \"from\": \"0x0c1efcca2bcb65a532274f3ef24c044ef4ab6d73\",\n//     \"to\": \"0x47837D2Db9BCc36059ecA80517b0D912C109ab72\",\n//     \"gas\": \"0x760000\",\n//     \"gasPrice\": \"0x11\",\n//     \"data\": \"0xf23bbce5000000000000000000000000366110aba00a4cb025039239c0b85bd13a7575000000000000000000000000000c1efcca2bcb65a532274f3ef24c044ef4ab6d730000000000000000000000000000000000000000000000000000000000000041\"\n// }]);\n//     let response = await getTxReceipt(ethers.provider,tx,10)\n\n// expect(\"\").to.be.contains(\"failed\")",
              "err": {},
              "uuid": "2f670e3f-0737-4426-8b3d-23639a6bfa95",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "ttttt",
              "fullTitle": "sendTransaction  ttttt",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let logContract = await ethers.getContractFactory(\"opcode_assembly_log\");\n        let nonce = await ethers.provider.getTransactionCount(\"0x0C1EfCCa2Bcb65A532274f3eF24c044EF4ab6D73\");\n        for (let i = 0; i < 10000; i++) {\n            console.log(\"current :\",i)\n            let txHash =await ethers.provider.send(\"eth_sendTransaction\", [{\n                \"from\": \"0x0C1EfCCa2Bcb65A532274f3eF24c044EF4ab6D73\",\n                \"nonce\": BigNumber.from(nonce).toHexString(),\n                \"gas\": BigNumber.from(2000000).toHexString(),\n                \"gasPrice\":BigNumber.from(111).toHexString(),\n                \"data\": logContract.bytecode\n            }]);\n            console.log(\"txHash:\",txHash)\n            nonce++;\n        }\n        await new Promise(r => setTimeout(r, 2000000000));",
              "err": {},
              "uuid": "9c0eb903-0e31-4d3f-8650-e5c414be0f21",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "967aa153-f3b1-492e-9400-36c7b10db34e",
            "2f670e3f-0737-4426-8b3d-23639a6bfa95",
            "9c0eb903-0e31-4d3f-8650-e5c414be0f21"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "b0f142a1-8d76-4b9a-814c-52dc70725824",
          "title": "CallContractTest.js Pre Cross Compile Cotract  ",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/precompiledContract/CallContractTest.js",
          "file": "/test/precompiledContract/CallContractTest.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "CallContractTest.js Pre Cross Compile Cotract   \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "blockInfoContract = await ethers.getContractFactory(\"contracts/precompiledContract/CallContractTest.sol:CallContractTest\");\ncontract = await blockInfoContract.deploy();\nawait contract.deployed();\nconsole.log(\"address\", contract.address)",
              "err": {},
              "uuid": "32b3df69-40a7-4f73-91e7-4fee2c197c63",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Contract 1",
              "fullTitle": "CallContractTest.js Pre Cross Compile Cotract   Contract 1",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await testCallFunc(\"0x0000000000000000000000000000000000000001\", \"0x38d18acb67d25c8bb9942764b62f18e17054f66a817bd4295423adf9ed98873e000000000000000000000000000000000000000000000000000000000000001b38d18acb67d25c8bb9942764b62f18e17054f66a817bd4295423adf9ed98873e789d1dd423d25f0772d2748d60f7e4b81bb14d086eba8e8e8efb6dcff8a4ae02\", \"0x000000000000000000000000ceaccac640adf55b2028469bd36ba501f28b699d\")",
              "err": {},
              "uuid": "e9342ffe-751f-4f7b-a6e9-b1058f90396a",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contract 2",
              "fullTitle": "CallContractTest.js Pre Cross Compile Cotract   Contract 2",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await testCallFunc(\"0x0000000000000000000000000000000000000002\", \"0x38d18acb67d25c8bb9942764b62f18e17054f66a817bd4295423adf9ed98873e000000000000000000000000000000000000000000000000000000000000001b38d18acb67d25c8bb9942764b62f18e17054f66a817bd4295423adf9ed98873e789d1dd423d25f0772d2748d60f7e4b81bb14d086eba8e8e8efb6dcff8a4ae02\", \"0x811c7003375852fabd0d362e40e68607a12bdabae61a7d068fe5fdd1dbbf2a5d\")",
              "err": {},
              "uuid": "a24f5fef-39b0-42a4-a9a9-7c9bb9606d4a",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contract 3",
              "fullTitle": "CallContractTest.js Pre Cross Compile Cotract   Contract 3",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await testCallFunc(\"0x0000000000000000000000000000000000000003\", \"0x38d18acb67d25c8bb9942764b62f18e17054f66a817bd4295423adf9ed98873e000000000000000000000000000000000000000000000000000000000000001b38d18acb67d25c8bb9942764b62f18e17054f66a817bd4295423adf9ed98873e789d1dd423d25f0772d2748d60f7e4b81bb14d086eba8e8e8efb6dcff8a4ae02\", \"0x0000000000000000000000009215b8d9882ff46f0dfde6684d78e831467f65e6\")",
              "err": {},
              "uuid": "1fb4851d-2e41-4390-a391-21c70c48d7cc",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contract 4",
              "fullTitle": "CallContractTest.js Pre Cross Compile Cotract   Contract 4",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await testCallFunc(\"0x0000000000000000000000000000000000000004\", \"0x38d18acb000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000036161610000000000000000000000000000000000000000000000000000000000\", \"0x38d18acb000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000036161610000000000000000000000000000000000000000000000000000000000\")",
              "err": {},
              "uuid": "34ed1f9f-a96e-4a7c-8c03-29bfc514c71a",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contract 5",
              "fullTitle": "CallContractTest.js Pre Cross Compile Cotract   Contract 5",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await testCallFunc(\"0x0000000000000000000000000000000000000005\", \"0x00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000002003fffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2efffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f\", \"0x0000000000000000000000000000000000000000000000000000000000000001\")",
              "err": {},
              "uuid": "8e98345d-effb-4424-b80b-3594b5a0146a",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contract 6",
              "fullTitle": "CallContractTest.js Pre Cross Compile Cotract   Contract 6",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await testCallFunc(\"0x0000000000000000000000000000000000000006\", \"0x18b18acfb4c2c30276db5411368e7185b311dd124691610c5d3b74034e093dc9063c909c4720840cb5134cb9f59fa749755796819658d32efc0d288198f3726607c2b7f58a84bd6145f00c9c2bc0bb1a187f20ff2c92963a88019e7c6a014eed06614e20c147e940f2d70da3f74c9a17df361706a4485c742bd6788478fa17d7\", \"0x2243525c5efd4b9c3d3c45ac0ca3fe4dd85e830a4ce6b65fa1eeaee202839703301d1d33be6da8e509df21cc35964723180eed7532537db9ae5e7d48f195c915\")",
              "err": {},
              "uuid": "25d194f2-35bd-4f90-ab1c-6d7a8a940fc4",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Contract 7",
              "fullTitle": "CallContractTest.js Pre Cross Compile Cotract   Contract 7",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await testCallFunc(\"0x0000000000000000000000000000000000000007\", \"0x2bd3e6d0f3b142924f5ca7b49ce5b9d54c4703d7ae5648e61d02268b1a0a9fb721611ce0a6af85915e2f1d70300909ce2e49dfad4a4619c8390cae66cefdb20400000000000000000000000000000000000000000000000011138ce750fa15c2\", \"0x070a8d6a982153cae4be29d434e8faef8a47b274a053f5a4ee2a6c9c13c31e5c031b8ce914eba3a9ffb989f9cdd5b0f01943074bf4f0f315690ec3cec6981afc\")",
              "err": {},
              "uuid": "58924d33-fb43-4fa1-bdd0-3232bf7e7871",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "bug",
              "fullTitle": "CallContractTest.js Pre Cross Compile Cotract   bug",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    await testCallFunc(\"0x0000000000000000000000000000000000000001\", \"0x38d18acb67d25c8bb9942764b62f18e17054f66a817bd4295423adf9ed98873e000000000000000000000000000000000000000000000000000000000000001b38d18acb67d25c8bb9942764b62f18e17054f66a817bd4295423adf9ed98873e789d1dd423d25f0772d2748d60f7e4b81bb14d086eba8e8e8efb6dcff8a4ae02\", \"0x000000000000000000000000ceaccac640adf55b2028469bd36ba501f28b6991\")\n    expect(\"\").to.be.equal(\"failed\")\n} catch (e) {\n    // expect(e.toString()).to.be.contains(\"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ά\");\n}",
              "err": {},
              "uuid": "1c18abf7-0d4a-463d-a844-17eb01e8d30e",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "(0x0000000000000000000000000000000000000008)wait todo",
              "fullTitle": "CallContractTest.js Pre Cross Compile Cotract   (0x0000000000000000000000000000000000000008)wait todo",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await testCallFunc(\"0x0000000000000000000000000000000000000008\", \"0x1c76476f4def4bb94541d57ebba1193381ffa7aa76ada664dd31c16024c43f593034dd2920f673e204fee2811c678745fc819b55d3e9d294e45c9b03a76aef41209dd15ebff5d46c4bd888e51a93cf99a7329636c63514396b4a452003a35bf704bf11ca01483bfa8b34b43561848d28905960114c8ac04049af4b6315a416782bb8324af6cfc93537a2ad1a445cfd0ca2a71acd7ac41fadbf933c2a51be344d120a2a4cf30c1bf9845f20c6fe39e07ea2cce61f0c9bb048165fe5e4de877550111e129f1cf1097710d41c4ac70fcdfa5ba2023c6ff1cbeac322de49d1b6df7c2032c61a830e3c17286de9462bf242fca2883585b93870a73853face6a6bf411198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c21800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa\", \"0x0000000000000000000000000000000000000000000000000000000000000001\")",
              "err": {},
              "uuid": "ea17b517-ab19-46d9-91d8-dca0dec0c251",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "e9342ffe-751f-4f7b-a6e9-b1058f90396a",
            "a24f5fef-39b0-42a4-a9a9-7c9bb9606d4a",
            "1fb4851d-2e41-4390-a391-21c70c48d7cc",
            "34ed1f9f-a96e-4a7c-8c03-29bfc514c71a",
            "8e98345d-effb-4424-b80b-3594b5a0146a",
            "25d194f2-35bd-4f90-ab1c-6d7a8a940fc4",
            "58924d33-fb43-4fa1-bdd0-3232bf7e7871",
            "1c18abf7-0d4a-463d-a844-17eb01e8d30e",
            "ea17b517-ab19-46d9-91d8-dca0dec0c251"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "433795dc-87d3-4dcc-995b-1aad9d438f8e",
          "title": "keccak256 ",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/precompiledContract/keccak256.js",
          "file": "/test/precompiledContract/keccak256.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "keccak256  \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const blockInfoContract = await ethers.getContractFactory(\"EcrecoverContract\");\ncontract = await blockInfoContract.deploy();\nawait contract.deployed();",
              "err": {},
              "uuid": "7a445edf-aa67-43a5-9cf2-1b352b4ffe22",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "keccak256 demo ",
              "fullTitle": "keccak256  keccak256 demo ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// check if chain id from web3 is same as chainId opcode\nlet reuslt = await contract.callKeccak256();\nconsole.log(\"result :\",reuslt);\nexpect(reuslt.toString()).to.be.equal(\"0xe1629b9dda060bb30c7908346f6af189c16773fa148d3366701fbaa35d54f3c8\")",
              "err": {},
              "uuid": "4ec8455c-40bf-474c-b362-fb96ed71c964",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "4ec8455c-40bf-474c-b362-fb96ed71c964"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "83fc3bf3-a4ae-4aa3-a8a5-16e89725a53c",
          "title": "Pre Cross Compile Cotract  ",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/precompiledContract/PreCrossCompileCotract.js",
          "file": "/test/precompiledContract/PreCrossCompileCotract.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "Pre Cross Compile Cotract   \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "blockInfoContract = await ethers.getContractFactory(\"contracts/precompiledContract/PreCrossCompileCotract.sol:CallContractTest\");\ncontract = await blockInfoContract.deploy();\nawait contract.deployed();\nconsole.log(\"address\",contract.address)",
              "err": {},
              "uuid": "64657a10-887f-4721-a490-074fe28ada53",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "bug",
              "fullTitle": "Pre Cross Compile Cotract   bug",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// try {\n//     await testCallFunc(\"0x0000000000000000000000000000000000000001\",\"0x38d18acb67d25c8bb9942764b62f18e17054f66a817bd4295423adf9ed98873e000000000000000000000000000000000000000000000000000000000000001b38d18acb67d25c8bb9942764b62f18e17054f66a817bd4295423adf9ed98873e789d1dd423d25f0772d2748d60f7e4b81bb14d086eba8e8e8efb6dcff8a4ae02\",\"0x000000000000000000000000ceaccac640adf55b2028469bd36ba501f28b6991\")\n// }catch (e) {\n//     expect(e.toString()).to.be.contains(\"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ά\");\n// }",
              "err": {},
              "uuid": "65916608-f79b-4a79-b204-1d505454f96f",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "wait todo",
              "fullTitle": "Pre Cross Compile Cotract   wait todo",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = await testCallFunc(\"0x0000000000000000000000000000000000000008\",\"0x1c76476f4def4bb94541d57ebba1193381ffa7aa76ada664dd31c16024c43f593034dd2920f673e204fee2811c678745fc819b55d3e9d294e45c9b03a76aef41209dd15ebff5d46c4bd888e51a93cf99a7329636c63514396b4a452003a35bf704bf11ca01483bfa8b34b43561848d28905960114c8ac04049af4b6315a416782bb8324af6cfc93537a2ad1a445cfd0ca2a71acd7ac41fadbf933c2a51be344d120a2a4cf30c1bf9845f20c6fe39e07ea2cce61f0c9bb048165fe5e4de877550111e129f1cf1097710d41c4ac70fcdfa5ba2023c6ff1cbeac322de49d1b6df7c2032c61a830e3c17286de9462bf242fca2883585b93870a73853face6a6bf411198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c21800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa\",\"0x0000000000000000000000000000000000000000000000000000000000000001\")\nconsole.log(result)",
              "err": {},
              "uuid": "263d9ea0-ecd6-4bea-86c1-b2f8842e0b03",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "65916608-f79b-4a79-b204-1d505454f96f",
            "263d9ea0-ecd6-4bea-86c1-b2f8842e0b03"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "e57899ee-bf43-4c04-9b6d-07b402257a1d",
          "title": "eth_call ",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/rpc/call.test.js",
          "file": "/test/rpc/call.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "eth_call  \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fallbackAndReceiveContractInfo = await ethers.getContractFactory(\"fallbackAndReceive\");\nlogContract = await ethers.getContractFactory(\"LogContract\");\nlogContract.deploy().then((res)=>{\n    console.log(\"res:\",res)\n})",
              "err": {},
              "uuid": "a6ea189e-42c3-4d1f-95f5-55c066b75027",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "50982f5a-5ccd-4ca0-8da3-44513f37175f",
              "title": "tx.from",
              "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/rpc/call.test.js",
              "file": "/test/rpc/call.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "from address not exist = > from id not exist ",
                  "fullTitle": "eth_call  tx.from from address not exist = > from id not exist ",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "try {\n    let result = await ethers.provider.send(\"eth_call\", [{\n        \"from\": \"0x0c1efcca2bcb65a532274f3ef24c044ef4ab6d74\",\n        \"to\": \"0x0c1efcca2bcb65a532274f3ef24c044ef4ab6d73\",\n    }, \"latest\"]);\n    console.log(result)\n}catch (e){\n    expect(e.toString()).to.be.contains(\"from id not found\")\n    return\n}\nexpect(\"\").to.be.equal(\"failed\")",
                  "err": {},
                  "uuid": "72dcde0a-a9d0-4190-8ff6-a699074784ff",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "72dcde0a-a9d0-4190-8ff6-a699074784ff"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 40000
            },
            {
              "uuid": "430dfa69-6756-4106-888a-bbbfc6912bd6",
              "title": "tx.to",
              "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/rpc/call.test.js",
              "file": "/test/rpc/call.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "to is EOA Address =>  to address is not a valid contract! ",
                  "fullTitle": "eth_call  tx.to to is EOA Address =>  to address is not a valid contract! ",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// fallbackAndReceiveContract = await ethers.getContractFactory(\"fallbackAndReceive\");\n// logContract = await ethers.getContractFactory(\"LogContract\");\nlet gasPrice = await getGasPrice(ethers.provider);\nconsole.log(\"gasPrice:\", gasPrice)\ntry {\n    let result = await ethers.provider.send(\"eth_call\", [{\n        \"from\": \"0x0c1efcca2bcb65a532274f3ef24c044ef4ab6d73\",\n        \"to\": \"0x0c1efcca2bcb65a532274f3ef24c044ef4ab6d73\",\n    }, \"latest\"]);\n} catch (e) {\n    expect(e.toString()).to.be.contains(\"to address is not a valid contract.\")\n    return\n}\nexpect(\"\").to.be.equal(\"failed\")",
                  "err": {},
                  "uuid": "136cd21c-5e96-48f2-ac3c-7fb82afbab68",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "deploy tx => failed(to address is null) ",
                  "fullTitle": "eth_call  tx.to deploy tx => failed(to address is null) ",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "try {\n    let result = await ethers.provider.send(\"eth_call\", [{\n        // \"to\": \"0x5d0666bae2a0116ffb37e2d5684a3b432c3b7e73\",\n        \"data\": logContract.bytecode,\n    }, \"latest\"]);\n}catch (e){\n    expect(e.toString()).to.be.contains(\"to address\")\n}",
                  "err": {},
                  "uuid": "2596f000-cd1b-47ae-81ac-5f2ba65ffd65",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "136cd21c-5e96-48f2-ac3c-7fb82afbab68",
                "2596f000-cd1b-47ae-81ac-5f2ba65ffd65"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 40000
            },
            {
              "uuid": "c2b83f8b-e3fd-45d5-ad45-3a9ad05c1db5",
              "title": "from, to ,value,data",
              "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/rpc/call.test.js",
              "file": "/test/rpc/call.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "一笔调用成功的交易",
                  "fullTitle": "eth_call  from, to ,value,data 一笔调用成功的交易",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "cb00d3a2-e3f9-4438-8fc9-ae1a6dc48bf1",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "from 为合约地址",
                  "fullTitle": "eth_call  from, to ,value,data from 为合约地址",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// eth_call 的from 为合约地址\nawait logContract.deployed();\nlet fallbackAndReceiveContract = await fallbackAndReceiveContractInfo.deploy()\nawait fallbackAndReceiveContract.deployed();\ntry {\n    let result = await ethers.provider.send(\"eth_call\",[{\n        \"from\":fallbackAndReceiveContract.address,\n        \"to\":fallbackAndReceiveContract.address,\n        \"data\":\"0x2a9e9ea8\"\n    }, \"latest\"])\n    console.log(\"result:\",result)\n}catch (e){}\n\nresult = await ethers.provider.send(\"eth_estimateGas\",[{\n    \"from\":fallbackAndReceiveContract.address,\n    \"to\":fallbackAndReceiveContract.address,\n    \"data\":\"0x2a9e9ea8\"\n}])\nconsole.log(\"result:\",result)",
                  "err": {},
                  "uuid": "1ba27109-bf5c-485f-a5e9-c871b7c979f9",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "from 为为注册的地址",
                  "fullTitle": "eth_call  from, to ,value,data from 为为注册的地址",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// eth_call 的from 为合约地址\nlet fallbackAndReceiveContract = await fallbackAndReceiveContractInfo.deploy()\nawait fallbackAndReceiveContract.deployed();\ntry {\n    let result = await ethers.provider.send(\"eth_call\",[{\n        \"from\":\"0x8974eD1cfA93B1E28E11005E3eA88AF814521131\",\n        \"to\":fallbackAndReceiveContract.address,\n        \"data\":\"0x2a9e9ea8\"\n    }, \"latest\"])\n    console.log(\"result:\",result)\n}catch (e){}\n\nresult = await ethers.provider.send(\"eth_estimateGas\",[{\n    \"from\":\"0x8974eD1cfA93B1E28E11005E3eA88AF814521131\",\n    \"to\":fallbackAndReceiveContract.address,\n    \"data\":\"0x2a9e9ea8\"\n}])\nconsole.log(\"result:\",result)",
                  "err": {},
                  "uuid": "91e9af70-828f-48d5-aef7-412b5527d147",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "一笔调用失败的交易",
                  "fullTitle": "eth_call  from, to ,value,data 一笔调用失败的交易",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "aed5270f-a164-448d-a481-be528a4f138b",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "cb00d3a2-e3f9-4438-8fc9-ae1a6dc48bf1",
                "1ba27109-bf5c-485f-a5e9-c871b7c979f9",
                "91e9af70-828f-48d5-aef7-412b5527d147",
                "aed5270f-a164-448d-a481-be528a4f138b"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 40000
            },
            {
              "uuid": "a5021067-2503-4e53-b0c9-359a52a8e026",
              "title": "QUANTITY|TAG",
              "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/rpc/call.test.js",
              "file": "/test/rpc/call.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "在之前区块调用会失败的交易",
                  "fullTitle": "eth_call  QUANTITY|TAG 在之前区块调用会失败的交易",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "3b096ffc-99ed-4d3a-b185-ec77fedb60ff",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "3b096ffc-99ed-4d3a-b185-ec77fedb60ff"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 40000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "b2baa4f0-5518-4540-a6d9-d41b112897be",
          "title": "demo",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/rpc/demo.test.js",
          "file": "/test/rpc/demo.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "6e9d9387-a6ae-4c62-82c0-db51a35e7e1c",
              "title": "tx.from",
              "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/rpc/demo.test.js",
              "file": "/test/rpc/demo.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "test",
                  "fullTitle": "demo tx.from test",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await sendTxToAddBlockNum(ethers.provider, 2)",
                  "err": {},
                  "uuid": "afb2ac42-23be-4bf8-bb27-591c68c63fd5",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "get tx count",
                  "fullTitle": "demo tx.from get tx count",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await getTxCount(ethers.provider,ethers.provider.getSigner().getAddress())",
                  "err": {},
                  "uuid": "06a6821b-84b1-4f3a-ad96-13d9251a7a66",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "afb2ac42-23be-4bf8-bb27-591c68c63fd5",
                "06a6821b-84b1-4f3a-ad96-13d9251a7a66"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 40000
            },
            {
              "uuid": "79e82f03-00b5-488f-a36b-9af9ee2d1002",
              "title": "issue275",
              "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/rpc/demo.test.js",
              "file": "/test/rpc/demo.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "demo",
                  "fullTitle": "demo issue275 demo",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let address = \"0x966B30e576A4d6731996748B48Dd67C94eF29067\";\n            let interval = 1;\n            for (let i = 0; i < 10000; i++) {\n                await ethers.provider.send(\"eth_sendTransaction\", [{\n                    \"data\": \"0x608060405234801561001057600080fd5b50604051610e30380380610e308339810180604052810190808051906020019092919080518201929190602001805190602001909291908051820192919050505083600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508360008190555082600390805190602001906100b29291906100ee565b5081600460006101000a81548160ff021916908360ff16021790555080600590805190602001906100e49291906100ee565b5050505050610193565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061012f57805160ff191683800117855561015d565b8280016001018555821561015d579182015b8281111561015c578251825591602001919060010190610141565b5b50905061016a919061016e565b5090565b61019091905b8082111561018c576000816000905550600101610174565b5090565b90565b610c8e806101a26000396000f3006080604052600436106100af576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100b4578063095ea7b31461014457806318160ddd146101a957806323b872dd146101d457806327e235e314610259578063313ce567146102b05780635c658165146102e157806370a082311461035857806395d89b41146103af578063a9059cbb1461043f578063dd62ed3e146104a4575b600080fd5b3480156100c057600080fd5b506100c961051b565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101095780820151818401526020810190506100ee565b50505050905090810190601f1680156101365780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015057600080fd5b5061018f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105b9565b604051808215151515815260200191505060405180910390f35b3480156101b557600080fd5b506101be6106ab565b6040518082815260200191505060405180910390f35b3480156101e057600080fd5b5061023f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106b1565b604051808215151515815260200191505060405180910390f35b34801561026557600080fd5b5061029a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061094b565b6040518082815260200191505060405180910390f35b3480156102bc57600080fd5b506102c5610963565b604051808260ff1660ff16815260200191505060405180910390f35b3480156102ed57600080fd5b50610342600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610976565b6040518082815260200191505060405180910390f35b34801561036457600080fd5b50610399600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061099b565b6040518082815260200191505060405180910390f35b3480156103bb57600080fd5b506103c46109e4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104045780820151818401526020810190506103e9565b50505050905090810190601f1680156104315780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561044b57600080fd5b5061048a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a82565b604051808215151515815260200191505060405180910390f35b3480156104b057600080fd5b50610505600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bdb565b6040518082815260200191505060405180910390f35b60038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105b15780601f10610586576101008083540402835291602001916105b1565b820191906000526020600020905b81548152906001019060200180831161059457829003601f168201915b505050505081565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60005481565b600080600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101580156107825750828110155b151561078d57600080fd5b82600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555082600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156108da5782600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a360019150509392505050565b60016020528060005260406000206000915090505481565b600460009054906101000a900460ff1681565b6002602052816000526040600020602052806000526040600020600091509150505481565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a7a5780601f10610a4f57610100808354040283529160200191610a7a565b820191906000526020600020905b815481529060010190602001808311610a5d57829003601f168201915b505050505081565b600081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515610ad257600080fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050929150505600a165627a7a72305820f44594c2ec12f2f887263343efd6545cd5eaab7e903fb27b4bdfa850f9fad7e40029\",\n                }]);\n                await new Promise(r => setTimeout(r, interval));\n            }",
                  "err": {},
                  "uuid": "18ae8068-fd55-444a-824f-99120f51edb7",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "eth_estimateGas",
                  "fullTitle": "demo issue275 eth_estimateGas",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let interval = 1;\n            for (let i = 0; i < 10000; i++) {\n                await ethers.provider.send(\"eth_estimateGas\", [{\n                    \"from\":\"0x0c1efcca2bcb65a532274f3ef24c044ef4ab6d73\",\n                    \"data\": \"0x608060405234801561001057600080fd5b50604051610e30380380610e308339810180604052810190808051906020019092919080518201929190602001805190602001909291908051820192919050505083600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508360008190555082600390805190602001906100b29291906100ee565b5081600460006101000a81548160ff021916908360ff16021790555080600590805190602001906100e49291906100ee565b5050505050610193565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061012f57805160ff191683800117855561015d565b8280016001018555821561015d579182015b8281111561015c578251825591602001919060010190610141565b5b50905061016a919061016e565b5090565b61019091905b8082111561018c576000816000905550600101610174565b5090565b90565b610c8e806101a26000396000f3006080604052600436106100af576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100b4578063095ea7b31461014457806318160ddd146101a957806323b872dd146101d457806327e235e314610259578063313ce567146102b05780635c658165146102e157806370a082311461035857806395d89b41146103af578063a9059cbb1461043f578063dd62ed3e146104a4575b600080fd5b3480156100c057600080fd5b506100c961051b565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101095780820151818401526020810190506100ee565b50505050905090810190601f1680156101365780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015057600080fd5b5061018f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105b9565b604051808215151515815260200191505060405180910390f35b3480156101b557600080fd5b506101be6106ab565b6040518082815260200191505060405180910390f35b3480156101e057600080fd5b5061023f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106b1565b604051808215151515815260200191505060405180910390f35b34801561026557600080fd5b5061029a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061094b565b6040518082815260200191505060405180910390f35b3480156102bc57600080fd5b506102c5610963565b604051808260ff1660ff16815260200191505060405180910390f35b3480156102ed57600080fd5b50610342600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610976565b6040518082815260200191505060405180910390f35b34801561036457600080fd5b50610399600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061099b565b6040518082815260200191505060405180910390f35b3480156103bb57600080fd5b506103c46109e4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104045780820151818401526020810190506103e9565b50505050905090810190601f1680156104315780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561044b57600080fd5b5061048a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a82565b604051808215151515815260200191505060405180910390f35b3480156104b057600080fd5b50610505600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bdb565b6040518082815260200191505060405180910390f35b60038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105b15780601f10610586576101008083540402835291602001916105b1565b820191906000526020600020905b81548152906001019060200180831161059457829003601f168201915b505050505081565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60005481565b600080600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101580156107825750828110155b151561078d57600080fd5b82600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555082600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156108da5782600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a360019150509392505050565b60016020528060005260406000206000915090505481565b600460009054906101000a900460ff1681565b6002602052816000526040600020602052806000526040600020600091509150505481565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a7a5780601f10610a4f57610100808354040283529160200191610a7a565b820191906000526020600020905b815481529060010190602001808311610a5d57829003601f168201915b505050505081565b600081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515610ad257600080fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050929150505600a165627a7a72305820f44594c2ec12f2f887263343efd6545cd5eaab7e903fb27b4bdfa850f9fad7e40029\",\n                }]);\n                await new Promise(r => setTimeout(r, interval));\n            }",
                  "err": {},
                  "uuid": "e03ac45f-88d2-48b1-a49d-36e4a8fd56a3",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "eth——call 2",
                  "fullTitle": "demo issue275 eth——call 2",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// let address = \"0x966B30e576A4d6731996748B48Dd67C94eF29067\";\n            // getTxCount(ethers.provider, address);\n            let interval = 1;\n            for (let i = 0; i < 10000; i++) {\n                await ethers.provider.send(\"eth_call\", [{\n                    \"from\":\"0x0c1efcca2bcb65a532274f3ef24c044ef4ab6d73\",\n                    \"to\":null,\n                    \"data\": \"0x608060405234801561001057600080fd5b50604051610e30380380610e308339810180604052810190808051906020019092919080518201929190602001805190602001909291908051820192919050505083600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508360008190555082600390805190602001906100b29291906100ee565b5081600460006101000a81548160ff021916908360ff16021790555080600590805190602001906100e49291906100ee565b5050505050610193565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061012f57805160ff191683800117855561015d565b8280016001018555821561015d579182015b8281111561015c578251825591602001919060010190610141565b5b50905061016a919061016e565b5090565b61019091905b8082111561018c576000816000905550600101610174565b5090565b90565b610c8e806101a26000396000f3006080604052600436106100af576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100b4578063095ea7b31461014457806318160ddd146101a957806323b872dd146101d457806327e235e314610259578063313ce567146102b05780635c658165146102e157806370a082311461035857806395d89b41146103af578063a9059cbb1461043f578063dd62ed3e146104a4575b600080fd5b3480156100c057600080fd5b506100c961051b565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101095780820151818401526020810190506100ee565b50505050905090810190601f1680156101365780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015057600080fd5b5061018f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105b9565b604051808215151515815260200191505060405180910390f35b3480156101b557600080fd5b506101be6106ab565b6040518082815260200191505060405180910390f35b3480156101e057600080fd5b5061023f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106b1565b604051808215151515815260200191505060405180910390f35b34801561026557600080fd5b5061029a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061094b565b6040518082815260200191505060405180910390f35b3480156102bc57600080fd5b506102c5610963565b604051808260ff1660ff16815260200191505060405180910390f35b3480156102ed57600080fd5b50610342600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610976565b6040518082815260200191505060405180910390f35b34801561036457600080fd5b50610399600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061099b565b6040518082815260200191505060405180910390f35b3480156103bb57600080fd5b506103c46109e4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104045780820151818401526020810190506103e9565b50505050905090810190601f1680156104315780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561044b57600080fd5b5061048a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a82565b604051808215151515815260200191505060405180910390f35b3480156104b057600080fd5b50610505600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bdb565b6040518082815260200191505060405180910390f35b60038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105b15780601f10610586576101008083540402835291602001916105b1565b820191906000526020600020905b81548152906001019060200180831161059457829003601f168201915b505050505081565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60005481565b600080600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101580156107825750828110155b151561078d57600080fd5b82600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555082600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156108da5782600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a360019150509392505050565b60016020528060005260406000206000915090505481565b600460009054906101000a900460ff1681565b6002602052816000526040600020602052806000526040600020600091509150505481565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a7a5780601f10610a4f57610100808354040283529160200191610a7a565b820191906000526020600020905b815481529060010190602001808311610a5d57829003601f168201915b505050505081565b600081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515610ad257600080fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050929150505600a165627a7a72305820f44594c2ec12f2f887263343efd6545cd5eaab7e903fb27b4bdfa850f9fad7e40029\",\n                },\"latest\"]);\n                await new Promise(r => setTimeout(r, interval));\n            }",
                  "err": {},
                  "uuid": "ada2a233-a3d8-44b4-a03c-9af9c3cbbf70",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "18ae8068-fd55-444a-824f-99120f51edb7",
                "e03ac45f-88d2-48b1-a49d-36e4a8fd56a3",
                "ada2a233-a3d8-44b4-a03c-9af9c3cbbf70"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 40000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "714bd531-0b41-400e-94ae-a2ebe144a2cb",
          "title": "estimateGas  ",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/rpc/estimateGas.test.js",
          "file": "/test/rpc/estimateGas.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "estimateGas   \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// fallbackAndReceiveContract = await ethers.getContractFactory(\"fallbackAndReceive\");\n// logContract = await ethers.getContractFactory(\"LogContract\");\n// logContract.deploy()",
              "err": {},
              "uuid": "2682fcbb-de38-4eb0-a0a4-7fa7bf9b5093",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "code too long  =>",
              "fullTitle": "estimateGas   code too long  =>",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = await ethers.provider.send(\"eth_estimateGas\", [{\n    \"data\": \"\",\n}]);\nexpect(result.toString()).to.be.contains(\"0x\")",
              "err": {},
              "uuid": "69db546f-69d8-41f1-b4d4-5c6adfe19842",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [
            {
              "uuid": "329a0c52-7dde-4ae3-a60f-5f32dd324c46",
              "title": "tx.from",
              "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/rpc/estimateGas.test.js",
              "file": "/test/rpc/estimateGas.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "from address not exist = > from id not found",
                  "fullTitle": "estimateGas   tx.from from address not exist = > from id not found",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "try {\n    let result = await ethers.provider.send(\"eth_estimateGas\", [{\n        \"from\": \"0x0c1efcca2bcb65a532274f3ef24c044ef4ab6d74\",\n        \"data\": logContract.bytecode,\n    }]);\n} catch (e) {\n    expect(e.toString()).to.be.contains(\"from id not found\")\n    return\n}\nexpect(\"\").to.be.contains(\"failed\")",
                  "err": {},
                  "uuid": "ccef5432-eb71-49eb-a328-bbaa5a791f95",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "ccef5432-eb71-49eb-a328-bbaa5a791f95"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 40000
            },
            {
              "uuid": "0315902a-b132-4200-8570-e0808527f769",
              "title": "tx.to",
              "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/rpc/estimateGas.test.js",
              "file": "/test/rpc/estimateGas.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "to is empty ",
                  "fullTitle": "estimateGas   tx.to to is empty ",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let gasPrice = await getGasPrice(ethers.provider);\n            console.log(\"gasPrice:\", gasPrice)\n            let result = await ethers.provider.send(\"eth_estimateGas\", [{}]);\n            expect(result.toString()).to.be.contains(\"0x1000000\")",
                  "err": {},
                  "uuid": "de4f0d0e-c4ca-429d-8833-0f5076ac6f87",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "deploy tx =>",
                  "fullTitle": "estimateGas   tx.to deploy tx =>",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let result = await ethers.provider.send(\"eth_estimateGas\", [{\n    // \"to\": \"0x5d0666bae2a0116ffb37e2d5684a3b432c3b7e73\",\n    \"data\": logContract.bytecode,\n}]);\nexpect(result.toString()).to.be.contains(\"0x\")",
                  "err": {},
                  "uuid": "e1bf2769-1cdf-4844-9404-0127a901b469",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "de4f0d0e-c4ca-429d-8833-0f5076ac6f87",
                "e1bf2769-1cdf-4844-9404-0127a901b469"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 40000
            },
            {
              "uuid": "d5587544-2c7b-4b88-87cb-554323021643",
              "title": "from, to ,value,data",
              "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/rpc/estimateGas.test.js",
              "file": "/test/rpc/estimateGas.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "dadas",
                  "fullTitle": "estimateGas   from, to ,value,data dadas",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fallbackAndReceiveContract = await ethers.getContractFactory(\"fallbackAndReceive\");\nlet contract = await fallbackAndReceiveContract.deploy()\nlet rt = await contract.public_func()\nconsole.log(\"result:\",rt)",
                  "err": {},
                  "uuid": "544c0fcb-9b8c-4e06-bd0b-8c4597af6a85",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "一笔调用成功的交易",
                  "fullTitle": "estimateGas   from, to ,value,data 一笔调用成功的交易",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// depoly tx\nfallbackAndReceiveContract = await ethers.getContractFactory(\"fallbackAndReceive\");\nlet contract = await fallbackAndReceiveContract.deploy()\nawait contract.deployed()\n// estimateGas\n// contract.methods\n//public_func\nawait ethers.provider.send(\"eth_estimateGas\",[{\n    \"to\":contract.address,\n    \"data\":\"0x2a9e9ea8\",\n    // \"value\":\"0x1\",\n}]);\nawait ethers.provider.send(\"eth_estimateGas\",[{\n    \"to\":contract.address,\n    \"data\":\"0x2a9e9ea8\",\n    \"value\":\"0x1\",\n}])",
                  "err": {},
                  "uuid": "025db28e-5ba9-4509-a6ca-9d38255cb567",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "一笔调用失败的交易",
                  "fullTitle": "estimateGas   from, to ,value,data 一笔调用失败的交易",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "c550371f-d8b4-4c87-b796-4d8ecc98b026",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "544c0fcb-9b8c-4e06-bd0b-8c4597af6a85",
                "025db28e-5ba9-4509-a6ca-9d38255cb567",
                "c550371f-d8b4-4c87-b796-4d8ecc98b026"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 40000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "69db546f-69d8-41f1-b4d4-5c6adfe19842"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "5f78b2b2-8312-4d1b-8e0b-d48fa43f653f",
          "title": "getBlockByHash  ",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/rpc/getBlockByHash.test.js",
          "file": "/test/rpc/getBlockByHash.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "getBlockByHash   \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fallbackAndReceiveContract = await ethers.getContractFactory(\"fallbackAndReceive\");\nlogContract = await ethers.getContractFactory(\"LogContract\");\nlogContract.deploy()",
              "err": {},
              "uuid": "b017ea47-14b3-413f-82e0-a253ac245b73",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "getBlockByHash not exist hash => null",
              "fullTitle": "getBlockByHash   getBlockByHash not exist hash => null",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response = await ethers.provider.send(\"eth_getBlockByHash\", [\"0xb2fea9c4b24775af6990237aa90228e5e092c56bdaee74496992a53c208da1ee\", true])\nexpect(response).to.be.equal(null)",
              "err": {},
              "uuid": "8dfe2c9c-c8b7-423e-9694-7a3619d51797",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "getBlockByHash not exist hash => null",
              "fullTitle": "getBlockByHash   getBlockByHash not exist hash => null",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response = await ethers.provider.send(\"eth_getBlockByHash\", [\"0xb2fea9c4b24775af6990237aa90228e5e092c56bdaee74496992a53c208da1ee\", false])\nexpect(response).to.be.equal(null)",
              "err": {},
              "uuid": "60817172-8ad3-426a-a7a6-45299143972d",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "getBlockByHash ",
              "fullTitle": "getBlockByHash   getBlockByHash ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// let number = await ethers.provider.getBlockNumber();\nlet response = await ethers.provider.getBlock(\"latest\")\n// hash\nlet responseByTxhashTrue = await ethers.provider.send(\"eth_getBlockByHash\", [response.hash, true])\nlet responseByTxhashFalse = await ethers.provider.send(\"eth_getBlockByHash\", [response.hash, false])\nexpect(responseByTxhashTrue.hash).to.be.equal(response.hash)\nexpect(responseByTxhashFalse.hash).to.be.equal(response.hash)\n// parentHash\nresponseByTxhashTrue = await ethers.provider.send(\"eth_getBlockByHash\", [response.parentHash, true])\nresponseByTxhashFalse = await ethers.provider.send(\"eth_getBlockByHash\", [response.parentHash, false])\nexpect(responseByTxhashTrue.hash).to.be.equal(response.parentHash)\nexpect(responseByTxhashFalse.hash).to.be.equal(response.parentHash)",
              "err": {},
              "uuid": "d032eec9-4d57-4c4f-98ea-7c8ee06a03f3",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "8dfe2c9c-c8b7-423e-9694-7a3619d51797",
            "60817172-8ad3-426a-a7a6-45299143972d",
            "d032eec9-4d57-4c4f-98ea-7c8ee06a03f3"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "bb3ee207-0e37-4258-a104-12f79c947293",
          "title": "getBlockByNumber  ",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/rpc/getBlockByNumber.test.js",
          "file": "/test/rpc/getBlockByNumber.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "getBlockByNumber   \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fallbackAndReceiveContract = await ethers.getContractFactory(\"fallbackAndReceive\");\nlogContract = await ethers.getContractFactory(\"LogContract\");\nlogContract.deploy()",
              "err": {},
              "uuid": "80237c82-f440-4b07-b29f-dee83ad6a36e",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "getBlockByNumber not exist number => null",
              "fullTitle": "getBlockByNumber   getBlockByNumber not exist number => null",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response = await ethers.provider.send(\"eth_getBlockByNumber\", [\"0x1b41111111111111\", true])\nexpect(response).to.be.equal(null)",
              "err": {},
              "uuid": "9150d0c1-7ea6-4d44-a419-083fb0453b86",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "overflow not exist number => larger than int64",
              "fullTitle": "getBlockByNumber   overflow not exist number => larger than int64",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response = await ethers.provider.send(\"eth_getBlockByNumber\", [\"0xffffffffffffffff\", true])\nexpect(response).to.be.equal(null)",
              "err": {},
              "uuid": "325e407f-e98d-4254-8539-8db09ce6d761",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "overflow not exist number => larger than bit64",
              "fullTitle": "getBlockByNumber   overflow not exist number => larger than bit64",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response = await ethers.provider.send(\"eth_getBlockByNumber\", [\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\", true])\nexpect(response).to.be.equal(null)",
              "err": {},
              "uuid": "815e219f-dcfa-405c-8dc0-563fd74bf353",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "getBlockByNumber 0 => null",
              "fullTitle": "getBlockByNumber   getBlockByNumber 0 => null",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response = await ethers.provider.send(\"eth_getBlockByNumber\", [\"0x0\", false])\nexpect(response.parentHash).to.be.equal(\"0x0000000000000000000000000000000000000000000000000000000000000000\")",
              "err": {},
              "uuid": "74bf2361-5ab4-4fff-9c95-321887571503",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "getBlockByNumber earliest => ",
              "fullTitle": "getBlockByNumber   getBlockByNumber earliest => ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// let number = await ethers.provider.getBlockNumber();\nlet response = await ethers.provider.send(\"eth_getBlockByNumber\", [\"earliest\", false])\nconsole.log(\"response:\",response)\nexpect(response.parentHash).to.be.equal(\"0x0000000000000000000000000000000000000000000000000000000000000000\")",
              "err": {},
              "uuid": "f0917cae-8189-492f-a55b-05b9c4cb16fc",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "getBlockByNumber pending => ",
              "fullTitle": "getBlockByNumber   getBlockByNumber pending => ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// let number = await ethers.provider.getBlockNumber();\nlet response = await ethers.provider.send(\"eth_getBlockByNumber\", [\"pending\", false])\nconsole.log(\"response:\",response)\nexpect(response.parentHash).to.be.equal(\"0x0000000000000000000000000000000000000000000000000000000000000000\")",
              "err": {},
              "uuid": "6b86b3ae-5acb-4d90-8c70-bbe04aae8ef6",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "getBlockByNumber latest => ",
              "fullTitle": "getBlockByNumber   getBlockByNumber latest => ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// let number = await ethers.provider.getBlockNumber();\nlet response = await ethers.provider.send(\"eth_getBlockByNumber\", [\"latest\", false])\nconsole.log(\"response:\",response)\nexpect(response.parentHash).to.be.contains(\"0x\")",
              "err": {},
              "uuid": "893a127b-7d83-4b7f-88f8-38f29658b662",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "9150d0c1-7ea6-4d44-a419-083fb0453b86",
            "325e407f-e98d-4254-8539-8db09ce6d761",
            "815e219f-dcfa-405c-8dc0-563fd74bf353",
            "74bf2361-5ab4-4fff-9c95-321887571503",
            "f0917cae-8189-492f-a55b-05b9c4cb16fc",
            "6b86b3ae-5acb-4d90-8c70-bbe04aae8ef6",
            "893a127b-7d83-4b7f-88f8-38f29658b662"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "f62452bc-d0a0-46ab-a8fc-160f489ec777",
          "title": "getTransactionByBlockHashAndIndex",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/rpc/getTransactionByBlockHashAndIndex.test.js",
          "file": "/test/rpc/getTransactionByBlockHashAndIndex.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "getTransactionByBlockHashAndIndex \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fallbackAndReceiveContract = await ethers.getContractFactory(\"fallbackAndReceive\");\nlogContract = await ethers.getContractFactory(\"LogContract\");",
              "err": {},
              "uuid": "4767a183-4056-4707-93c5-61396691872f",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "c65a95bc-4b5b-40ce-b045-2f2679346715",
              "title": "block hash",
              "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/rpc/getTransactionByBlockHashAndIndex.test.js",
              "file": "/test/rpc/getTransactionByBlockHashAndIndex.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "not exist block hash",
                  "fullTitle": "getTransactionByBlockHashAndIndex block hash not exist block hash",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let response = await ethers.provider.send(\"eth_getTransactionByBlockHashAndIndex\", [\"0x3c82bc62179602b67318c013c10f99011037c49cba84e31ffe6e465a21c521a7\", \"0x0\"])\nconsole.log(\"eth_getTransactionByBlockHashAndIndex response:\", response)\nexpect(response).to.be.equal(null)",
                  "err": {},
                  "uuid": "43e89188-4eb3-4012-9371-0112d02e49d9",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "43e89188-4eb3-4012-9371-0112d02e49d9"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 40000
            },
            {
              "uuid": "3e1c82fd-76a1-4078-b12d-e9a1ace9969f",
              "title": "exist blockHash",
              "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/rpc/getTransactionByBlockHashAndIndex.test.js",
              "file": "/test/rpc/getTransactionByBlockHashAndIndex.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "empty txs block ",
                  "fullTitle": "getTransactionByBlockHashAndIndex exist blockHash empty txs block ",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let response = await ethers.provider.getBlock(\"earliest\")\nlet tx = await ethers.provider.send(\"eth_getTransactionByBlockHashAndIndex\",[response.hash,\"0x0\"])\nconsole.log(\"tx\")\nexpect(tx).to.be.equal(null)",
                  "err": {},
                  "uuid": "7f857faf-755d-47c9-9466-83844e3c344a",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "first tx",
                  "fullTitle": "getTransactionByBlockHashAndIndex exist blockHash first tx",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let blockNum = await ethers.provider.getBlockNumber();\nlet txResponse;\ndo {\n     txResponse = await  ethers.provider.getBlock(blockNum)\n     blockNum = blockNum-1;\n}while (txResponse.transactions.length<=0)\nconsole.log(\"txResponse:\",txResponse)\nlet tx = await ethers.provider.send(\"eth_getTransactionByBlockHashAndIndex\",[txResponse.hash,\"0x0\"])\nconsole.log(\"tx:\",tx)\nexpect(tx.blockHash).to.be.equal(txResponse.hash)",
                  "err": {},
                  "uuid": "2f953d74-584b-494c-86d2-93e368006f53",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "latest tx",
                  "fullTitle": "getTransactionByBlockHashAndIndex exist blockHash latest tx",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let blockNum = await ethers.provider.getBlockNumber();\nlet txResponse;\ndo {\n    txResponse = await  ethers.provider.getBlock(blockNum)\n    blockNum = blockNum-1;\n}while (txResponse.transactions.length<1)\nlet tx = await ethers.provider.send(\"eth_getTransactionByBlockHashAndIndex\",[txResponse.hash,BigInterToHexString(BigNumber.from(txResponse.transactions.length-1))])\nexpect(tx.blockHash).to.be.equal(txResponse.hash)",
                  "err": {},
                  "uuid": "8c68a99e-26fb-438f-bd03-7dd9923a9302",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "idx out of bound for block num",
                  "fullTitle": "getTransactionByBlockHashAndIndex exist blockHash idx out of bound for block num",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let blockNum = await ethers.provider.getBlockNumber();\nlet txResponse;\ndo {\n    txResponse = await  ethers.provider.getBlock(blockNum)\n    blockNum = blockNum-1;\n}while (txResponse.transactions.length<1)\nlet tx = await ethers.provider.send(\"eth_getTransactionByBlockHashAndIndex\",[txResponse.hash,BigInterToHexString(BigNumber.from(txResponse.transactions.length+1))])\nexpect(tx).to.be.equal(null)",
                  "err": {},
                  "uuid": "290918df-c9b3-42d3-867d-0acaa608b3c8",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "7f857faf-755d-47c9-9466-83844e3c344a",
                "2f953d74-584b-494c-86d2-93e368006f53",
                "8c68a99e-26fb-438f-bd03-7dd9923a9302",
                "290918df-c9b3-42d3-867d-0acaa608b3c8"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 40000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "e88c62a7-7bef-4ea8-9ad1-b7976d5e3d46",
          "title": "getTransactionByBlockNumberAndIndex",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/rpc/getTransactionByBlockNumberAndIndex.test.js",
          "file": "/test/rpc/getTransactionByBlockNumberAndIndex.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "getTransactionByBlockNumberAndIndex \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fallbackAndReceiveContract = await ethers.getContractFactory(\"fallbackAndReceive\");\nlogContract = await ethers.getContractFactory(\"LogContract\");",
              "err": {},
              "uuid": "eecb1ce0-ef5b-47ed-b584-e26e8e6d2085",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "58059760-07c4-41b0-a886-53169a1888f3",
              "title": "tag",
              "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/rpc/getTransactionByBlockNumberAndIndex.test.js",
              "file": "/test/rpc/getTransactionByBlockNumberAndIndex.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "not exist block num",
                  "fullTitle": "getTransactionByBlockNumberAndIndex tag not exist block num",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let num = await ethers.provider.getBlockNumber()\nlet response = await ethers.provider.send(\"eth_getTransactionByBlockNumberAndIndex\", [BigInterToHexString(BigNumber.from(num+1)), \"0x0\"])\nconsole.log(\"eth_getTransactionByBlockHashAndIndex response:\", response)\nexpect(response).to.be.equal(null)",
                  "err": {},
                  "uuid": "d160831a-3fa5-4854-83f2-670555ec32cd",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "not exist block num overflow  larger than int64 ",
                  "fullTitle": "getTransactionByBlockNumberAndIndex tag not exist block num overflow  larger than int64 ",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let num = await ethers.provider.getBlockNumber()\nlet response = await ethers.provider.send(\"eth_getTransactionByBlockNumberAndIndex\", [\"0xffffffffffffffff\", \"0x0\"])\nconsole.log(\"eth_getTransactionByBlockHashAndIndex response:\", response)\nexpect(response).to.be.equal(null)",
                  "err": {},
                  "uuid": "db5d6462-43b4-4b28-aa71-a8a4f3ad3a77",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "not exist block num overflow  larger than 64 bits",
                  "fullTitle": "getTransactionByBlockNumberAndIndex tag not exist block num overflow  larger than 64 bits",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let num = await ethers.provider.getBlockNumber()\n    let response = await ethers.provider.send(\"eth_getTransactionByBlockNumberAndIndex\", [\"0xffffffffffffffffff\", \"0x0\"])\nconsole.log(\"eth_getTransactionByBlockHashAndIndex response:\", response)\nexpect(response).to.be.equal(null)",
                  "err": {},
                  "uuid": "16dd241d-4d78-463d-8170-75851510dfa5",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "d160831a-3fa5-4854-83f2-670555ec32cd",
                "db5d6462-43b4-4b28-aa71-a8a4f3ad3a77",
                "16dd241d-4d78-463d-8170-75851510dfa5"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 40000
            },
            {
              "uuid": "18278646-9932-40c3-b634-48e50c57e63f",
              "title": "exist num ,idx",
              "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/rpc/getTransactionByBlockNumberAndIndex.test.js",
              "file": "/test/rpc/getTransactionByBlockNumberAndIndex.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "empty txs block ",
                  "fullTitle": "getTransactionByBlockNumberAndIndex exist num ,idx empty txs block ",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let tx = await ethers.provider.send(\"eth_getTransactionByBlockNumberAndIndex\",[\"0x0\",\"0x0\"])\nexpect(tx).to.be.equal(null)",
                  "err": {},
                  "uuid": "03e085f9-efee-4991-8c78-1a6753e17ae0",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "first tx",
                  "fullTitle": "getTransactionByBlockNumberAndIndex exist num ,idx first tx",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let blockNum = await ethers.provider.getBlockNumber();\nlet txResponse;\ndo {\n    blockNum = blockNum-1;\n    txResponse = await  ethers.provider.getBlock(blockNum)\n}while (txResponse.transactions.length<=0)\nlet tx = await ethers.provider.send(\"eth_getTransactionByBlockNumberAndIndex\",[BigInterToHexString(BigNumber.from(blockNum)),\"0x0\"])\nexpect(tx.blockHash).to.be.equal(txResponse.hash)",
                  "err": {},
                  "uuid": "4fec52a9-93aa-4c00-b79c-4f8b6659fddd",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "latest tx",
                  "fullTitle": "getTransactionByBlockNumberAndIndex exist num ,idx latest tx",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let blockNum = await ethers.provider.getBlockNumber();\nlet txResponse;\ndo {\n    blockNum = blockNum-1;\n    txResponse = await  ethers.provider.getBlock(blockNum)\n}while (txResponse.transactions.length<1)\nlet tx = await ethers.provider.send(\"eth_getTransactionByBlockNumberAndIndex\",[BigInterToHexString(BigNumber.from(blockNum)),BigInterToHexString(BigNumber.from(txResponse.transactions.length-1))])\nexpect(tx.blockHash).to.be.equal(txResponse.hash)",
                  "err": {},
                  "uuid": "b39cd141-c7bc-429d-9b73-2cff634c8647",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "idx out of bound for block num",
                  "fullTitle": "getTransactionByBlockNumberAndIndex exist num ,idx idx out of bound for block num",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let blockNum = await ethers.provider.getBlockNumber();\nlet txResponse;\ndo {\n    txResponse = await  ethers.provider.getBlock(blockNum)\n    blockNum = blockNum-1;\n}while (txResponse.transactions.length<1)\nlet tx = await ethers.provider.send(\"eth_getTransactionByBlockNumberAndIndex\",[BigInterToHexString(BigNumber.from(blockNum)),BigInterToHexString(BigNumber.from(txResponse.transactions.length+1))])\nexpect(tx).to.be.equal(null)",
                  "err": {},
                  "uuid": "42b7029c-7fe1-43bd-9bb9-cda7a2fc7715",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "idx out of bound for block num overflow",
                  "fullTitle": "getTransactionByBlockNumberAndIndex exist num ,idx idx out of bound for block num overflow",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let blockNum = await ethers.provider.getBlockNumber();\nlet txResponse;\ndo {\n    blockNum = blockNum-1;\n    txResponse = await  ethers.provider.getBlock(blockNum)\n}while (txResponse.transactions.length<1)\nlet tx = await ethers.provider.send(\"eth_getTransactionByBlockNumberAndIndex\",[BigInterToHexString(BigNumber.from(blockNum)),\"0xffffffffffffff\"])\nexpect(tx).to.be.equal(null)",
                  "err": {},
                  "uuid": "561fb63c-4fd2-4bd5-86b8-ea90209825e4",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "03e085f9-efee-4991-8c78-1a6753e17ae0",
                "4fec52a9-93aa-4c00-b79c-4f8b6659fddd",
                "b39cd141-c7bc-429d-9b73-2cff634c8647",
                "42b7029c-7fe1-43bd-9bb9-cda7a2fc7715",
                "561fb63c-4fd2-4bd5-86b8-ea90209825e4"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 40000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "7d85758a-7f04-4fd8-8b3e-d943153d0809",
          "title": "getTransactionByHash  ",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/rpc/getTransactionByHash.test.js",
          "file": "/test/rpc/getTransactionByHash.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "getTransactionByHash   \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fallbackAndReceiveContract = await ethers.getContractFactory(\"fallbackAndReceive\");\nlogContract = await ethers.getContractFactory(\"LogContract\");\nlogContract.deploy()",
              "err": {},
              "uuid": "585ce936-f938-4bff-9659-1a5fe18e282d",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "getTransactionByHash not exist hash => null",
              "fullTitle": "getTransactionByHash   getTransactionByHash not exist hash => null",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response = await ethers.provider.send(\"eth_getTransactionByHash\",[\"0xb2fea9c4b24775af6990237aa90228e5e092c56bdaee74496992a53c208da1ee\"])\nexpect(response).to.be.equal(null)",
              "err": {},
              "uuid": "1266a159-2b01-40ad-90dd-caade7b3b023",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "1266a159-2b01-40ad-90dd-caade7b3b023"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "ea0515ac-2eb3-46ea-bfee-386efd50b577",
          "title": "newBlockFilter",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/rpc/newBlockFilter.js",
          "file": "/test/rpc/newBlockFilter.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "newBlockFilter \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fallbackAndReceiveContract = await ethers.getContractFactory(\"fallbackAndReceive\");\nlogContract = await ethers.getContractFactory(\"LogContract\");",
              "err": {},
              "uuid": "cfe5f9d3-3e73-46c4-a6d9-e7b0cdc56870",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "6e485001-8985-4b60-b920-24ca442bd2dc",
              "title": "newBlockFilter",
              "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/rpc/newBlockFilter.js",
              "file": "/test/rpc/newBlockFilter.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "filter => 不应该从0区块开始算",
                  "fullTitle": "newBlockFilter newBlockFilter filter => 不应该从0区块开始算",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// await sendTxToAddBlockNum(ethers.provider,10)\nlet beginNum = await ethers.provider.getBlockNumber();\nconst filterId = await ethers.provider.send(\"eth_newBlockFilter\",[]);\nlet txs = await ethers.provider.send(\"eth_getFilterChanges\", [filterId]);\nexpect(txs.length).to.be.lt(2)",
                  "err": {},
                  "uuid": "79c37b3a-142e-4c1e-85ca-bff70b68b330",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "filter => bug",
                  "fullTitle": "newBlockFilter newBlockFilter filter => bug",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const filterId = await ethers.provider.send(\"eth_newBlockFilter\");\nfor (let i = 0; i < 5; i++) {\n    console.log(\"----------\")\n    const txs = await ethers.provider.send(\"eth_getFilterChanges\", [filterId]);\n    console.log(\"eth_getFilterChanges: \",i,\":\",txs.length)\n}",
                  "err": {},
                  "uuid": "d1bb6fb3-e8c7-4a02-a38a-58ebd6f4b300",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "demo",
                  "fullTitle": "newBlockFilter newBlockFilter demo",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// await sendTxToAddBlockNum(ethers.provider,10)\nlet beginNum = await ethers.provider.getBlockNumber();\nconst filterId = await ethers.provider.send(\"eth_newBlockFilter\",[]);\nlet txs = await ethers.provider.send(\"eth_getFilterChanges\", [filterId]);\n// expect(txs.length).to.be.equal(0)\nawait sendTxToAddBlockNum(ethers.provider,1)\ntxs = await ethers.provider.send(\"eth_getFilterChanges\", [filterId]);\nlet endNum = await ethers.provider.getBlockNumber();\nconsole.log(\"begin:\",beginNum,\"end:\",endNum)\nexpect(txs.length).to.be.equal(2)",
                  "err": {},
                  "uuid": "5b576a10-9207-4193-bcc2-9b41aebd7e7d",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "79c37b3a-142e-4c1e-85ca-bff70b68b330",
                "d1bb6fb3-e8c7-4a02-a38a-58ebd6f4b300",
                "5b576a10-9207-4193-bcc2-9b41aebd7e7d"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 40000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "1288513d-9f2d-41c9-a647-a3515cd492f0",
          "title": "newFilter",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/rpc/newFilter.js",
          "file": "/test/rpc/newFilter.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "newFilter \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fallbackAndReceiveContract = await ethers.getContractFactory(\"fallbackAndReceive\");\nlogContract = await ethers.getContractFactory(\"LogContract\");",
              "err": {},
              "uuid": "f382fa48-3ff7-40f6-b529-4b3dfa174d2f",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "4d1e70b0-7198-4947-8fb7-596c03c87c98",
              "title": "newFilter",
              "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/rpc/newFilter.js",
              "file": "/test/rpc/newFilter.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "demo",
                  "fullTitle": "newFilter newFilter demo",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const filterId = await ethers.provider.send(\"eth_newFilter\", [filter]);\nconsole.log(filterId);\nconst logs = await provider.send(\"eth_getFilterChanges\", [filterId]);\nconsole.log(logs);",
                  "err": {},
                  "uuid": "6d4b459f-0634-48f4-b9f8-2ae96f7d9af5",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "6d4b459f-0634-48f4-b9f8-2ae96f7d9af5"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 40000
            },
            {
              "uuid": "7445a995-5782-4732-a861-06f602007dcd",
              "title": "from",
              "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/rpc/newFilter.js",
              "file": "/test/rpc/newFilter.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "demo",
                  "fullTitle": "newFilter from demo",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let BeginBlkNum = await ethers.provider.getBlockNumber();\nconst filterId = await ethers.provider.send(\"eth_newFilter\", [{}]);\n// getTxCount(ethers.provider,ethers.provider.getSigner().getAddress())\nawait sendTxToAddBlockNum(ethers.provider,3)\nconst logs = await ethers.provider.send(\"eth_getFilterChanges\", [filterId]);\nlet endBlkNum = await ethers.provider.getBlockNumber();\n// console.log(\"logs:\",logs)\nconsole.log(\"begin blkNum:\",BeginBlkNum.toString())\nconsole.log(\"end blkNum:\",endBlkNum.toString())\nconsole.log(\"=====eth_getFilterChanges==========\")\nfor (let i = 0; i < logs.length; i++) {\n    console.log(\"blockNumber:\",BigNumber.from(logs[i].blockNumber.toString()).toString(),\"blkIdx:\",logs[i].transactionIndex,\"logIndex:\",logs[i].logIndex)\n}",
                  "err": {},
                  "uuid": "8c729d0d-8248-432a-9d2b-18bd7c9392ad",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "8c729d0d-8248-432a-9d2b-18bd7c9392ad"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 40000
            },
            {
              "uuid": "d2bf782f-fbc9-4d74-bc57-e82a15d676ed",
              "title": "topics",
              "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/rpc/newFilter.js",
              "file": "/test/rpc/newFilter.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "[]",
                  "fullTitle": "newFilter topics []",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "dc4200e5-af87-4ef1-94d1-688be9d2b4fd",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "[A]",
                  "fullTitle": "newFilter topics [A]",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "d5ad2fd7-cdc9-4636-88a8-2f76e5e149a1",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "[null,b]",
                  "fullTitle": "newFilter topics [null,b]",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "4454b477-45cc-4677-be97-349e04b17ac9",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "[a,b]",
                  "fullTitle": "newFilter topics [a,b]",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "6aa8ef54-f802-45bb-8259-d868b7b4b426",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "[[A, B], [A, B]]",
                  "fullTitle": "newFilter topics [[A, B], [A, B]]",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "8928b1b2-e9d9-434d-b4fa-3c6357d29cc7",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "dc4200e5-af87-4ef1-94d1-688be9d2b4fd",
                "d5ad2fd7-cdc9-4636-88a8-2f76e5e149a1",
                "4454b477-45cc-4677-be97-349e04b17ac9",
                "6aa8ef54-f802-45bb-8259-d868b7b4b426",
                "8928b1b2-e9d9-434d-b4fa-3c6357d29cc7"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 40000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "0dedd046-0a25-4058-9bc3-a852d5d44861",
          "title": "newPendingTransactionFilter",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/rpc/newPendingTransactionFilter.js",
          "file": "/test/rpc/newPendingTransactionFilter.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "newPendingTransactionFilter \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fallbackAndReceiveContract = await ethers.getContractFactory(\"fallbackAndReceive\");\nlogContract = await ethers.getContractFactory(\"LogContract\");",
              "err": {},
              "uuid": "c1c3266b-daf9-4d0f-b7f6-9f7a705c3ab0",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "f3aa9690-015e-4017-8cad-2a2d47d2af55",
              "title": "demo",
              "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/rpc/newPendingTransactionFilter.js",
              "file": "/test/rpc/newPendingTransactionFilter.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "demo",
                  "fullTitle": "newPendingTransactionFilter demo demo",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let  filterId = await ethers.provider.send(\"eth_newPendingTransactionFilter\",[]);\nawait sendTxCount(ethers.provider,10)\nconst logs = await ethers.provider.send(\"eth_getFilterChanges\", [filterId]);\nexpect(logs.length).to.be.gte(10)",
                  "err": {},
                  "uuid": "787784c0-be1d-4abc-b80b-9381e0d5dbba",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "787784c0-be1d-4abc-b80b-9381e0d5dbba"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 40000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "f1b3fee0-9cf9-4609-96f2-dd1d05fd737a",
          "title": "sendRawTransaction ",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/rpc/sendRawTransaction.js",
          "file": "/test/rpc/sendRawTransaction.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "sendRawTransaction  \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fallbackAndReceiveContract = await ethers.getContractFactory(\"fallbackAndReceive\");\nlogContract = await ethers.getContractFactory(\"LogContract\");",
              "err": {},
              "uuid": "e2cfe1b3-7514-4d13-ac22-800e6d646177",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "6c488ae7-e53a-47c5-877a-28bf633dce15",
              "title": "to",
              "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/rpc/sendRawTransaction.js",
              "file": "/test/rpc/sendRawTransaction.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "to is EOA Address =>  to_address can not be EOA address! ",
                  "fullTitle": "sendRawTransaction  to to is EOA Address =>  to_address can not be EOA address! ",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let gasPrice = await getGasPrice(ethers.provider);\nconsole.log(\"gasPrice:\", gasPrice)\ntry {\n    await ethers.provider.send(\"eth_sendTransaction\", [{\n        \"from\": \"0x0c1efcca2bcb65a532274f3ef24c044ef4ab6d73\",\n        \"to\": \"0x0c1efcca2bcb65a532274f3ef24c044ef4ab6d73\",\n        \"gas\": \"0x76c0\",\n        \"gasPrice\": gasPrice,\n        \"value\": \"0x9184e72a\",\n        \"data\": \"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675\"\n    }]);\n    expect(\"\").to.be.equal(\"no\")\n} catch (e) {\n    expect(e.toString()).to.be.contains(\"to_address can not be EOA address!\")\n}",
                  "err": {},
                  "uuid": "3517b5ca-481b-46b8-9d43-87bfe03b4e74",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "to is not exist Address => to id not found by address ",
                  "fullTitle": "sendRawTransaction  to to is not exist Address => to id not found by address ",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let gasPrice = await getGasPrice(ethers.provider);\ntry {\n    await ethers.provider.send(\"eth_sendTransaction\", [{\n        \"from\": \"0x0c1efcca2bcb65a532274f3ef24c044ef4ab6d73\",\n        \"to\": \"0x0c1efcca2bcb65a532274f3ef24c044ef4ab6d71\",\n        \"gas\": gasPrice,\n        \"gasPrice\": \"0x9184e72a000\",\n        \"value\": \"0x9184e72a\",\n        \"data\": \"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675\"\n    }]);\n} catch (e) {\n    expect(e.toString()).to.be.contains(\"to id not found by address\")\n}",
                  "err": {},
                  "uuid": "0b1a1ea2-39a2-45c2-b427-23d35fa265fe",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "to is  contract Address => invoke success ",
                  "fullTitle": "sendRawTransaction  to to is  contract Address => invoke success ",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let gasPrice = await getGasPrice(ethers.provider);\ncontract = await fallbackAndReceiveContract.deploy();\nawait contract.deployed();\nlet tx = await ethers.provider.send(\"eth_sendTransaction\", [{\n    \"from\": \"0x0c1efcca2bcb65a532274f3ef24c044ef4ab6d73\",\n    \"to\": contract.address,\n    \"gas\": \"0x76c0\",\n    \"gasPrice\": gasPrice,\n    \"value\": \"0x1\",\n}]);\nlet response = await getTxReceipt(ethers.provider, tx)\nconsole.log(\"response:\", response)\nlet balanceOfContract = await ethers.provider.getBalance(contract.address)\nexpect(balanceOfContract).to.be.equal(1)",
                  "err": {},
                  "uuid": "e0043bf1-96f9-494e-b05d-fba643db4ab5",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "to is null => deploy tx",
                  "fullTitle": "sendRawTransaction  to to is null => deploy tx",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let gasPrice = await getGasPrice(ethers.provider);\nlet tx = await ethers.provider.send(\"eth_sendTransaction\", [{\n    \"from\": \"0x0c1efcca2bcb65a532274f3ef24c044ef4ab6d73\",\n    // \"to\": \"0x\",\n    \"gas\": \"0x76c000000\",\n    \"gasPrice\": gasPrice,\n    // \"value\": \"0x9184e72a\",\n    \"data\": fallbackAndReceiveContract.bytecode\n}]);\nlet response = await getTxReceipt(ethers.provider, tx, 5)\nconsole.log(\"response:\", response)\nexpect(response.to).to.be.equal(null)\nexpect(response.contractAddress).to.be.contains(\"0x\")",
                  "err": {},
                  "uuid": "5949a77c-c521-4f92-b6b8-4e2e75bb7a7a",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "to is 0x0 =>  zero address 0x0000000000000000000000000000000000000000 has no valid account_id!",
                  "fullTitle": "sendRawTransaction  to to is 0x0 =>  zero address 0x0000000000000000000000000000000000000000 has no valid account_id!",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let gasPrice = await getGasPrice(ethers.provider);\ntry {\n    let tx = await ethers.provider.send(\"eth_sendTransaction\", [{\n        \"from\": \"0x0c1efcca2bcb65a532274f3ef24c044ef4ab6d73\",\n        \"to\": \"0x0000000000000000000000000000000000000000\",\n        \"gas\": \"0x76c000000\",\n        \"gasPrice\": gasPrice,\n        // \"value\": \"0x9184e72a\",\n        \"data\": fallbackAndReceiveContract.bytecode\n    }]);\n    expect(\"\").to.be.equal(\"no\")\n} catch (e) {\n    expect(e.toString()).to.be.contains(\"zero address 0x0000000000000000000000000000000000000000 has no valid account_id!\")\n}",
                  "err": {},
                  "uuid": "d3781ac7-5216-4683-8a13-4c43043a1e19",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "3517b5ca-481b-46b8-9d43-87bfe03b4e74",
                "0b1a1ea2-39a2-45c2-b427-23d35fa265fe",
                "e0043bf1-96f9-494e-b05d-fba643db4ab5",
                "5949a77c-c521-4f92-b6b8-4e2e75bb7a7a",
                "d3781ac7-5216-4683-8a13-4c43043a1e19"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 40000
            },
            {
              "uuid": "9285ea70-da8e-41ea-84a1-5a9f111c2744",
              "title": "gasLimit",
              "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/rpc/sendRawTransaction.js",
              "file": "/test/rpc/sendRawTransaction.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "gasLimit default => invoke succ",
                  "fullTitle": "sendRawTransaction  gasLimit gasLimit default => invoke succ",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let gasPrice = await getGasPrice(ethers.provider);\nconsole.log(\"gasPrice:\", gasPrice._hex)\nlet tx = await ethers.provider.send(\"eth_sendTransaction\", [{\n    \"from\": \"0x0c1efcca2bcb65a532274f3ef24c044ef4ab6d73\",\n    \"gasPrice\": \"0x1\",\n    \"data\": fallbackAndReceiveContract.bytecode\n}]);\nlet response = await getTxReceipt(ethers.provider, tx, 5)\nconsole.log(\"tx:\", tx)\nconsole.log(\"response:\", response)\nexpect(response.status).to.be.equal(1)",
                  "err": {},
                  "uuid": "53872261-a8df-4bde-b0c1-62d9f3a9ed9f",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "gasLimit very min => out of gas",
                  "fullTitle": "sendRawTransaction  gasLimit gasLimit very min => out of gas",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// let gasPrice = await getGasPrice(ethers.provider);\nconsole.log(\"begin\")\n// console.log(\"gasPrice:\",gasPrice._hex)\ntry {\n    let tx = await ethers.provider.send(\"eth_sendTransaction\", [{\n        // \"from\": \"0x0c1efcca2bcb65a532274f3ef24c044ef4ab6d73\",\n        \"gas\": \"0x1\",\n        // \"gasPrice\": \"0x1\",\n        \"data\": fallbackAndReceiveContract.bytecode\n    }]);\n    console.log(\"tx:\", tx)\n} catch (e) {\n    console.log(\"e:\", e)\n    expect(e.toString()).to.be.contains(\"gas\")\n    return\n}\nexpect(\"\").to.be.contains(\"expected throw out of gas\")",
                  "err": {},
                  "uuid": "03c8823e-dcf5-4991-b0df-92399b5b64c6",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "gasLimit is 1 => out of gas",
                  "fullTitle": "sendRawTransaction  gasLimit gasLimit is 1 => out of gas",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// let gasPrice = await getGasPrice(ethers.provider);\nconsole.log(\"begin\")\n// console.log(\"gasPrice:\",gasPrice._hex)\ntry {\n    let tx = await ethers.provider.send(\"eth_sendTransaction\", [{\n        // \"from\": \"0x0c1efcca2bcb65a532274f3ef24c044ef4ab6d73\",\n        \"gas\": \"0x1\",\n        // \"gasPrice\": \"0x1\",\n        \"data\": fallbackAndReceiveContract.bytecode\n    }]);\n    console.log(\"tx:\", tx)\n} catch (e) {\n    console.log(\"e:\", e)\n    expect(e.toString()).to.be.contains(\"gas\")\n    return\n}\nexpect(\"\").to.be.contains(\"expected throw out of gas\")",
                  "err": {},
                  "uuid": "2c5130d6-cb39-4efc-ad4d-5a79c3df22ea",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "gasLimit is 0 => out of gas",
                  "fullTitle": "sendRawTransaction  gasLimit gasLimit is 0 => out of gas",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "40ee5c92-9885-4019-b176-4f2c6b88f860",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "gasLimit very large => exceeds  gas limit",
                  "fullTitle": "sendRawTransaction  gasLimit gasLimit very large => exceeds  gas limit",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//https://github.com/nervosnetwork/godwoken-web3/issues/259\nlet gasPrice = await getGasPrice(ethers.provider);\nconsole.log(\"begin\")\ntry {\n    let tx = await ethers.provider.send(\"eth_sendTransaction\", [{\n        \"gas\": \"0xffffffffff\",\n        \"gasPrice\": gasPrice,\n        \"data\": fallbackAndReceiveContract.bytecode\n    }]);\n} catch (e) {\n    expect(e.toString()).to.be.contains(\"exceeds\")\n    return\n}\nexpect(\"\").to.be.contains(\"expected throw out of gas ：https://github.com/nervosnetwork/godwoken-web3/issues/259\")",
                  "err": {},
                  "uuid": "a11c00c7-4ad6-4d9b-9562-4ea797922f5e",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [
                "40ee5c92-9885-4019-b176-4f2c6b88f860"
              ],
              "skipped": [
                "53872261-a8df-4bde-b0c1-62d9f3a9ed9f",
                "03c8823e-dcf5-4991-b0df-92399b5b64c6",
                "2c5130d6-cb39-4efc-ad4d-5a79c3df22ea",
                "a11c00c7-4ad6-4d9b-9562-4ea797922f5e"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 40000
            },
            {
              "uuid": "a727c7bb-ee4e-4cb9-94cd-85d5f952775b",
              "title": "gasPrice",
              "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/rpc/sendRawTransaction.js",
              "file": "/test/rpc/sendRawTransaction.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "gasPrice is zero => to do( wait ) invoke success",
                  "fullTitle": "sendRawTransaction  gasPrice gasPrice is zero => to do( wait ) invoke success",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "7d9cccc9-a801-40a8-abcc-8de589eaf36e",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "gasPrice is very max  => sender doesn't have enough funds to send tx",
                  "fullTitle": "sendRawTransaction  gasPrice gasPrice is very max  => sender doesn't have enough funds to send tx",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "try {\n    let tx = await ethers.provider.send(\"eth_sendTransaction\", [{\n        \"gasPrice\": \"0xfffffffffffffffff\",\n        \"data\": fallbackAndReceiveContract.bytecode\n    }]);\n    console.log(\"tx:\", tx)\n    let response = await getTxReceipt(ethers.provider, tx, 100)\n    console.log(\"response :\", response)\n    let txInfo = await ethers.provider.getTransaction(tx)\n    console.log(\"txInfo:\", txInfo)\n} catch (e) {\n    expect(e.toString()).to.be.contains(\"sender doesn't have enough funds to send tx\")\n    return\n}\nexpect(\"\").to.be.contains(\"expected throw out of gas\")",
                  "err": {},
                  "uuid": "2e457972-6037-4bc5-89da-1e781653d6da",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "gasPrice比同等交易的要高 => 无序",
                  "fullTitle": "sendRawTransaction  gasPrice gasPrice比同等交易的要高 => 无序",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let accounts = await ethers.getSigners();\n            let balances = []\n            for (let i = 0; i < accounts.length; i++) {\n                let await_balance = ethers.provider.getBalance(accounts[i].address);\n                balances.push(await_balance)\n            }\n            for (let i = 0; i < accounts.length; i++) {\n                console.log(accounts[i].address + \":\", await balances[i])\n            }\n            // 第一个账户发送 gasPrice: 1，2，3，4，5 ，6\n            let currentGasPrice = BigNumber.from('0x10');\n            let txs = []\n            for (let i = 0; i < accounts.length; i++) {\n                try {\n                    currentGasPrice = currentGasPrice.add(BigNumber.from(\"0x01\"))\n                    console.log(\"currentGasPrice:\", currentGasPrice._hex)\n                    let tx = ethers.provider.send(\"eth_sendTransaction\", [{\n                        \"from\": accounts[i].address,\n                        \"gasPrice\": currentGasPrice.toHexString(),\n                        \"data\": logContract.bytecode\n                    }]);\n                    txs.push(tx)\n                } catch (e) {\n                    console.log(\"account :\", accounts[i])\n                    console.log(e.toString())\n                }\n            }\n            let responses = []\n            for (let i = 0; i < txs.length; i++) {\n                try {\n                    let response = getTxReceipt(ethers.provider, await txs[i], 5)\n                    console.log(\"???\")\n                    responses.push(response)\n                } catch (e) {\n                    console.log(e)\n                }\n            }\n            for (let i = 0; i < responses.length; i++) {\n                let res = await responses[i];\n                console.log(\"res:\" + i + \" \" + res.from + \":\" + \"blockNumber :\" + res.blockNumber + \" txHash\" + res.transactionHash + \" idx:\" + res.transactionIndex)\n            }\n            for (let i = 0; i < txs.length; i++) {\n                try {\n                    let response = getTxReceipt(ethers.provider, await txs[i], 5)\n                    console.log(\"???\")\n                    responses.push(response)\n                } catch (e) {\n                    console.log(e)\n                }\n            }\n            for (let i = 0; i < responses.length; i++) {\n                let res = await responses[i];\n                console.log(\"res:\" + i + \" \" + res.from + \":\" + \"blockNumber :\" + res.blockNumber + \" txHash\" + res.transactionHash + \" idx:\" + res.transactionIndex)\n            }",
                  "err": {},
                  "uuid": "3fd73715-85a1-404f-8117-2c991a4d242c",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [
                "7d9cccc9-a801-40a8-abcc-8de589eaf36e"
              ],
              "skipped": [
                "2e457972-6037-4bc5-89da-1e781653d6da",
                "3fd73715-85a1-404f-8117-2c991a4d242c"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 40000
            },
            {
              "uuid": "8e76a965-6498-445c-b22e-80f9c9752c7d",
              "title": "value",
              "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/rpc/sendRawTransaction.js",
              "file": "/test/rpc/sendRawTransaction.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "value is 0=> normal tx",
                  "fullTitle": "sendRawTransaction  value value is 0=> normal tx",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let account0Address = await ethers.provider.getSigner(0).getAddress()\nlet beforeDeployBalance = await ethers.provider.getBalance(account0Address)\nlet tx = await ethers.provider.send(\"eth_sendTransaction\", [{\n    \"data\": fallbackAndReceiveContract.bytecode,\n    \"gasPrice\": \"0x0\",\n    \"value\": null,\n}]);\nlet response = await getTxReceipt(ethers.provider, tx, 10)\nlet txMsg = await ethers.provider.getTransaction(tx)\nlet afterDeployBalance = await ethers.provider.getBalance(account0Address)\nexpect(beforeDeployBalance).to.be.equal(afterDeployBalance);",
                  "err": {},
                  "uuid": "b3f92fe7-26f1-42f1-ba05-6481ef15a12f",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "value is 500 =>  to+500 ,from -500",
                  "fullTitle": "sendRawTransaction  value value is 500 =>  to+500 ,from -500",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let account0Address = await ethers.provider.getSigner(0).getAddress();\nlet beforeDeployBalance = await ethers.provider.getBalance(account0Address)\nlet tx = await ethers.provider.send(\"eth_sendTransaction\", [{\n    \"data\": logContract.bytecode,\n    \"gasPrice\": \"0x0\",\n    \"value\": \"0x5\",\n}]);\nlet response = await getTxReceipt(ethers.provider, tx, 10)\nlet afterDeployBalance = await ethers.provider.getBalance(account0Address)\nlet contractBalance = await ethers.provider.getBalance(response.contractAddress)\nexpect(beforeDeployBalance.sub(BigNumber.from(\"0x5\"))).to.be.equal(afterDeployBalance);\nexpect(contractBalance).to.be.equal(BigNumber.from(\"0x5\"));",
                  "err": {},
                  "uuid": "aaa36645-ac95-485f-b841-e78fac3fa8c4",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "value > from balance => faild tx:sender doesn't have enough funds to send tx",
                  "fullTitle": "sendRawTransaction  value value > from balance => faild tx:sender doesn't have enough funds to send tx",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "try {\n    let tx = await ethers.provider.send(\"eth_sendTransaction\", [{\n        \"data\": fallbackAndReceiveContract.bytecode,\n        \"gasPrice\": \"0x0\",\n        \"value\": \"0x5000000000000000000000000000000\",\n    }]);\n} catch (e) {\n    expect(e.toString()).to.be.contains(\"sender doesn't have enough funds to send tx\")\n}",
                  "err": {},
                  "uuid": "8055f5f4-65ff-49d6-8980-6a0fdd70d1ab",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "b3f92fe7-26f1-42f1-ba05-6481ef15a12f",
                "aaa36645-ac95-485f-b841-e78fac3fa8c4",
                "8055f5f4-65ff-49d6-8980-6a0fdd70d1ab"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 40000
            },
            {
              "uuid": "b5fa9358-c7de-477f-b61f-a45c42e6a8ae",
              "title": "value gas gasPrice",
              "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/rpc/sendRawTransaction.js",
              "file": "/test/rpc/sendRawTransaction.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "balance = balance-value-gasPrice*gasUsed",
                  "fullTitle": "sendRawTransaction  value gas gasPrice balance = balance-value-gasPrice*gasUsed",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let beforeDeployBalance = await ethers.provider.getBalance(ethers.provider.getSigner(0).getAddress())\n            let tx = await ethers.provider.send(\"eth_sendTransaction\", [{\n                \"data\": logContract.bytecode,\n                \"gasPrice\": \"0x5000\",\n                \"value\": \"0x11\",\n            }]);\n            let response = await getTxReceipt(ethers.provider, tx, 10)\n            let afterDeployBalance = await ethers.provider.getBalance(ethers.provider.getSigner(0).getAddress())\n            expect(beforeDeployBalance.sub(BigNumber.from(\"0x5000\").mul(response.gasUsed)).sub(BigNumber.from(\"0x11\"))).to.be.equal(afterDeployBalance);",
                  "err": {},
                  "uuid": "33023763-5201-4feb-965e-a65d98db5602",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "33023763-5201-4feb-965e-a65d98db5602"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 40000
            },
            {
              "uuid": "b6d15438-b473-4ccf-878b-7370da10fafc",
              "title": "data ,to ",
              "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/rpc/sendRawTransaction.js",
              "file": "/test/rpc/sendRawTransaction.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "to has fallback func,data is 0x",
                  "fullTitle": "sendRawTransaction  data ,to  to has fallback func,data is 0x",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let contract = await fallbackAndReceiveContract.deploy();\nawait contract.deployed()\nconsole.log(\"address:\", contract.address)\nlet tx = await ethers.provider.send(\"eth_sendTransaction\", [{\n    \"to\": contract.address,\n    \"data\": null,\n}]);\nlet response = await getTxReceipt(ethers.provider, tx, 10)\nconsole.log(\"response:\", response)",
                  "err": {},
                  "uuid": "67b706c8-1d04-4246-8b41-60d325e34071",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "data is contract func ",
                  "fullTitle": "sendRawTransaction  data ,to  data is contract func ",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "a4679a4c-5b8c-4524-92bd-8baf08546a63",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "data payload to is null=> deploy",
                  "fullTitle": "sendRawTransaction  data ,to  data payload to is null=> deploy",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let tx = await ethers.provider.send(\"eth_sendTransaction\", [{\n    \"to\": null,\n    \"data\": logContract.payload,\n}])\nlet response = await getTxReceipt(ethers.provider, tx, 10)\nconsole.log(\"response-:\", response)",
                  "err": {},
                  "uuid": "aee890a2-c60d-4025-90fd-3385b8cd2e97",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [
                {
                  "uuid": "7ab6c8e9-54f0-4c42-8304-800fe29e8a68",
                  "title": "nonce",
                  "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/rpc/sendRawTransaction.js",
                  "file": "/test/rpc/sendRawTransaction.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "nonce 为下一笔正常交易=> pending 和 latest 返回的nonce值是一样的",
                      "fullTitle": "sendRawTransaction  data ,to  nonce nonce 为下一笔正常交易=> pending 和 latest 返回的nonce值是一样的",
                      "timedOut": false,
                      "duration": 0,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let currentAddress = await ethers.provider.getSigner().getAddress();\n                let sendBeforeNonces =await getTxCount(currentAddress);\n                let penddingNonce = await ethers.provider.getTransactionCount(ethers.provider.getSigner().getAddress(), \"pending\")\n                let tx = await ethers.provider.getSigner().sendTransaction({\n                    \"to\": null,\n                    \"nonce\": penddingNonce,\n                    \"data\": logContract.bytecode,\n                })\n                let sendReturnHashNonces = await getTxCount(currentAddress);\n                expect(sendBeforeNonces[0]).to.be.equal(sendBeforeNonces[1])\n                expect(sendReturnHashNonces[0]).to.be.equal(sendReturnHashNonces[1])\n                expect(sendBeforeNonces[0]+1).to.be.equal(sendReturnHashNonces[1])",
                      "err": {},
                      "uuid": "ba1601ef-8a54-4882-b9e8-207503fd6a79",
                      "parentUUID": null,
                      "isHook": false,
                      "skipped": true
                    },
                    {
                      "title": "nonce 为一笔非法交易=> pending 和 latest 不更新",
                      "fullTitle": "sendRawTransaction  data ,to  nonce nonce 为一笔非法交易=> pending 和 latest 不更新",
                      "timedOut": false,
                      "duration": 0,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let currentAddress = await ethers.provider.getSigner().getAddress();\n                let sendBeforeNonces =await getTxCount(currentAddress);\n                let penddingNonce = await ethers.provider.getTransactionCount(ethers.provider.getSigner().getAddress(), \"pending\")\n                let tx = await ethers.provider.getSigner().sendTransaction({\n                    \"to\": null,\n                    \"nonce\": penddingNonce,\n                    \"data\": \"0x12122121121211212211\",\n                })\n                let sendReturnHashNonces = await getTxCount(currentAddress);\n                expect(sendBeforeNonces[0]).to.be.equal(sendBeforeNonces[1])\n                expect(sendReturnHashNonces[0]).to.be.equal(sendReturnHashNonces[1])\n                expect(sendBeforeNonces[0]).to.be.equal(sendReturnHashNonces[1])",
                      "err": {},
                      "uuid": "711b0500-fe92-4dc0-acdc-4c05301b9990",
                      "parentUUID": null,
                      "isHook": false,
                      "skipped": true
                    },
                    {
                      "title": "nonce 为之前的交易 => invalid nonce ",
                      "fullTitle": "sendRawTransaction  data ,to  nonce nonce 为之前的交易 => invalid nonce ",
                      "timedOut": false,
                      "duration": 0,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let penddingNonce = await ethers.provider.getTransactionCount(ethers.provider.getSigner().getAddress(), \"pending\")\nconsole.log(\"pendding:\",penddingNonce)\ntry {\n    let tx = await ethers.provider.getSigner().sendTransaction({\n        \"to\": null,\n        \"nonce\": penddingNonce-1,\n        \"data\": logContract.bytecode,\n    })\n}catch (e){\n    expect(e.toString()).to.be.contains(\"invalid nonce\")\n    return\n}\nexpect(\"\").to.be.equal(\"failed\")",
                      "err": {},
                      "uuid": "3b198d38-6902-41a8-bf0d-91d70c890043",
                      "parentUUID": null,
                      "isHook": false,
                      "skipped": true
                    },
                    {
                      "title": "nonce 为未来的交易  => invalid nonce ",
                      "fullTitle": "sendRawTransaction  data ,to  nonce nonce 为未来的交易  => invalid nonce ",
                      "timedOut": false,
                      "duration": 0,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "let penddingNonce = await ethers.provider.getTransactionCount(ethers.provider.getSigner().getAddress(), \"pending\")\nconsole.log(\"pendding:\",penddingNonce)\ntry {\n    let tx = await ethers.provider.getSigner().sendTransaction({\n        \"to\": null,\n        \"nonce\": penddingNonce+1,\n        \"data\": logContract.bytecode,\n    })\nconsole.log(\"tx:\",tx)\n}catch (e){\n    expect(e.toString()).to.be.contains(\"invalid nonce\")\n    return\n}\nexpect(\"\").to.be.equal(\"failed\")",
                      "err": {},
                      "uuid": "430ebfa0-3b7d-4038-b4e1-f0de7539116b",
                      "parentUUID": null,
                      "isHook": false,
                      "skipped": true
                    }
                  ],
                  "suites": [],
                  "passes": [],
                  "failures": [],
                  "pending": [],
                  "skipped": [
                    "ba1601ef-8a54-4882-b9e8-207503fd6a79",
                    "711b0500-fe92-4dc0-acdc-4c05301b9990",
                    "3b198d38-6902-41a8-bf0d-91d70c890043",
                    "430ebfa0-3b7d-4038-b4e1-f0de7539116b"
                  ],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 40000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "67b706c8-1d04-4246-8b41-60d325e34071",
                "a4679a4c-5b8c-4524-92bd-8baf08546a63",
                "aee890a2-c60d-4025-90fd-3385b8cd2e97"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 40000
            },
            {
              "uuid": "9327f1e0-403a-4867-bb0f-fde396312851",
              "title": "nonce gasprice",
              "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/rpc/sendRawTransaction.js",
              "file": "/test/rpc/sendRawTransaction.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "发送10笔 nonce 为同一个值 gasPrice  从0-10的交易",
                  "fullTitle": "sendRawTransaction  nonce gasprice 发送10笔 nonce 为同一个值 gasPrice  从0-10的交易",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "123b1f96-ebfe-4363-a6ba-49374f9949b0",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [
                "123b1f96-ebfe-4363-a6ba-49374f9949b0"
              ],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 40000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "e25dda68-ef85-4ac4-ab64-410a0ca51822",
          "title": "sendTransaction ",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/rpc/sendTransaction.js",
          "file": "/test/rpc/sendTransaction.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "not support",
              "fullTitle": "sendTransaction  not support",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//todo wait\n\n\nlet tx = await ethers.provider.send(\"eth_sendTransaction\",[{\n    \"from\": \"0x0c1efcca2bcb65a532274f3ef24c044ef4ab6d73\",\n    \"to\": \"0x0c1efcca2bcb65a532274f3ef24c044ef4ab6d73\",\n    \"gas\": \"0x76c0\",\n    \"gasPrice\": \"0x9184e72a000\",\n    \"value\": \"0x9184e72a\",\n    \"data\": \"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675\"\n}]);\n// expect(\"\").to.be.contains(\"failed\")",
              "err": {},
              "uuid": "d658c88d-b3e8-4c08-a8ca-0ee95e352b85",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "d658c88d-b3e8-4c08-a8ca-0ee95e352b85"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "ad899ab9-06c8-442c-a360-fa53911d7b47",
          "title": "sign",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/rpc/sign.test.js",
          "file": "/test/rpc/sign.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "not support",
              "fullTitle": "sign not support",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    await ethers.provider.send(\"sign\", [\"0x9b2055d370f73ec7d8a03e965129118dc8f5bf83\", \"0xdeadbeaf\"]);\n    expect(\"\").to.be.contains(\"failed\")\n} catch (e) {\n    console.log(e)\n    expect(e.toString()).to.be.contains(\"Method not found\")\n}",
              "err": {},
              "uuid": "9c690013-e9cb-4eda-b6b2-cc0330b7280f",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "9c690013-e9cb-4eda-b6b2-cc0330b7280f"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "0215af0e-9983-42cb-9150-39c22042994b",
          "title": "typeU8 ",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/type/types_test.js",
          "file": "/test/type/types_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "typeU8  \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const blockInfoContract = await ethers.getContractFactory(\"typeU8\");\ncontract = await blockInfoContract.deploy();\nconsole.log(\"deployTransaction:\",contract.deployTransaction.hash);\nconsole.log(\"address:\",await contract.address);\nawait contract.deployed();",
              "err": {},
              "uuid": "c0f4b507-57d5-4710-b0b1-0a0815267baa",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "typeU8 max:",
              "fullTitle": "typeU8  typeU8 max:",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// check if chain id from web3 is same as chainId opcode\ncontract.on(\"U8eventIndex\",(u8,u8s,uint8s3) => {\n    // Emitted on every block change\n    console.log(\"---event---begin --\")\n    console.log(\"u8\",u8);\n    console.log(\"u8s\",u8s);\n    console.log(\"uint8s3\",uint8s3);\n    console.log(\"---event---end--\")\n})\ncontract.on(\"U8event\",(u8,u8s,uint8s3) => {\n    // Emitted on every block change\n    console.log(\"---event---begin --\")\n    console.log(\"u8\",u8);\n    console.log(\"u8s\",u8s);\n    console.log(\"uint8s3\",uint8s3);\n    console.log(\"---event---end--\");\n})\nlet tx = await contract.typeUint8(255,[255,255,255],[255,255,255]);\nconsole.log(\"typeUint8 hash :\",tx.hash);\nlet reusltGetUint8 =await contract.getUint8();\nexpect(reusltGetUint8.toString()).to.be.equal('255,255,255,255,255,255,255')",
              "err": {},
              "uuid": "0a190674-db69-4ffd-b6be-2b2955156163",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "typeU8 beyond 255:",
              "fullTitle": "typeU8  typeU8 beyond 255:",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\nlet tx = await contract.typeUint8(256,[256,256,256],[256,256,256]);\nconsole.log(\"typeUint8 hash :\",tx.hash);\nawait tx.wait();\nlet reusltGetUint8 = await contract.getUint8();\nexpect(reusltGetUint8.toString()).to.throw(Error)\n} catch (error) {\n    expect(error.toString()).to.be.contains('out-of-bounds')\n}",
              "err": {},
              "uuid": "ac0d4e86-6f68-4f28-877f-43e8fe9b5b95",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "typeU8 minest 0: ",
              "fullTitle": "typeU8  typeU8 minest 0: ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let tx = await contract.typeUint8(0,[0,0,0],[0,0,0]);\nconsole.log(\"typeUint8 hash :\",tx.hash);\nawait tx.wait();\nlet reusltGetUint8 = await contract.getUint8();\nexpect(reusltGetUint8.toString()).to.be.equal('0,0,0,0,0,0,0')",
              "err": {},
              "uuid": "d977e170-3e4a-438f-9fda-2e7568af9c37",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "typeU8 below 0: ",
              "fullTitle": "typeU8  typeU8 below 0: ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let tx;\ntry\n{\n    let tx = await contract.typeUint8(-1,[0,0,0],[0,0,0]);\n    await tx.wait();\n }\n      catch (e) {\n  expect(e.toString()).to.be.contains('out-of-bounds')\n }",
              "err": {},
              "uuid": "1991b984-f4fc-45b9-9ea6-cb5eb033f36d",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "typeU256 max: ",
              "fullTitle": "typeU8  typeU256 max: ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await contract.setUint256(65535);\nlet x =await contract.getUint256();\nexpect(x).to.be.equal(65535)",
              "err": {},
              "uuid": "4f6ba622-0795-4be5-b424-d2cb8bf12825",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "typeU256 beyond max: ",
              "fullTitle": "typeU8  typeU256 beyond max: ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    await contract.setUint256(965536111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111);\n    let x =await contract.getUint256();\n}\ncatch(e)\n{\n    expect(e.toString()).to.be.contains('overflow')\n}",
              "err": {},
              "uuid": "6e90fd4c-576e-40fb-b1bc-38b7eb017c0a",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "0a190674-db69-4ffd-b6be-2b2955156163",
            "ac0d4e86-6f68-4f28-877f-43e8fe9b5b95",
            "d977e170-3e4a-438f-9fda-2e7568af9c37",
            "1991b984-f4fc-45b9-9ea6-cb5eb033f36d",
            "4f6ba622-0795-4be5-b424-d2cb8bf12825",
            "6e90fd4c-576e-40fb-b1bc-38b7eb017c0a"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "7d83e3ab-6e79-4f49-b3b6-b49b0b83fd19",
          "title": "typeI8 ",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/type/types_test.js",
          "file": "/test/type/types_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "typeI8  \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const blockInfoContract = await ethers.getContractFactory(\"typeI8\");\n            contract = await blockInfoContract.deploy();\n            console.log(\"deployTransaction:\", await contract.deployTransaction.hash);\n            console.log(\"address:\",await contract.address);\n            await contract.deployed();",
              "err": {},
              "uuid": "43d8738c-ed63-4caf-97c5-0edf1df1c60e",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "typeI8 max 127 ",
              "fullTitle": "typeI8  typeI8 max 127 ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let tx = await contract.typeInt8(127,[127,127,127],[127,127,127]);\n            console.log(\"typeI8 hash :\",tx.hash);\n            await tx.wait();\n            let reusltGetInt8 = await contract.getInt8();\n            expect(reusltGetInt8.toString()).to.be.equal('127,127,127,127,127,127,127');",
              "err": {},
              "uuid": "583a9f87-9a7a-4a88-8e19-fc29664ad1aa",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "typeI8 max beyond 127 ",
              "fullTitle": "typeI8  typeI8 max beyond 127 ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let tx = await contract.typeInt8(128,[128,128,128],[128,128,128]);\n    console.log(\"typeI8 hash :\",tx.hash);\n    await tx.wait();\n    let reusltGetInt8 = await contract.getInt8();\n    expect(reusltGetInt8.toString()).to.throw(Error);\n} catch (error) {\n}",
              "err": {},
              "uuid": "fa949f2a-b45d-4c36-9654-ea8cc4bddce1",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "583a9f87-9a7a-4a88-8e19-fc29664ad1aa",
            "fa949f2a-b45d-4c36-9654-ea8cc4bddce1"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "9c4c336a-3cd3-4246-8a71-82abc29d6b45",
          "title": "typeBool",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/type/types_test.js",
          "file": "/test/type/types_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "typeBool \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const blockInfoContract = await ethers.getContractFactory(\"typeBool\");\n        contract = await blockInfoContract.deploy();\n        console.log(\"deployTransaction:\",await contract.deployTransaction.hash);\n        console.log(\"address:\",await contract.address);\n        await contract.deployed();",
              "err": {},
              "uuid": "cc32beac-555f-4218-827f-76d1a02b3929",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "typeBool1",
              "fullTitle": "typeBool typeBool1",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let a = await contract.getBoolA()\n        expect(a).to.be.true;",
              "err": {},
              "uuid": "90d03f06-3455-4baf-a9ab-a6d688ac76a3",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "typeBool2",
              "fullTitle": "typeBool typeBool2",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let b = await contract.getBoolB();\n        expect(b).to.be.true;",
              "err": {},
              "uuid": "f78bcb2b-ea2b-44c8-ae5e-1a33aedfa41a",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "typeBool3",
              "fullTitle": "typeBool typeBool3",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let c = await contract.getOrBool();\n        expect(c).to.be.true;",
              "err": {},
              "uuid": "10236fb6-bff9-416d-b32f-fedadf35edb5",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "typeBool4",
              "fullTitle": "typeBool typeBool4",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let c = await contract.getAndBool();\n        expect(c).to.be.false;",
              "err": {},
              "uuid": "55357071-b74d-4a1b-8c55-f22c11564ebd",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "typeBool5",
              "fullTitle": "typeBool typeBool5",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let c = await contract.getBoolC();\n        expect(c).to.be.false;",
              "err": {},
              "uuid": "f31e65d8-39a8-44b8-b9ed-06a07027cd00",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "90d03f06-3455-4baf-a9ab-a6d688ac76a3",
            "f78bcb2b-ea2b-44c8-ae5e-1a33aedfa41a",
            "10236fb6-bff9-416d-b32f-fedadf35edb5",
            "55357071-b74d-4a1b-8c55-f22c11564ebd",
            "f31e65d8-39a8-44b8-b9ed-06a07027cd00"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "f883ff7f-1607-4ebb-8cde-55afc7997968",
          "title": "typeAddress",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/type/types_test.js",
          "file": "/test/type/types_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "typeAddress \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"Start to test:\");",
              "err": {},
              "uuid": "a1eb1709-f87e-4286-8a09-660fe9e4db68",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "typeAddress get addr1 balance:",
              "fullTitle": "typeAddress typeAddress get addr1 balance:",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const blockInfoContract = await ethers.getContractFactory(\"typeAddress\");\ncontract = await blockInfoContract.deploy();\nconsole.log(\"deployTransaction:\",contract.deployTransaction.hash);\nconsole.log(\"address:\",contract.address);\nawait contract.deployed();\nlet tx = await contract.getBalanceBb();\nconsole.log(\"The addr1 balance is:\",tx);\nexpect(tx.toString()).to.equal(\"0\")",
              "err": {},
              "uuid": "75f56cdc-5325-4eab-8e3f-0c610ee0858b",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "typeAddress get contract balance:",
              "fullTitle": "typeAddress typeAddress get contract balance:",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let tx = await contract.getContractBalance();\n        console.log(\"The contract balance is:\",tx);\n        //expect(tx.toString()).to.equal(0)",
              "err": {},
              "uuid": "5e9d3ebe-363e-420e-90f3-e8e7aa09aaea",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "75f56cdc-5325-4eab-8e3f-0c610ee0858b",
            "5e9d3ebe-363e-420e-90f3-e8e7aa09aaea"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "29f093a6-5500-4236-bf93-9853f9795aeb",
          "title": "typeBytes",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/type/types_test.js",
          "file": "/test/type/types_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "typeBytes \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const blockInfoContract = await ethers.getContractFactory(\"typeBytes\");\n        contract = await blockInfoContract.deploy();\n        console.log(\"deployTransaction:\", contract.deployTransaction.hash);\n        console.log(\"adress:\",await contract.address);\n        await contract.deployed();",
              "err": {},
              "uuid": "765c48e1-eee8-4b70-8e1e-643348a3a43a",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "typeBytes  1:",
              "fullTitle": "typeBytes typeBytes  1:",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let bytes1Length = await contract.getbBytes1Length();\n        console.log(\"The Bytes min length is :\",bytes1Length);\n        expect(bytes1Length).to.equal(1)",
              "err": {},
              "uuid": "eae1f430-68ec-4362-8ed2-8b283c68c396",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "typeBytes 2:",
              "fullTitle": "typeBytes typeBytes 2:",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await contract.pushUnFixedAByte(1);\n        console.log(\"The Bytes min length is :\",await contract.getbBytes2Length());",
              "err": {},
              "uuid": "7dda7c15-2c0a-4a5b-a6d8-cae039758f57",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "typeBytes 3:",
              "fullTitle": "typeBytes typeBytes 3:",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let bytes2Length = await contract.getbBytes2Length();\n        console.log(\"The Bytes max length is :\",bytes2Length);\n        expect(bytes2Length).to.equal(32)",
              "err": {},
              "uuid": "4d42aae8-7dfc-40eb-98e5-3e80dbfdca0e",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "typeBytes 4:",
              "fullTitle": "typeBytes typeBytes 4:",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let bytes3Length = await contract.testBytesMaxLength(\"cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc\");\n        console.log(\"The Bytes max length is :\",bytes3Length);\n        expect(bytes3Length).to.equal(32)",
              "err": {},
              "uuid": "5ad7d50f-35a9-4276-86d9-51da3f1cec7f",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "typeBytes 5:",
              "fullTitle": "typeBytes typeBytes 5:",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let unFixedBytesLength = await contract.unFixedBytesLength();\n        console.log(\"The Bytes length is :\",unFixedBytesLength);\n        expect(unFixedBytesLength).to.equal(17956)",
              "err": {},
              "uuid": "902a5960-0110-46a1-b09e-f6091a4cd576",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "eae1f430-68ec-4362-8ed2-8b283c68c396",
            "7dda7c15-2c0a-4a5b-a6d8-cae039758f57",
            "4d42aae8-7dfc-40eb-98e5-3e80dbfdca0e",
            "5ad7d50f-35a9-4276-86d9-51da3f1cec7f",
            "902a5960-0110-46a1-b09e-f6091a4cd576"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "7254ba6e-9e43-48b7-a354-c240267b0838",
          "title": "typeString",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/type/types_test.js",
          "file": "/test/type/types_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "typeString \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const blockInfoContract = await ethers.getContractFactory(\"typeString\");\n        contract = await blockInfoContract.deploy();\n        console.log(\"deployTransaction:\",contract.deployTransaction.hash);\n        console.log(\"adress:\",contract.address);\n        await contract.deployed();",
              "err": {},
              "uuid": "9416f042-3fbd-4c66-aa99-77b50857de58",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "typeString:",
              "fullTitle": "typeString typeString:",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let stringLength = await contract.getLength();\n        console.log(\"The string length is :\",stringLength);\n        expect(stringLength).to.equal(9)",
              "err": {},
              "uuid": "42ace723-44b5-4fd4-937f-bb416d5cc2ad",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "typeString:",
              "fullTitle": "typeString typeString:",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await contract.changName();\n        console.log(\"The new string  is :\", await contract.getName());\n        expect(await contract.getName()).to.equal(\"Zrptotest\")",
              "err": {},
              "uuid": "018295d9-c549-49d9-ab34-9816a0ab5d0b",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "42ace723-44b5-4fd4-937f-bb416d5cc2ad",
            "018295d9-c549-49d9-ab34-9816a0ab5d0b"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "38316096-76dc-41d6-9f97-d1ddfbcbd800",
          "title": "typeEmum",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/type/types_test.js",
          "file": "/test/type/types_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "typeEmum \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const blockInfoContract = await ethers.getContractFactory(\"typeEmum\");\n        contract = await blockInfoContract.deploy();\n        console.log(\"deployTransaction:\",contract.deployTransaction.hash);\n        console.log(\"adress:\",contract.address);\n        await contract.deployed();",
              "err": {},
              "uuid": "7e792d01-d871-4960-9a01-f1679248737b",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "typeEmum:",
              "fullTitle": "typeEmum typeEmum:",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await contract.setGoStraight();\n        let printSeason = await contract.getChoice();\n        console.log(printSeason);\n        //expect(printSeason).to.equal(contract.ActionChoices)\n        let printSeason2 = await contract.getDefaultChoice();\n        console.log(printSeason2);",
              "err": {},
              "uuid": "15c0c56c-bd36-4d10-a2ae-5cae175b835d",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "15c0c56c-bd36-4d10-a2ae-5cae175b835d"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "d18ac28c-03b4-4911-a233-b75fb0413f15",
          "title": "typeFixedArray",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/type/types_test.js",
          "file": "/test/type/types_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "typeFixedArray \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const blockInfoContract = await ethers.getContractFactory(\"typeFixedArray\");\n        contract = await blockInfoContract.deploy();\n        console.log(\"deployTransaction:\",contract.deployTransaction.hash);\n        console.log(\"adress:\",contract.address);\n        await contract.deployed();",
              "err": {},
              "uuid": "198446d3-35dc-45b0-b401-116a659af9be",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "typeFixedArray:",
              "fullTitle": "typeFixedArray typeFixedArray:",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let sum = await  contract.sum();\n        console.log(sum);\n        expect(sum).to.equal(15)",
              "err": {},
              "uuid": "80b2f1e1-3175-489e-b1b7-321c3e0d4ccf",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "typeUnFixedArray:",
              "fullTitle": "typeFixedArray typeUnFixedArray:",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let sum = await  contract.unsum();\n        console.log(sum);\n        expect(sum).to.equal(15)",
              "err": {},
              "uuid": "b9238e0f-9b3c-45b9-9b8a-7342fdceeac2",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "typeUnFixedArray Push:",
              "fullTitle": "typeFixedArray typeUnFixedArray Push:",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let unfixedArr = await  contract.unFixedArrPush();\n        console.log(unfixedArr);",
              "err": {},
              "uuid": "d13893e1-8e21-4a12-9c9d-f731a878478b",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "80b2f1e1-3175-489e-b1b7-321c3e0d4ccf",
            "b9238e0f-9b3c-45b9-9b8a-7342fdceeac2",
            "d13893e1-8e21-4a12-9c9d-f731a878478b"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "12b944ed-97e2-4f70-b8d9-0e973be2c2e8",
          "title": "eth_call ",
          "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/v11/evmTransfer.test.js",
          "file": "/test/v11/evmTransfer.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "eth_call  \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fallbackAndReceiveContract = await ethers.getContractFactory(\"fallbackAndReceive\");\nlogContract = await ethers.getContractFactory(\"LogContract\");\nlogContract.deploy()",
              "err": {},
              "uuid": "d3c4fae5-0dd1-4c6a-988a-955d32fcc68e",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "5b6a0249-8cad-452e-9e63-f57df4046fa5",
              "title": "transfer to un register account",
              "fullFile": "/Users/guopenglin/WebstormProjects/godwoken-acceptance/test/v11/evmTransfer.test.js",
              "file": "/test/v11/evmTransfer.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "from address not exist = > from id not exist",
                  "fullTitle": "eth_call  transfer to un register account from address not exist = > from id not exist",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "try {\n    let result = await ethers.provider.send(\"eth_call\", [{\n        \"from\": \"0x0c1efcca2bcb65a532274f3ef24c044ef4ab6d74\",\n        \"to\": \"0x0c1efcca2bcb65a532274f3ef24c044ef4ab6d73\",\n    }, \"latest\"]);\n    console.log(result)\n} catch (e) {\n    expect(e.toString()).to.be.contains(\"from id not found!\")\n    return\n}\nexpect(\"\").to.be.equal(\"failed\")",
                  "err": {},
                  "uuid": "c06f0cb6-ca75-422b-b2c1-9d703de24615",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "c06f0cb6-ca75-422b-b2c1-9d703de24615"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 40000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 40000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.2.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}